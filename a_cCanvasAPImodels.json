{
    "models": {
        "AccountCalendar": {
            "id": "AccountCalendar",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "the ID of the account associated with this calendar",
                    "example": 204,
                    "type": "integer"
                },
                "name": {
                    "description": "the name of the account associated with this calendar",
                    "example": "Department of Chemistry",
                    "type": "string"
                },
                "parent_account_id": {
                    "description": "the account's parent ID, or null if this is the root account",
                    "example": 1,
                    "type": "integer"
                },
                "root_account_id": {
                    "description": "the ID of the root account, or null if this is the root account",
                    "example": 1,
                    "type": "integer"
                },
                "visible": {
                    "description": "whether this calendar is visible to users",
                    "example": true,
                    "type": "boolean"
                },
                "sub_account_count": {
                    "description": "number of this account's direct sub-accounts",
                    "example": 0,
                    "type": "integer"
                },
                "asset_string": {
                    "description": "Asset string of the account",
                    "example": "account_4",
                    "type": "string"
                },
                "type": {
                    "description": "Object type",
                    "example": "account",
                    "type": "string"
                },
                "calendar_event_url": {
                    "description": "url to get full detailed events",
                    "example": "/accounts/2/calendar_events/%7B%7B%20id%20%7D%7D",
                    "type": "string"
                },
                "can_create_calendar_events": {
                    "description": "whether the user can create calendar events",
                    "example": true,
                    "type": "boolean"
                },
                "create_calendar_event_url": {
                    "description": "API path to create events for the account",
                    "example": "/accounts/2/calendar_events",
                    "type": "string"
                },
                "new_calendar_event_url": {
                    "description": "url to open the more options event editor",
                    "example": "/accounts/6/calendar_events/new",
                    "type": "string"
                }
            }
        },
        "Report": {
            "id": "Report",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "The unique identifier for the report.",
                    "example": "1",
                    "type": "integer"
                },
                "report": {
                    "description": "The type of report.",
                    "example": "sis_export_csv",
                    "type": "string"
                },
                "file_url": {
                    "description": "The url to the report download.",
                    "example": "https://example.com/some/path",
                    "type": "string"
                },
                "attachment": {
                    "description": "The attachment api object of the report. Only available after the report has completed.",
                    "$ref": "File"
                },
                "status": {
                    "description": "The status of the report",
                    "example": "complete",
                    "type": "string"
                },
                "created_at": {
                    "description": "The date and time the report was created.",
                    "example": "2013-12-01T23:59:00-06:00",
                    "type": "datetime"
                },
                "started_at": {
                    "description": "The date and time the report started processing.",
                    "example": "2013-12-02T00:03:21-06:00",
                    "type": "datetime"
                },
                "ended_at": {
                    "description": "The date and time the report finished processing.",
                    "example": "2013-12-02T00:03:21-06:00",
                    "type": "datetime"
                },
                "parameters": {
                    "description": "The report parameters",
                    "example": {
                        "course_id": 2,
                        "start_at": "2012-07-13T10:55:20-06:00",
                        "end_at": "2012-07-13T10:55:20-06:00"
                    },
                    "$ref": "ReportParameters"
                },
                "progress": {
                    "description": "The progress of the report",
                    "example": "100",
                    "type": "integer"
                },
                "current_line": {
                    "description": "This is the current line count being written to the report. It updates every 1000 records.",
                    "example": "12000",
                    "type": "integer"
                }
            }
        },
        "ReportParameters": {
            "id": "ReportParameters",
            "description": "The parameters returned will vary for each report.",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "enrollment_term_id": {
                    "description": "The canvas id of the term to get grades from",
                    "example": 2,
                    "type": "integer"
                },
                "include_deleted": {
                    "description": "If true, deleted objects will be included. If false, deleted objects will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "course_id": {
                    "description": "The id of the course to report on",
                    "example": 2,
                    "type": "integer"
                },
                "order": {
                    "description": "The sort order for the csv, Options: 'users', 'courses', 'outcomes'.",
                    "example": "users",
                    "type": "string",
                    "allowableValues": {
                        "values": [
                            "users",
                            "courses",
                            "outcomes"
                        ]
                    }
                },
                "users": {
                    "description": "If true, user data will be included. If false, user data will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "accounts": {
                    "description": "If true, account data will be included. If false, account data will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "terms": {
                    "description": "If true, term data will be included. If false, term data will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "courses": {
                    "description": "If true, course data will be included. If false, course data will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "sections": {
                    "description": "If true, section data will be included. If false, section data will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "enrollments": {
                    "description": "If true, enrollment data will be included. If false, enrollment data will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "groups": {
                    "description": "If true, group data will be included. If false, group data will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "xlist": {
                    "description": "If true, data for crosslisted courses will be included. If false, data for crosslisted courses will be omitted.",
                    "example": false,
                    "type": "boolean"
                },
                "sis_terms_csv": {
                    "example": 1,
                    "type": "integer"
                },
                "sis_accounts_csv": {
                    "example": 1,
                    "type": "integer"
                },
                "include_enrollment_state": {
                    "description": "If true, enrollment state will be included. If false, enrollment state will be omitted. Defaults to false.",
                    "example": false,
                    "type": "boolean"
                },
                "enrollment_state": {
                    "description": "Include enrollment state. Defaults to 'all' Options: ['active'| 'invited'| 'creation_pending'| 'deleted'| 'rejected'| 'completed'| 'inactive'| 'all']",
                    "example": [
                        "all"
                    ],
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start_at": {
                    "description": "The beginning date for submissions. Max time range is 2 weeks.",
                    "example": "2012-07-13T10:55:20-06:00",
                    "type": "datetime"
                },
                "end_at": {
                    "description": "The end date for submissions. Max time range is 2 weeks.",
                    "example": "2012-07-13T10:55:20-06:00",
                    "type": "datetime"
                }
            }
        },
        "AccountNotification": {
            "id": "AccountNotification",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "subject": {
                    "description": "The subject of the notifications",
                    "example": "Attention Students",
                    "type": "string"
                },
                "message": {
                    "description": "The message to be sent in the notification.",
                    "example": "This is a test of the notification system.",
                    "type": "string"
                },
                "start_at": {
                    "description": "When to send out the notification.",
                    "example": "2013-08-28T23:59:00-06:00",
                    "type": "datetime"
                },
                "end_at": {
                    "description": "When to expire the notification.",
                    "example": "2013-08-29T23:59:00-06:00",
                    "type": "datetime"
                },
                "icon": {
                    "description": "The icon to display with the message.  Defaults to warning.",
                    "example": "information",
                    "type": "string",
                    "allowableValues": {
                        "values": [
                            "warning",
                            "information",
                            "question",
                            "error",
                            "calendar"
                        ]
                    }
                },
                "roles": {
                    "description": "(Deprecated) The roles to send the notification to.  If roles is not passed it defaults to all roles",
                    "example": [
                        "StudentEnrollment"
                    ],
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role_ids": {
                    "description": "The roles to send the notification to.  If roles is not passed it defaults to all roles",
                    "example": [
                        1
                    ],
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Account": {
            "id": "Account",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "the ID of the Account object",
                    "example": 2,
                    "type": "integer"
                },
                "name": {
                    "description": "The display name of the account",
                    "example": "Canvas Account",
                    "type": "string"
                },
                "uuid": {
                    "description": "The UUID of the account",
                    "example": "WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5",
                    "type": "string"
                },
                "parent_account_id": {
                    "description": "The account's parent ID, or null if this is the root account",
                    "example": 1,
                    "type": "integer"
                },
                "root_account_id": {
                    "description": "The ID of the root account, or null if this is the root account",
                    "example": 1,
                    "type": "integer"
                },
                "default_storage_quota_mb": {
                    "description": "The storage quota for the account in megabytes, if not otherwise specified",
                    "example": 500,
                    "type": "integer"
                },
                "default_user_storage_quota_mb": {
                    "description": "The storage quota for a user in the account in megabytes, if not otherwise specified",
                    "example": 50,
                    "type": "integer"
                },
                "default_group_storage_quota_mb": {
                    "description": "The storage quota for a group in the account in megabytes, if not otherwise specified",
                    "example": 50,
                    "type": "integer"
                },
                "default_time_zone": {
                    "description": "The default time zone of the account. Allowed time zones are {http://www.iana.org/time-zones IANA time zones} or friendlier {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.",
                    "example": "America/Denver",
                    "type": "string"
                },
                "sis_account_id": {
                    "description": "The account's identifier in the Student Information System. Only included if the user has permission to view SIS information.",
                    "example": "123xyz",
                    "type": "string"
                },
                "integration_id": {
                    "description": "The account's identifier in the Student Information System. Only included if the user has permission to view SIS information.",
                    "example": "123xyz",
                    "type": "string"
                },
                "sis_import_id": {
                    "description": "The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.",
                    "example": "12",
                    "type": "integer"
                },
                "lti_guid": {
                    "description": "The account's identifier that is sent as context_id in LTI launches.",
                    "example": "123xyz",
                    "type": "string"
                },
                "workflow_state": {
                    "description": "The state of the account. Can be 'active' or 'deleted'.",
                    "example": "active",
                    "type": "string"
                }
            }
        },
        "TermsOfService": {
            "id": "TermsOfService",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "Terms Of Service id",
                    "example": 1,
                    "type": "integer"
                },
                "terms_type": {
                    "description": "The given type for the Terms of Service",
                    "enum": [
                        "default",
                        "custom",
                        "no_terms"
                    ],
                    "example": "default",
                    "type": "string"
                },
                "passive": {
                    "description": "Boolean dictating if the user must accept Terms of Service",
                    "example": false,
                    "type": "boolean"
                },
                "account_id": {
                    "description": "The id of the root account that owns the Terms of Service",
                    "example": 1,
                    "type": "integer"
                },
                "content": {
                    "description": "Content of the Terms of Service",
                    "example": "To be or not to be that is the question",
                    "type": "string"
                },
                "self_registration_type": {
                    "description": "The type of self registration allowed",
                    "example": [
                        "none",
                        "observer",
                        "all"
                    ],
                    "type": "string"
                }
            }
        },
        "HelpLink": {
            "id": "HelpLink",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "The ID of the help link",
                    "example": "instructor_question",
                    "type": "string"
                },
                "text": {
                    "description": "The name of the help link",
                    "example": "Ask Your Instructor a Question",
                    "type": "string"
                },
                "subtext": {
                    "description": "The description of the help link",
                    "example": "Questions are submitted to your instructor",
                    "type": "string"
                },
                "url": {
                    "description": "The URL of the help link",
                    "example": "#teacher_feedback",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the help link",
                    "enum": [
                        "default",
                        "custom"
                    ],
                    "example": "default",
                    "type": "string"
                },
                "available_to": {
                    "description": "The roles that have access to this help link",
                    "example": [
                        "user",
                        "student",
                        "teacher",
                        "admin",
                        "observer",
                        "unenrolled"
                    ],
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HelpLinks": {
            "id": "HelpLinks",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "help_link_name": {
                    "description": "Help link button title",
                    "example": "Help And Policies",
                    "type": "string"
                },
                "help_link_icon": {
                    "description": "Help link button icon",
                    "example": "help",
                    "type": "string"
                },
                "custom_help_links": {
                    "description": "Help links defined by the account. Could include default help links.",
                    "type": "array",
                    "items": {
                        "$ref": "HelpLink"
                    },
                    "example": [
                        {
                            "id": "link1",
                            "text": "Custom Link!",
                            "subtext": "Something something.",
                            "url": "https://google.com",
                            "type": "custom",
                            "available_to": [
                                "user",
                                "student",
                                "teacher",
                                "admin",
                                "observer",
                                "unenrolled"
                            ],
                            "is_featured": true,
                            "is_new": false,
                            "feature_headline": "Check this out!"
                        }
                    ]
                },
                "default_help_links": {
                    "description": "Default help links provided when account has not set help links of their own.",
                    "type": "array",
                    "items": {
                        "$ref": "HelpLink"
                    },
                    "example": [
                        {
                            "available_to": [
                                "student"
                            ],
                            "text": "Ask Your Instructor a Question",
                            "subtext": "Questions are submitted to your instructor",
                            "url": "#teacher_feedback",
                            "type": "default",
                            "id": "instructor_question",
                            "is_featured": false,
                            "is_new": true,
                            "feature_headline": ""
                        },
                        {
                            "available_to": [
                                "user",
                                "student",
                                "teacher",
                                "admin",
                                "observer",
                                "unenrolled"
                            ],
                            "text": "Search the Canvas Guides",
                            "subtext": "Find answers to common questions",
                            "url": "https://community.canvaslms.com/t5/Guides/ct-p/guides",
                            "type": "default",
                            "id": "search_the_canvas_guides",
                            "is_featured": false,
                            "is_new": false,
                            "feature_headline": ""
                        },
                        {
                            "available_to": [
                                "user",
                                "student",
                                "teacher",
                                "admin",
                                "observer",
                                "unenrolled"
                            ],
                            "text": "Report a Problem",
                            "subtext": "If Canvas misbehaves, tell us about it",
                            "url": "#create_ticket",
                            "type": "default",
                            "id": "report_a_problem",
                            "is_featured": false,
                            "is_new": false,
                            "feature_headline": ""
                        }
                    ]
                }
            }
        },
        "Account": {
            "id": "Account",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "the ID of the Account object",
                    "example": 2,
                    "type": "integer"
                },
                "name": {
                    "description": "The display name of the account",
                    "example": "Canvas Account",
                    "type": "string"
                },
                "uuid": {
                    "description": "The UUID of the account",
                    "example": "WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5",
                    "type": "string"
                },
                "parent_account_id": {
                    "description": "The account's parent ID, or null if this is the root account",
                    "example": 1,
                    "type": "integer"
                },
                "root_account_id": {
                    "description": "The ID of the root account, or null if this is the root account",
                    "example": 1,
                    "type": "integer"
                },
                "workflow_state": {
                    "description": "The state of the account. Can be 'active' or 'deleted'.",
                    "example": "active",
                    "type": "string"
                }
            }
        },
        "Admin": {
            "id": "Admin",
            "description": "",
            "required": [
                "id"
            ],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "The unique identifier for the account role/user assignment.",
                    "example": 1023,
                    "type": "integer"
                },
                "role": {
                    "description": "The account role assigned. This can be 'AccountAdmin' or a user-defined role created by the Roles API.",
                    "example": "AccountAdmin",
                    "type": "string"
                },
                "user": {
                    "description": "The user the role is assigned to. See the Users API for details.",
                    "$ref": "User"
                },
                "workflow_state": {
                    "description": "The status of the account role/user assignment.",
                    "type": "string",
                    "example": "deleted"
                }
            }
        },
        "ExternalFeed": {
            "id": "ExternalFeed",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "The ID of the feed",
                    "example": 5,
                    "type": "integer"
                },
                "display_name": {
                    "description": "The title of the feed, pulled from the feed itself. If the feed hasn't yet been pulled, a temporary name will be synthesized based on the URL",
                    "example": "My Blog",
                    "type": "string"
                },
                "url": {
                    "description": "The HTTP/HTTPS URL to the feed",
                    "example": "http://example.com/myblog.rss",
                    "type": "string"
                },
                "header_match": {
                    "description": "If not null, only feed entries whose title contains this string will trigger new posts in Canvas",
                    "example": "pattern",
                    "type": "string"
                },
                "created_at": {
                    "description": "When this external feed was added to Canvas",
                    "example": "2012-06-01T00:00:00-06:00",
                    "type": "datetime"
                },
                "verbosity": {
                    "description": "The verbosity setting determines how much of the feed's content is imported into Canvas as part of the posting. 'link_only' means that only the title and a link to the item. 'truncate' means that a summary of the first portion of the item body will be used. 'full' means that the full item body will be used.",
                    "example": "truncate",
                    "type": "string",
                    "allowableValues": {
                        "values": [
                            "link_only",
                            "truncate",
                            "full"
                        ]
                    }
                },
                "Scope": {
                    "id": "Scope",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "resource": {
                            "description": "The resource the scope is associated with",
                            "example": "courses",
                            "type": "string"
                        },
                        "resource_name": {
                            "description": "The localized resource name",
                            "example": "Courses",
                            "type": "string"
                        },
                        "controller": {
                            "description": "The controller the scope is associated to",
                            "example": "courses",
                            "type": "string"
                        },
                        "action": {
                            "description": "The controller action the scope is associated to",
                            "example": "index",
                            "type": "string"
                        },
                        "verb": {
                            "description": "The HTTP verb for the scope",
                            "example": "GET",
                            "type": "string"
                        },
                        "scope": {
                            "description": "The identifier for the scope",
                            "example": "url:GET|/api/v1/courses",
                            "type": "string"
                        }
                    }
                },
                "Appointment": {
                    "id": "Appointment",
                    "description": "Date and time for an appointment",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "The appointment identifier.",
                            "example": 987,
                            "type": "integer"
                        },
                        "start_at": {
                            "description": "Start time for the appointment",
                            "example": "2012-07-20T15:00:00-06:00",
                            "type": "datetime"
                        },
                        "end_at": {
                            "description": "End time for the appointment",
                            "example": "2012-07-20T15:00:00-06:00",
                            "type": "datetime"
                        }
                    }
                },
                "AppointmentGroup": {
                    "id": "AppointmentGroup",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "The ID of the appointment group",
                            "example": 543,
                            "type": "integer"
                        },
                        "title": {
                            "description": "The title of the appointment group",
                            "example": "Final Presentation",
                            "type": "string"
                        },
                        "start_at": {
                            "description": "The start of the first time slot in the appointment group",
                            "example": "2012-07-20T15:00:00-06:00",
                            "type": "datetime"
                        },
                        "end_at": {
                            "description": "The end of the last time slot in the appointment group",
                            "example": "2012-07-20T17:00:00-06:00",
                            "type": "datetime"
                        },
                        "description": {
                            "description": "The text description of the appointment group",
                            "example": "Es muy importante",
                            "type": "string"
                        },
                        "location_name": {
                            "description": "The location name of the appointment group",
                            "example": "El Tigre Chino's office",
                            "type": "string"
                        },
                        "location_address": {
                            "description": "The address of the appointment group's location",
                            "example": "Room 234",
                            "type": "string"
                        },
                        "participant_count": {
                            "description": "The number of participant who have reserved slots (see include[] argument)",
                            "example": 2,
                            "type": "integer"
                        },
                        "reserved_times": {
                            "description": "The start and end times of slots reserved by the current user as well as the id of the calendar event for the reservation (see include[] argument)",
                            "example": [
                                {
                                    "id": 987,
                                    "start_at": "2012-07-20T15:00:00-06:00",
                                    "end_at": "2012-07-20T15:00:00-06:00"
                                }
                            ],
                            "type": "array",
                            "items": {
                                "$ref": "Appointment"
                            }
                        },
                        "context_codes": {
                            "description": "The context codes (i.e. courses) this appointment group belongs to. Only people in these courses will be eligible to sign up.",
                            "example": [
                                "course_123"
                            ],
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sub_context_codes": {
                            "description": "The sub-context codes (i.e. course sections and group categories) this appointment group is restricted to",
                            "example": [
                                "course_section_234"
                            ],
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "workflow_state": {
                            "description": "Current state of the appointment group ('pending', 'active' or 'deleted'). 'pending' indicates that it has not been published yet and is invisible to participants.",
                            "example": "active",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "pending",
                                    "active",
                                    "deleted"
                                ]
                            }
                        },
                        "requiring_action": {
                            "description": "Boolean indicating whether the current user needs to sign up for this appointment group (i.e. it's reservable and the min_appointments_per_participant limit has not been met by this user).",
                            "example": true,
                            "type": "boolean"
                        },
                        "appointments_count": {
                            "description": "Number of time slots in this appointment group",
                            "example": 2,
                            "type": "integer"
                        },
                        "appointments": {
                            "description": "Calendar Events representing the time slots (see include[] argument) Refer to the Calendar Events API for more information",
                            "example": [],
                            "type": "array",
                            "items": {
                                "$ref": "CalendarEvent"
                            }
                        },
                        "new_appointments": {
                            "description": "Newly created time slots (same format as appointments above). Only returned in Create/Update responses where new time slots have been added",
                            "example": [],
                            "type": "array",
                            "items": {
                                "$ref": "CalendarEvent"
                            }
                        },
                        "max_appointments_per_participant": {
                            "description": "Maximum number of time slots a user may register for, or null if no limit",
                            "example": 1,
                            "type": "integer"
                        },
                        "min_appointments_per_participant": {
                            "description": "Minimum number of time slots a user must register for. If not set, users do not need to sign up for any time slots",
                            "example": 1,
                            "type": "integer"
                        },
                        "participants_per_appointment": {
                            "description": "Maximum number of participants that may register for each time slot, or null if no limit",
                            "example": 1,
                            "type": "integer"
                        },
                        "participant_visibility": {
                            "description": "'private' means participants cannot see who has signed up for a particular time slot, 'protected' means that they can",
                            "example": "private",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "private",
                                    "protected"
                                ]
                            }
                        },
                        "participant_type": {
                            "description": "Indicates how participants sign up for the appointment group, either as individuals ('User') or in student groups ('Group'). Related to sub_context_codes (i.e. 'Group' signups always have a single group category)",
                            "example": "User",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "User",
                                    "Group"
                                ]
                            }
                        },
                        "url": {
                            "description": "URL for this appointment group (to update, delete, etc.)",
                            "example": "https://example.com/api/v1/appointment_groups/543",
                            "type": "string"
                        },
                        "html_url": {
                            "description": "URL for a user to view this appointment group",
                            "example": "http://example.com/appointment_groups/1",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "When the appointment group was created",
                            "example": "2012-07-13T10:55:20-06:00",
                            "type": "datetime"
                        },
                        "updated_at": {
                            "description": "When the appointment group was last updated",
                            "example": "2012-07-13T10:55:20-06:00",
                            "type": "datetime"
                        }
                    }
                },
                "AssignmentExtension": {
                    "id": "AssignmentExtension",
                    "description": "",
                    "required": [
                        "assignment_id",
                        "user_id"
                    ],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "assignment_id": {
                            "description": "The ID of the Assignment the extension belongs to.",
                            "example": 2,
                            "type": "integer",
                            "format": "int64"
                        },
                        "user_id": {
                            "description": "The ID of the Student that needs the assignment extension.",
                            "example": 3,
                            "type": "integer",
                            "format": "int64"
                        },
                        "extra_attempts": {
                            "description": "Number of times the student is allowed to re-submit the assignment",
                            "example": 2,
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "GradingRules": {
                    "id": "GradingRules",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "drop_lowest": {
                            "description": "Number of lowest scores to be dropped for each user.",
                            "example": 1,
                            "type": "integer"
                        },
                        "drop_highest": {
                            "description": "Number of highest scores to be dropped for each user.",
                            "example": 1,
                            "type": "integer"
                        },
                        "never_drop": {
                            "description": "Assignment IDs that should never be dropped.",
                            "example": [
                                33,
                                17,
                                24
                            ],
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "AssignmentGroup": {
                    "id": "AssignmentGroup",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "the id of the Assignment Group",
                            "example": 1,
                            "type": "integer"
                        },
                        "name": {
                            "description": "the name of the Assignment Group",
                            "example": "group2",
                            "type": "string"
                        },
                        "position": {
                            "description": "the position of the Assignment Group",
                            "example": 7,
                            "type": "integer"
                        },
                        "group_weight": {
                            "description": "the weight of the Assignment Group",
                            "example": 20,
                            "type": "integer"
                        },
                        "sis_source_id": {
                            "description": "the sis source id of the Assignment Group",
                            "example": "1234",
                            "type": "string"
                        },
                        "integration_data": {
                            "description": "the integration data of the Assignment Group",
                            "example": {
                                "5678": "0954"
                            },
                            "type": "object"
                        },
                        "assignments": {
                            "description": "the assignments in this Assignment Group (see the Assignment API for a detailed list of fields)",
                            "example": [],
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "rules": {
                            "description": "the grading rules that this Assignment Group has",
                            "$ref": "GradingRules"
                        }
                    }
                },
                "ExternalToolTagAttributes": {
                    "id": "ExternalToolTagAttributes",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "url": {
                            "description": "URL to the external tool",
                            "example": "http://instructure.com",
                            "type": "string"
                        },
                        "new_tab": {
                            "description": "Whether or not there is a new tab for the external tool",
                            "example": false,
                            "type": "boolean"
                        },
                        "resource_link_id": {
                            "description": "the identifier for this tool_tag",
                            "example": "ab81173af98b8c33e66a",
                            "type": "string"
                        }
                    }
                },
                "LockInfo": {
                    "id": "LockInfo",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "asset_string": {
                            "description": "Asset string for the object causing the lock",
                            "example": "assignment_4",
                            "type": "string"
                        },
                        "unlock_at": {
                            "description": "(Optional) Time at which this was/will be unlocked. Must be before the due date.",
                            "example": "2013-01-01T00:00:00-06:00",
                            "type": "datetime"
                        },
                        "lock_at": {
                            "description": "(Optional) Time at which this was/will be locked. Must be after the due date.",
                            "example": "2013-02-01T00:00:00-06:00",
                            "type": "datetime"
                        },
                        "context_module": {
                            "description": "(Optional) Context module causing the lock.",
                            "example": "{}",
                            "type": "string"
                        },
                        "manually_locked": {
                            "example": true,
                            "type": "boolean"
                        }
                    }
                },
                "RubricRating": {
                    "id": "RubricRating",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "points": {
                            "example": 10,
                            "type": "integer"
                        },
                        "id": {
                            "example": "rat1",
                            "type": "string"
                        },
                        "description": {
                            "example": "Full marks",
                            "type": "string"
                        },
                        "long_description": {
                            "example": "Student completed the assignment flawlessly.",
                            "type": "string"
                        }
                    }
                },
                "RubricCriteria": {
                    "id": "RubricCriteria",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "points": {
                            "example": 10,
                            "type": "integer"
                        },
                        "id": {
                            "description": "The id of rubric criteria.",
                            "example": "crit1",
                            "type": "string"
                        },
                        "learning_outcome_id": {
                            "description": "(Optional) The id of the learning outcome this criteria uses, if any.",
                            "example": "1234",
                            "type": "string"
                        },
                        "vendor_guid": {
                            "description": "(Optional) The 3rd party vendor's GUID for the outcome this criteria references, if any.",
                            "example": "abdsfjasdfne3jsdfn2",
                            "type": "string"
                        },
                        "description": {
                            "example": "Criterion 1",
                            "type": "string"
                        },
                        "long_description": {
                            "example": "Criterion 1 more details",
                            "type": "string"
                        },
                        "criterion_use_range": {
                            "example": true,
                            "type": "boolean"
                        },
                        "ratings": {
                            "type": "array",
                            "items": {
                                "$ref": "RubricRating"
                            }
                        },
                        "ignore_for_scoring": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                },
                "AssignmentDate": {
                    "id": "AssignmentDate",
                    "description": "Object representing a due date for an assignment or quiz. If the due date came from an assignment override, it will have an 'id' field.",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "example": 1,
                            "type": "integer",
                            "description": "(Optional, missing if 'base' is present) id of the assignment override this date represents"
                        },
                        "base": {
                            "example": true,
                            "type": "boolean",
                            "description": "(Optional, present if 'id' is missing) whether this date represents the assignment's or quiz's default due date"
                        },
                        "title": {
                            "example": "Summer Session",
                            "type": "string"
                        },
                        "due_at": {
                            "description": "The due date for the assignment. Must be between the unlock date and the lock date if there are lock dates",
                            "example": "2013-08-28T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "unlock_at": {
                            "description": "The unlock date for the assignment. Must be before the due date if there is a due date.",
                            "example": "2013-08-01T00:00:00-06:00",
                            "type": "datetime"
                        },
                        "lock_at": {
                            "description": "The lock date for the assignment. Must be after the due date if there is a due date.",
                            "example": "2013-08-31T23:59:00-06:00",
                            "type": "datetime"
                        }
                    }
                },
                "TurnitinSettings": {
                    "id": "TurnitinSettings",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "originality_report_visibility": {
                            "example": "after_grading",
                            "type": "string"
                        },
                        "s_paper_check": {
                            "example": false,
                            "type": "boolean"
                        },
                        "internet_check": {
                            "example": false,
                            "type": "boolean"
                        },
                        "journal_check": {
                            "example": false,
                            "type": "boolean"
                        },
                        "exclude_biblio": {
                            "example": false,
                            "type": "boolean"
                        },
                        "exclude_quoted": {
                            "example": false,
                            "type": "boolean"
                        },
                        "exclude_small_matches_type": {
                            "example": "percent",
                            "type": "string"
                        },
                        "exclude_small_matches_value": {
                            "example": 50,
                            "type": "integer"
                        }
                    }
                },
                "NeedsGradingCount": {
                    "id": "NeedsGradingCount",
                    "description": "Used by Assignment model",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "section_id": {
                            "description": "The section ID",
                            "example": "123456",
                            "type": "string"
                        },
                        "needs_grading_count": {
                            "description": "Number of submissions that need grading",
                            "example": 5,
                            "type": "integer"
                        }
                    }
                },
                "ScoreStatistic": {
                    "id": "ScoreStatistic",
                    "description": "Used by Assignment model",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "min": {
                            "description": "Min score",
                            "example": 1,
                            "type": "integer"
                        },
                        "max": {
                            "description": "Max score",
                            "example": 10,
                            "type": "integer"
                        },
                        "mean": {
                            "description": "Mean score",
                            "example": 6,
                            "type": "integer"
                        },
                        "upper_q": {
                            "description": "Upper quartile score",
                            "example": 10,
                            "type": "integer"
                        },
                        "median": {
                            "description": "Median score",
                            "example": 6,
                            "type": "integer"
                        },
                        "lower_q": {
                            "description": "Lower quartile score",
                            "example": 1,
                            "type": "integer"
                        }
                    }
                },
                "Assignment": {
                    "id": "Assignment",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "the ID of the assignment",
                            "example": 4,
                            "type": "integer"
                        },
                        "name": {
                            "description": "the name of the assignment",
                            "example": "some assignment",
                            "type": "string"
                        },
                        "description": {
                            "description": "the assignment description, in an HTML fragment",
                            "example": "<p>Do the following:</p>...",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "The time at which this assignment was originally created",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "updated_at": {
                            "description": "The time at which this assignment was last modified in any way",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "due_at": {
                            "description": "the due date for the assignment. returns null if not present. NOTE: If this assignment has assignment overrides, this field will be the due date as it applies to the user requesting information from the API.",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "lock_at": {
                            "description": "the lock date (assignment is locked after this date). returns null if not present. NOTE: If this assignment has assignment overrides, this field will be the lock date as it applies to the user requesting information from the API.",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "unlock_at": {
                            "description": "the unlock date (assignment is unlocked after this date) returns null if not present NOTE: If this assignment has assignment overrides, this field will be the unlock date as it applies to the user requesting information from the API.",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "has_overrides": {
                            "description": "whether this assignment has overrides",
                            "example": true,
                            "type": "boolean"
                        },
                        "all_dates": {
                            "description": "(Optional) all dates associated with the assignment, if applicable",
                            "type": "array",
                            "items": {
                                "$ref": "AssignmentDate"
                            }
                        },
                        "course_id": {
                            "description": "the ID of the course the assignment belongs to",
                            "example": 123,
                            "type": "integer"
                        },
                        "html_url": {
                            "description": "the URL to the assignment's web page",
                            "example": "https://...",
                            "type": "string"
                        },
                        "submissions_download_url": {
                            "description": "the URL to download all submissions as a zip",
                            "example": "https://example.com/courses/:course_id/assignments/:id/submissions?zip=1",
                            "type": "string"
                        },
                        "assignment_group_id": {
                            "description": "the ID of the assignment's group",
                            "example": 2,
                            "type": "integer"
                        },
                        "due_date_required": {
                            "description": "Boolean flag indicating whether the assignment requires a due date based on the account level setting",
                            "example": true,
                            "type": "boolean"
                        },
                        "allowed_extensions": {
                            "description": "Allowed file extensions, which take effect if submission_types includes 'online_upload'.",
                            "example": [
                                "docx",
                                "ppt"
                            ],
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "max_name_length": {
                            "description": "An integer indicating the maximum length an assignment's name may be",
                            "example": 15,
                            "type": "integer"
                        },
                        "turnitin_enabled": {
                            "description": "Boolean flag indicating whether or not Turnitin has been enabled for the assignment. NOTE: This flag will not appear unless your account has the Turnitin plugin available",
                            "example": true,
                            "type": "boolean"
                        },
                        "vericite_enabled": {
                            "description": "Boolean flag indicating whether or not VeriCite has been enabled for the assignment. NOTE: This flag will not appear unless your account has the VeriCite plugin available",
                            "example": true,
                            "type": "boolean"
                        },
                        "turnitin_settings": {
                            "description": "Settings to pass along to turnitin to control what kinds of matches should be considered. originality_report_visibility can be 'immediate', 'after_grading', 'after_due_date', or 'never' exclude_small_matches_type can be null, 'percent', 'words' exclude_small_matches_value: - if type is null, this will be null also - if type is 'percent', this will be a number between 0 and 100 representing match size to exclude as a percentage of the document size. - if type is 'words', this will be number > 0 representing how many words a match must contain for it to be considered NOTE: This flag will not appear unless your account has the Turnitin plugin available",
                            "$ref": "TurnitinSettings"
                        },
                        "grade_group_students_individually": {
                            "description": "If this is a group assignment, boolean flag indicating whether or not students will be graded individually.",
                            "example": false,
                            "type": "boolean"
                        },
                        "external_tool_tag_attributes": {
                            "description": "(Optional) assignment's settings for external tools if submission_types include 'external_tool'. Only url and new_tab are included (new_tab defaults to false).  Use the 'External Tools' API if you need more information about an external tool.",
                            "$ref": "ExternalToolTagAttributes"
                        },
                        "peer_reviews": {
                            "description": "Boolean indicating if peer reviews are required for this assignment",
                            "example": false,
                            "type": "boolean"
                        },
                        "automatic_peer_reviews": {
                            "description": "Boolean indicating peer reviews are assigned automatically. If false, the teacher is expected to manually assign peer reviews.",
                            "example": false,
                            "type": "boolean"
                        },
                        "peer_review_count": {
                            "description": "Integer representing the amount of reviews each user is assigned. NOTE: This key is NOT present unless you have automatic_peer_reviews set to true.",
                            "example": 0,
                            "type": "integer"
                        },
                        "peer_reviews_assign_at": {
                            "description": "String representing a date the reviews are due by. Must be a date that occurs after the default due date. If blank, or date is not after the assignment's due date, the assignment's due date will be used. NOTE: This key is NOT present unless you have automatic_peer_reviews set to true.",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "intra_group_peer_reviews": {
                            "description": "Boolean representing whether or not members from within the same group on a group assignment can be assigned to peer review their own group's work",
                            "example": "false",
                            "type": "boolean"
                        },
                        "group_category_id": {
                            "description": "The ID of the assignment’s group set, if this is a group assignment. For group discussions, set group_category_id on the discussion topic, not the linked assignment.",
                            "example": 1,
                            "type": "integer"
                        },
                        "needs_grading_count": {
                            "description": "if the requesting user has grading rights, the number of submissions that need grading.",
                            "example": 17,
                            "type": "integer"
                        },
                        "needs_grading_count_by_section": {
                            "description": "if the requesting user has grading rights and the 'needs_grading_count_by_section' flag is specified, the number of submissions that need grading split out by section. NOTE: This key is NOT present unless you pass the 'needs_grading_count_by_section' argument as true.  ANOTHER NOTE: it's possible to be enrolled in multiple sections, and if a student is setup that way they will show an assignment that needs grading in multiple sections (effectively the count will be duplicated between sections)",
                            "example": [
                                {
                                    "section_id": "123456",
                                    "needs_grading_count": 5
                                },
                                {
                                    "section_id": "654321",
                                    "needs_grading_count": 0
                                }
                            ],
                            "type": "array",
                            "items": {
                                "$ref": "NeedsGradingCount"
                            }
                        },
                        "position": {
                            "description": "the sorting order of the assignment in the group",
                            "example": 1,
                            "type": "integer"
                        },
                        "post_to_sis": {
                            "example": true,
                            "type": "boolean",
                            "description": "(optional, present if Sync Grades to SIS feature is enabled)"
                        },
                        "integration_id": {
                            "example": "12341234",
                            "type": "string",
                            "description": "(optional, Third Party unique identifier for Assignment)"
                        },
                        "integration_data": {
                            "example": {
                                "5678": "0954"
                            },
                            "type": "object",
                            "description": "(optional, Third Party integration data for assignment)"
                        },
                        "points_possible": {
                            "description": "the maximum points possible for the assignment",
                            "example": 12,
                            "type": "number"
                        },
                        "submission_types": {
                            "description": "the types of submissions allowed for this assignment list containing one or more of the following: 'discussion_topic', 'online_quiz', 'on_paper', 'none', 'external_tool', 'online_text_entry', 'online_url', 'online_upload', 'media_recording', 'student_annotation'",
                            "example": [
                                "online_text_entry"
                            ],
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "allowableValues": {
                                "values": [
                                    "discussion_topic",
                                    "online_quiz",
                                    "on_paper",
                                    "not_graded",
                                    "none",
                                    "external_tool",
                                    "online_text_entry",
                                    "online_url",
                                    "online_upload",
                                    "media_recording",
                                    "student_annotation"
                                ]
                            }
                        },
                        "has_submitted_submissions": {
                            "description": "If true, the assignment has been submitted to by at least one student",
                            "example": true,
                            "type": "boolean"
                        },
                        "grading_type": {
                            "description": "The type of grading the assignment receives; one of 'pass_fail', 'percent', 'letter_grade', 'gpa_scale', 'points'",
                            "example": "points",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "pass_fail",
                                    "percent",
                                    "letter_grade",
                                    "gpa_scale",
                                    "points"
                                ]
                            }
                        },
                        "grading_standard_id": {
                            "description": "The id of the grading standard being applied to this assignment. Valid if grading_type is 'letter_grade' or 'gpa_scale'.",
                            "type": "integer"
                        },
                        "published": {
                            "description": "Whether the assignment is published",
                            "example": true,
                            "type": "boolean"
                        },
                        "unpublishable": {
                            "description": "Whether the assignment's 'published' state can be changed to false. Will be false if there are student submissions for the assignment.",
                            "example": false,
                            "type": "boolean"
                        },
                        "only_visible_to_overrides": {
                            "description": "Whether the assignment is only visible to overrides.",
                            "example": false,
                            "type": "boolean"
                        },
                        "locked_for_user": {
                            "description": "Whether or not this is locked for the user.",
                            "example": false,
                            "type": "boolean"
                        },
                        "lock_info": {
                            "description": "(Optional) Information for the user about the lock. Present when locked_for_user is true.",
                            "$ref": "LockInfo"
                        },
                        "lock_explanation": {
                            "description": "(Optional) An explanation of why this is locked for the user. Present when locked_for_user is true.",
                            "example": "This assignment is locked until September 1 at 12:00am",
                            "type": "string"
                        },
                        "quiz_id": {
                            "description": "(Optional) id of the associated quiz (applies only when submission_types is ['online_quiz'])",
                            "example": 620,
                            "type": "integer"
                        },
                        "anonymous_submissions": {
                            "description": "(Optional) whether anonymous submissions are accepted (applies only to quiz assignments)",
                            "example": false,
                            "type": "boolean"
                        },
                        "discussion_topic": {
                            "description": "(Optional) the DiscussionTopic associated with the assignment, if applicable",
                            "$ref": "DiscussionTopic"
                        },
                        "freeze_on_copy": {
                            "description": "(Optional) Boolean indicating if assignment will be frozen when it is copied. NOTE: This field will only be present if the AssignmentFreezer plugin is available for your account.",
                            "example": false,
                            "type": "boolean"
                        },
                        "frozen": {
                            "description": "(Optional) Boolean indicating if assignment is frozen for the calling user. NOTE: This field will only be present if the AssignmentFreezer plugin is available for your account.",
                            "example": false,
                            "type": "boolean"
                        },
                        "frozen_attributes": {
                            "description": "(Optional) Array of frozen attributes for the assignment. Only account administrators currently have permission to change an attribute in this list. Will be empty if no attributes are frozen for this assignment. Possible frozen attributes are: title, description, lock_at, points_possible, grading_type, submission_types, assignment_group_id, allowed_extensions, group_category_id, notify_of_update, peer_reviews NOTE: This field will only be present if the AssignmentFreezer plugin is available for your account.",
                            "example": [
                                "title"
                            ],
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "submission": {
                            "description": "(Optional) If 'submission' is included in the 'include' parameter, includes a Submission object that represents the current user's (user who is requesting information from the api) current submission for the assignment. See the Submissions API for an example response. If the user does not have a submission, this key will be absent.",
                            "$ref": "Submission"
                        },
                        "use_rubric_for_grading": {
                            "description": "(Optional) If true, the rubric is directly tied to grading the assignment. Otherwise, it is only advisory. Included if there is an associated rubric.",
                            "example": true,
                            "type": "boolean"
                        },
                        "rubric_settings": {
                            "description": "(Optional) An object describing the basic attributes of the rubric, including the point total. Included if there is an associated rubric.",
                            "example": "{\"points_possible\"=>12}",
                            "type": "string"
                        },
                        "rubric": {
                            "description": "(Optional) A list of scoring criteria and ratings for each rubric criterion. Included if there is an associated rubric.",
                            "type": "array",
                            "items": {
                                "$ref": "RubricCriteria"
                            }
                        },
                        "assignment_visibility": {
                            "description": "(Optional) If 'assignment_visibility' is included in the 'include' parameter, includes an array of student IDs who can see this assignment.",
                            "example": [
                                137,
                                381,
                                572
                            ],
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "overrides": {
                            "description": "(Optional) If 'overrides' is included in the 'include' parameter, includes an array of assignment override objects.",
                            "type": "array",
                            "items": {
                                "$ref": "AssignmentOverride"
                            }
                        },
                        "omit_from_final_grade": {
                            "description": "(Optional) If true, the assignment will be omitted from the student's final grade",
                            "example": true,
                            "type": "boolean"
                        },
                        "moderated_grading": {
                            "description": "Boolean indicating if the assignment is moderated.",
                            "example": true,
                            "type": "boolean"
                        },
                        "grader_count": {
                            "description": "The maximum number of provisional graders who may issue grades for this assignment. Only relevant for moderated assignments. Must be a positive value, and must be set to 1 if the course has fewer than two active instructors. Otherwise, the maximum value is the number of active instructors in the course minus one, or 10 if the course has more than 11 active instructors.",
                            "example": 3,
                            "type": "integer"
                        },
                        "final_grader_id": {
                            "description": "The user ID of the grader responsible for choosing final grades for this assignment. Only relevant for moderated assignments.",
                            "example": 3,
                            "type": "integer"
                        },
                        "grader_comments_visible_to_graders": {
                            "description": "Boolean indicating if provisional graders' comments are visible to other provisional graders. Only relevant for moderated assignments.",
                            "example": true,
                            "type": "boolean"
                        },
                        "graders_anonymous_to_graders": {
                            "description": "Boolean indicating if provisional graders' identities are hidden from other provisional graders. Only relevant for moderated assignments with grader_comments_visible_to_graders set to true.",
                            "example": true,
                            "type": "boolean"
                        },
                        "grader_names_visible_to_final_grader": {
                            "description": "Boolean indicating if provisional grader identities are visible to the final grader. Only relevant for moderated assignments.",
                            "example": true,
                            "type": "boolean"
                        },
                        "anonymous_grading": {
                            "description": "Boolean indicating if the assignment is graded anonymously. If true, graders cannot see student identities.",
                            "example": true,
                            "type": "boolean"
                        },
                        "allowed_attempts": {
                            "description": "The number of submission attempts a student can make for this assignment. -1 is considered unlimited.",
                            "example": 2,
                            "type": "integer"
                        },
                        "post_manually": {
                            "description": "Whether the assignment has manual posting enabled. Only relevant for courses using New Gradebook.",
                            "example": true,
                            "type": "boolean"
                        },
                        "score_statistics": {
                            "description": "(Optional) If 'score_statistics' and 'submission' are included in the 'include' parameter and statistics are available, includes the min, max, and mode for this assignment",
                            "$ref": "ScoreStatistic"
                        },
                        "can_submit": {
                            "description": "(Optional) If retrieving a single assignment and 'can_submit' is included in the 'include' parameter, flags whether user has the right to submit the assignment (i.e. checks enrollment dates, submission types, locked status, attempts remaining, etc...). Including 'can submit' automatically includes 'submission' in the include parameter. Not available when observed_users are included.",
                            "example": true,
                            "type": "boolean"
                        },
                        "annotatable_attachment_id": {
                            "description": "The id of the attachment to be annotated by students. Relevant only if submission_types includes 'student_annotation'.",
                            "type": "integer"
                        },
                        "anonymize_students": {
                            "description": "(Optional) Boolean indicating whether student names are anonymized",
                            "example": false,
                            "type": "boolean"
                        },
                        "require_lockdown_browser": {
                            "description": "(Optional) Boolean indicating whether the Respondus LockDown Browser® is required for this assignment.",
                            "example": false,
                            "type": "boolean"
                        },
                        "important_dates": {
                            "description": "(Optional) Boolean indicating whether this assignment has important dates.",
                            "example": false,
                            "type": "boolean"
                        },
                        "muted": {
                            "description": "(Optional, Deprecated) Boolean indicating whether notifications are muted for this assignment.",
                            "example": false,
                            "type": "boolean"
                        }
                    }
                },
                "AssignmentOverride": {
                    "id": "AssignmentOverride",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "the ID of the assignment override",
                            "example": 4,
                            "type": "integer"
                        },
                        "assignment_id": {
                            "description": "the ID of the assignment the override applies to",
                            "example": 123,
                            "type": "integer"
                        },
                        "student_ids": {
                            "description": "the IDs of the override's target students (present if the override targets an ad-hoc set of students)",
                            "example": [
                                1,
                                2,
                                3
                            ],
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "group_id": {
                            "description": "the ID of the override's target group (present if the override targets a group and the assignment is a group assignment)",
                            "example": 2,
                            "type": "integer"
                        },
                        "course_section_id": {
                            "description": "the ID of the overrides's target section (present if the override targets a section)",
                            "example": 1,
                            "type": "integer"
                        },
                        "title": {
                            "description": "the title of the override",
                            "example": "an assignment override",
                            "type": "string"
                        },
                        "due_at": {
                            "description": "the overridden due at (present if due_at is overridden)",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "all_day": {
                            "description": "the overridden all day flag (present if due_at is overridden)",
                            "example": true,
                            "type": "boolean"
                        },
                        "all_day_date": {
                            "description": "the overridden all day date (present if due_at is overridden)",
                            "example": "2012-07-01",
                            "type": "datetime"
                        },
                        "unlock_at": {
                            "description": "the overridden unlock at (present if unlock_at is overridden)",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "lock_at": {
                            "description": "the overridden lock at, if any (present if lock_at is overridden)",
                            "example": "2012-07-01T23:59:00-06:00",
                            "type": "datetime"
                        }
                    }
                },
                "AuthenticationProvider": {
                    "id": "AuthenticationProvider",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "identifier_format": {
                            "description": "Valid for SAML providers.",
                            "example": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                            "type": "string"
                        },
                        "auth_type": {
                            "description": "Valid for all providers.",
                            "example": "saml",
                            "type": "string"
                        },
                        "id": {
                            "description": "Valid for all providers.",
                            "example": 1649,
                            "type": "integer"
                        },
                        "log_out_url": {
                            "description": "Valid for SAML providers.",
                            "example": "http://example.com/saml1/slo",
                            "type": "string"
                        },
                        "log_in_url": {
                            "description": "Valid for SAML and CAS providers.",
                            "example": "http://example.com/saml1/sli",
                            "type": "string"
                        },
                        "certificate_fingerprint": {
                            "description": "Valid for SAML providers.",
                            "example": "111222",
                            "type": "string"
                        },
                        "requested_authn_context": {
                            "description": "Valid for SAML providers.",
                            "type": "string"
                        },
                        "auth_host": {
                            "description": "Valid for LDAP providers.",
                            "example": "127.0.0.1",
                            "type": "string"
                        },
                        "auth_filter": {
                            "description": "Valid for LDAP providers.",
                            "example": "filter1",
                            "type": "string"
                        },
                        "auth_over_tls": {
                            "description": "Valid for LDAP providers.",
                            "type": "integer"
                        },
                        "auth_base": {
                            "description": "Valid for LDAP and CAS providers.",
                            "type": "string"
                        },
                        "auth_username": {
                            "description": "Valid for LDAP providers.",
                            "example": "username1",
                            "type": "string"
                        },
                        "auth_port": {
                            "description": "Valid for LDAP providers.",
                            "type": "integer"
                        },
                        "position": {
                            "description": "Valid for all providers.",
                            "example": 1,
                            "type": "integer"
                        },
                        "idp_entity_id": {
                            "description": "Valid for SAML providers.",
                            "example": "http://example.com/saml1",
                            "type": "string"
                        },
                        "login_attribute": {
                            "description": "Valid for SAML providers.",
                            "example": "nameid",
                            "type": "string"
                        },
                        "sig_alg": {
                            "description": "Valid for SAML providers.",
                            "example": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256",
                            "type": "string"
                        },
                        "jit_provisioning": {
                            "description": "Just In Time provisioning. Valid for all providers except Canvas (which has the similar in concept self_registration setting).",
                            "type": "boolean"
                        },
                        "federated_attributes": {
                            "$ref": "FederatedAttributesConfig"
                        },
                        "mfa_required": {
                            "description": "If multi-factor authentication is required when logging in with this authentication provider. The account must not have MFA disabled.",
                            "type": "boolean"
                        }
                    }
                },
                "SSOSettings": {
                    "id": "SSOSettings",
                    "description": "Settings that are applicable across an account's authentication configuration, even if there are multiple individual providers",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "login_handle_name": {
                            "description": "The label used for unique login identifiers.",
                            "example": "Username",
                            "type": "string"
                        },
                        "change_password_url": {
                            "description": "The url to redirect users to for password resets. Leave blank for default Canvas behavior",
                            "example": "https://example.com/reset_password",
                            "type": "string"
                        },
                        "auth_discovery_url": {
                            "description": "If a discovery url is set, canvas will forward all users to that URL when they need to be authenticated. That page will need to then help the user figure out where they need to go to log in. If no discovery url is configured, the first configuration will be used to attempt to authenticate the user.",
                            "example": "https://example.com/which_account",
                            "type": "string"
                        },
                        "unknown_user_url": {
                            "description": "If an unknown user url is set, Canvas will forward to that url when a service authenticates a user, but that user does not exist in Canvas. The default behavior is to present an error.",
                            "example": "https://example.com/register_for_canvas",
                            "type": "string"
                        }
                    }
                },
                "FederatedAttributesConfig": {
                    "id": "FederatedAttributesConfig",
                    "description": "A mapping of Canvas attribute names to attribute names that a provider may send, in order to update the value of these attributes when a user logs in. The values can be a FederatedAttributeConfig, or a raw string corresponding to the \"attribute\" property of a FederatedAttributeConfig. In responses, full FederatedAttributeConfig objects are returned if JIT provisioning is enabled, otherwise just the attribute names are returned.",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "admin_roles": {
                            "description": "A comma separated list of role names to grant to the user. Note that these only apply at the root account level, and not sub-accounts. If the attribute is not marked for provisioning only, the user will also be removed from any other roles they currently hold that are not still specified by the IdP.",
                            "type": "string"
                        },
                        "display_name": {
                            "description": "The full display name of the user",
                            "type": "string"
                        },
                        "email": {
                            "description": "The user's e-mail address",
                            "type": "string"
                        },
                        "given_name": {
                            "description": "The first, or given, name of the user",
                            "type": "string"
                        },
                        "integration_id": {
                            "description": "The secondary unique identifier for SIS purposes",
                            "type": "string"
                        },
                        "locale": {
                            "description": "The user's preferred locale/language",
                            "type": "string"
                        },
                        "name": {
                            "description": "The full name of the user",
                            "type": "string"
                        },
                        "sis_user_id": {
                            "description": "The unique SIS identifier",
                            "type": "string"
                        },
                        "sortable_name": {
                            "description": "The full name of the user for sorting purposes",
                            "type": "string"
                        },
                        "surname": {
                            "description": "The surname, or last name, of the user",
                            "type": "string"
                        },
                        "timezone": {
                            "description": "The user's preferred time zone",
                            "type": "string"
                        }
                    }
                },
                "FederatedAttributeConfig": {
                    "id": "FederatedAttributeConfig",
                    "description": "A single attribute name to be federated when a user logs in",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "attribute": {
                            "description": "The name of the attribute as it will be sent from the authentication provider",
                            "type": "string",
                            "example": "mail"
                        },
                        "provisioning_only": {
                            "description": "If the attribute should be applied only when provisioning a new user, rather than all logins",
                            "type": "boolean",
                            "default": false,
                            "example": false
                        }
                    }
                },
                "AuthenticationEvent": {
                    "id": "AuthenticationEvent",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "created_at": {
                            "description": "timestamp of the event",
                            "example": "2012-07-19T15:00:00-06:00",
                            "type": "datetime"
                        },
                        "event_type": {
                            "description": "authentication event type ('login' or 'logout')",
                            "example": "login",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "login",
                                    "logout"
                                ]
                            }
                        },
                        "pseudonym_id": {
                            "description": "ID of the pseudonym (login) associated with the event",
                            "example": 9478,
                            "type": "integer"
                        },
                        "account_id": {
                            "description": "ID of the account associated with the event. will match the account_id in the associated pseudonym.",
                            "example": 2319,
                            "type": "integer"
                        },
                        "user_id": {
                            "description": "ID of the user associated with the event will match the user_id in the associated pseudonym.",
                            "example": 362,
                            "type": "integer"
                        }
                    }
                },
                "BlackoutDate": {
                    "id": "BlackoutDate",
                    "description": "Blackout dates are used to prevent scheduling assignments on a given date in course pacing.",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "the ID of the blackout date",
                            "example": 1,
                            "type": "integer"
                        },
                        "context_id": {
                            "description": "the context owning the blackout date",
                            "example": 1,
                            "type": "integer"
                        },
                        "context_type": {
                            "example": "Course",
                            "type": "string"
                        },
                        "start_date": {
                            "description": "the start date of the blackout date",
                            "example": "2022-01-01",
                            "type": "datetime"
                        },
                        "end_date": {
                            "description": "the end date of the blackout date",
                            "example": "2022-01-02",
                            "type": "datetime"
                        },
                        "event_title": {
                            "description": "title of the blackout date",
                            "example": "some title",
                            "type": "string"
                        }
                    }
                },
                "BlueprintTemplate": {
                    "id": "BlueprintTemplate",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "The ID of the template.",
                            "example": 1,
                            "type": "integer",
                            "format": "int64"
                        },
                        "course_id": {
                            "description": "The ID of the Course the template belongs to.",
                            "example": 2,
                            "type": "integer",
                            "format": "int64"
                        },
                        "last_export_completed_at": {
                            "description": "Time when the last export was completed",
                            "example": "2013-08-28T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "associated_course_count": {
                            "description": "Number of associated courses for the template",
                            "example": 3,
                            "type": "integer"
                        },
                        "latest_migration": {
                            "description": "Details of the latest migration",
                            "$ref": "BlueprintMigration"
                        }
                    }
                },
                "BlueprintMigration": {
                    "id": "BlueprintMigration",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "The ID of the migration.",
                            "example": 1,
                            "type": "integer",
                            "format": "int64"
                        },
                        "template_id": {
                            "description": "The ID of the template the migration belongs to. Only present when querying a blueprint course.",
                            "example": 2,
                            "type": "integer",
                            "format": "int64"
                        },
                        "subscription_id": {
                            "description": "The ID of the associated course's blueprint subscription. Only present when querying a course associated with a blueprint.",
                            "example": 101,
                            "type": "integer",
                            "format": "int64"
                        },
                        "user_id": {
                            "description": "The ID of the user who queued the migration.",
                            "example": 3,
                            "type": "integer",
                            "format": "int64"
                        },
                        "workflow_state": {
                            "description": "Current state of the content migration: queued, exporting, imports_queued, completed, exports_failed, imports_failed",
                            "example": "running",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "Time when the migration was queued",
                            "example": "2013-08-28T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "exports_started_at": {
                            "description": "Time when the exports begun",
                            "example": "2013-08-28T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "imports_queued_at": {
                            "description": "Time when the exports were completed and imports were queued",
                            "example": "2013-08-28T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "imports_completed_at": {
                            "description": "Time when the imports were completed",
                            "example": "2013-08-28T23:59:00-06:00",
                            "type": "datetime"
                        },
                        "comment": {
                            "description": "User-specified comment describing changes made in this operation",
                            "example": "Fixed spelling in question 3 of midterm exam",
                            "type": "string"
                        }
                    }
                },
                "BlueprintRestriction": {
                    "id": "BlueprintRestriction",
                    "description": "A set of restrictions on editing for copied objects in associated courses",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "content": {
                            "description": "Restriction on main content (e.g. title, description).",
                            "example": true,
                            "type": "boolean"
                        },
                        "points": {
                            "description": "Restriction on points possible for assignments and graded learning objects",
                            "example": true,
                            "type": "boolean"
                        },
                        "due_dates": {
                            "description": "Restriction on due dates for assignments and graded learning objects",
                            "example": false,
                            "type": "boolean"
                        },
                        "availability_dates": {
                            "description": "Restriction on availability dates for an object",
                            "example": true,
                            "type": "boolean"
                        }
                    }
                },
                "ChangeRecord": {
                    "id": "ChangeRecord",
                    "description": "Describes a learning object change propagated to associated courses from a blueprint course",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "asset_id": {
                            "description": "The ID of the learning object that was changed in the blueprint course.",
                            "example": 2,
                            "type": "integer",
                            "format": "int64"
                        },
                        "asset_type": {
                            "description": "The type of the learning object that was changed in the blueprint course.  One of 'assignment', 'attachment', 'discussion_topic', 'external_tool', 'quiz', 'wiki_page', 'syllabus', or 'settings'.  For 'syllabus' or 'settings', the asset_id is the course id.",
                            "example": "assignment",
                            "type": "string"
                        },
                        "asset_name": {
                            "description": "The name of the learning object that was changed in the blueprint course.",
                            "example": "Some Assignment",
                            "type": "string"
                        },
                        "change_type": {
                            "description": "The type of change; one of 'created', 'updated', 'deleted'",
                            "example": "created",
                            "type": "string"
                        },
                        "html_url": {
                            "description": "The URL of the changed object",
                            "example": "https://canvas.example.com/courses/101/assignments/2",
                            "type": "string"
                        },
                        "locked": {
                            "description": "Whether the object is locked in the blueprint",
                            "example": false,
                            "type": "boolean"
                        },
                        "exceptions": {
                            "description": "A list of ExceptionRecords for linked courses that did not receive this update.",
                            "example": [
                                {
                                    "course_id": 101,
                                    "conflicting_changes": [
                                        "points"
                                    ]
                                }
                            ],
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                },
                "ExceptionRecord": {
                    "id": "ExceptionRecord",
                    "description": "Lists associated courses that did not receive a change propagated from a blueprint",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "course_id": {
                            "description": "The ID of the associated course",
                            "example": 101,
                            "type": "integer",
                            "format": "int64"
                        },
                        "conflicting_changes": {
                            "description": "A list of change classes in the associated course's copy of the item that prevented a blueprint change from being applied. One or more of ['content', 'points', 'due_dates', 'availability_dates'].",
                            "example": [
                                "points"
                            ],
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                },
                "BlueprintSubscription": {
                    "id": "BlueprintSubscription",
                    "description": "Associates a course with a blueprint",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "The ID of the blueprint course subscription",
                            "example": 101,
                            "type": "integer",
                            "format": "int64"
                        },
                        "template_id": {
                            "description": "The ID of the blueprint template the associated course is subscribed to",
                            "example": 1,
                            "type": "integer",
                            "format": "int64"
                        },
                        "blueprint_course": {
                            "description": "The blueprint course subscribed to",
                            "type": "object",
                            "example": {
                                "id": 2,
                                "name": "Biology 100 Blueprint",
                                "course_code": "BIOL 100 BP",
                                "term_name": "Default term"
                            }
                        }
                    },
                    "Bookmark": {
                        "id": "Bookmark",
                        "description": "",
                        "required": [],
                        "deprecated": false,
                        "deprecation_description": null,
                        "properties": {
                            "id": {
                                "example": 1,
                                "type": "integer"
                            },
                            "name": {
                                "example": "Biology 101",
                                "type": "string"
                            },
                            "url": {
                                "example": "/courses/1",
                                "type": "string"
                            },
                            "position": {
                                "example": 1,
                                "type": "integer"
                            },
                            "data": {
                                "example": {
                                    "active_tab": 1
                                },
                                "type": "object"
                            }
                        }
                    },
                    "CalendarEvent": {
                        "id": "CalendarEvent",
                        "description": "",
                        "required": [],
                        "deprecated": false,
                        "deprecation_description": null,
                        "properties": {
                            "id": {
                                "description": "The ID of the calendar event",
                                "example": 234,
                                "type": "integer"
                            },
                            "title": {
                                "description": "The title of the calendar event",
                                "example": "Paintball Fight!",
                                "type": "string"
                            },
                            "start_at": {
                                "description": "The start timestamp of the event",
                                "example": "2012-07-19T15:00:00-06:00",
                                "type": "datetime"
                            },
                            "end_at": {
                                "description": "The end timestamp of the event",
                                "example": "2012-07-19T16:00:00-06:00",
                                "type": "datetime"
                            },
                            "description": {
                                "description": "The HTML description of the event",
                                "example": "<b>It's that time again!</b>",
                                "type": "string"
                            },
                            "location_name": {
                                "description": "The location name of the event",
                                "example": "Greendale Community College",
                                "type": "string"
                            },
                            "location_address": {
                                "description": "The address where the event is taking place",
                                "example": "Greendale, Colorado",
                                "type": "string"
                            },
                            "context_code": {
                                "description": "the context code of the calendar this event belongs to (course, user or group)",
                                "example": "course_123",
                                "type": "string"
                            },
                            "effective_context_code": {
                                "description": "if specified, it indicates which calendar this event should be displayed on. for example, a section-level event would have the course's context code here, while the section's context code would be returned above)",
                                "type": "string"
                            },
                            "context_name": {
                                "description": "the context name of the calendar this event belongs to (course, user or group)",
                                "example": "Chemistry 101",
                                "type": "string"
                            },
                            "all_context_codes": {
                                "description": "a comma-separated list of all calendar contexts this event is part of",
                                "example": "course_123,course_456",
                                "type": "string"
                            },
                            "workflow_state": {
                                "description": "Current state of the event ('active', 'locked' or 'deleted') 'locked' indicates that start_at/end_at cannot be changed (though the event could be deleted). Normally only reservations or time slots with reservations are locked (see the Appointment Groups API)",
                                "example": "active",
                                "type": "string"
                            },
                            "hidden": {
                                "description": "Whether this event should be displayed on the calendar. Only true for course-level events with section-level child events.",
                                "example": false,
                                "type": "boolean"
                            },
                            "parent_event_id": {
                                "description": "Normally null. If this is a reservation (see the Appointment Groups API), the id will indicate the time slot it is for. If this is a section-level event, this will be the course-level parent event.",
                                "type": "integer"
                            },
                            "child_events_count": {
                                "description": "The number of child_events. See child_events (and parent_event_id)",
                                "example": 0,
                                "type": "integer"
                            },
                            "child_events": {
                                "description": "Included by default, but may be excluded (see include[] option). If this is a time slot (see the Appointment Groups API) this will be a list of any reservations. If this is a course-level event, this will be a list of section-level events (if any)",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            },
                            "url": {
                                "description": "URL for this calendar event (to update, delete, etc.)",
                                "example": "https://example.com/api/v1/calendar_events/234",
                                "type": "string"
                            },
                            "html_url": {
                                "description": "URL for a user to view this event",
                                "example": "https://example.com/calendar?event_id=234&include_contexts=course_123",
                                "type": "string"
                            },
                            "all_day_date": {
                                "description": "The date of this event",
                                "example": "2012-07-19",
                                "type": "datetime"
                            },
                            "all_day": {
                                "description": "Boolean indicating whether this is an all-day event (midnight to midnight)",
                                "example": false,
                                "type": "boolean"
                            },
                            "created_at": {
                                "description": "When the calendar event was created",
                                "example": "2012-07-12T10:55:20-06:00",
                                "type": "datetime"
                            },
                            "updated_at": {
                                "description": "When the calendar event was last updated",
                                "example": "2012-07-12T10:55:20-06:00",
                                "type": "datetime"
                            },
                            "appointment_group_id": {
                                "description": "Various Appointment-Group-related fields.These fields are only pertinent to time slots (appointments) and reservations of those time slots. See the Appointment Groups API. The id of the appointment group",
                                "type": "integer"
                            },
                            "appointment_group_url": {
                                "description": "The API URL of the appointment group",
                                "type": "string"
                            },
                            "own_reservation": {
                                "description": "If the event is a reservation, this a boolean indicating whether it is the current user's reservation, or someone else's",
                                "example": false,
                                "type": "boolean"
                            },
                            "reserve_url": {
                                "description": "If the event is a time slot, the API URL for reserving it",
                                "type": "string"
                            },
                            "reserved": {
                                "description": "If the event is a time slot, a boolean indicating whether the user has already made a reservation for it",
                                "example": false,
                                "type": "boolean"
                            },
                            "participant_type": {
                                "description": "The type of participant to sign up for a slot: 'User' or 'Group'",
                                "example": "User",
                                "type": "string"
                            },
                            "participants_per_appointment": {
                                "description": "If the event is a time slot, this is the participant limit",
                                "type": "integer"
                            },
                            "available_slots": {
                                "description": "If the event is a time slot and it has a participant limit, an integer indicating how many slots are available",
                                "type": "integer"
                            },
                            "user": {
                                "description": "If the event is a user-level reservation, this will contain the user participant JSON (refer to the Users API).",
                                "type": "string"
                            },
                            "group": {
                                "description": "If the event is a group-level reservation, this will contain the group participant JSON (refer to the Groups API).",
                                "type": "string"
                            },
                            "important_dates": {
                                "description": "Boolean indicating whether this has important dates.",
                                "example": true,
                                "type": "boolean"
                            },
                            "series_uuid": {
                                "description": "Identifies the recurring event series this event may belong to",
                                "type": "uuid"
                            },
                            "rrule": {
                                "description": "An iCalendar RRULE for defining how events in a recurring event series repeat.",
                                "type": "string"
                            },
                            "series_natural_language": {
                                "description": "A natural language expression of how events occur in the series. (e.g. Daily, 2 times)",
                                "type": "string"
                            },
                            "blackout_date": {
                                "description": "Boolean indicating whether this has blackout date.",
                                "example": true,
                                "type": "boolean"
                            }
                        }
                    },
                    "AssignmentEvent": {
                        "id": "AssignmentEvent",
                        "description": "",
                        "required": [],
                        "deprecated": false,
                        "deprecation_description": null,
                        "properties": {
                            "id": {
                                "description": "A synthetic ID for the assignment",
                                "example": "assignment_987",
                                "type": "string"
                            },
                            "title": {
                                "description": "The title of the assignment",
                                "example": "Essay",
                                "type": "string"
                            },
                            "start_at": {
                                "description": "The due_at timestamp of the assignment",
                                "example": "2012-07-19T23:59:00-06:00",
                                "type": "datetime"
                            },
                            "end_at": {
                                "description": "The due_at timestamp of the assignment",
                                "example": "2012-07-19T23:59:00-06:00",
                                "type": "datetime"
                            },
                            "description": {
                                "description": "The HTML description of the assignment",
                                "example": "<b>Write an essay. Whatever you want.</b>",
                                "type": "string"
                            },
                            "context_code": {
                                "description": "the context code of the (course) calendar this assignment belongs to",
                                "example": "course_123",
                                "type": "string"
                            },
                            "workflow_state": {
                                "description": "Current state of the assignment ('published' or 'deleted')",
                                "example": "published",
                                "type": "string",
                                "allowableValues": {
                                    "values": [
                                        "published",
                                        "deleted"
                                    ]
                                }
                            },
                            "url": {
                                "description": "URL for this assignment (note that updating/deleting should be done via the Assignments API)",
                                "example": "https://example.com/api/v1/calendar_events/assignment_987",
                                "type": "string"
                            },
                            "html_url": {
                                "description": "URL for a user to view this assignment",
                                "example": "http://example.com/courses/123/assignments/987",
                                "type": "string"
                            },
                            "all_day_date": {
                                "description": "The due date of this assignment",
                                "example": "2012-07-19",
                                "type": "datetime"
                            },
                            "all_day": {
                                "description": "Boolean indicating whether this is an all-day event (e.g. assignment due at midnight)",
                                "example": true,
                                "type": "boolean"
                            },
                            "created_at": {
                                "description": "When the assignment was created",
                                "example": "2012-07-12T10:55:20-06:00",
                                "type": "datetime"
                            },
                            "updated_at": {
                                "description": "When the assignment was last updated",
                                "example": "2012-07-12T10:55:20-06:00",
                                "type": "datetime"
                            },
                            "assignment": {
                                "description": "The full assignment JSON data (See the Assignments API)",
                                "$ref": "Assignment"
                            },
                            "assignment_overrides": {
                                "description": "The list of AssignmentOverrides that apply to this event (See the Assignments API). This information is useful for determining which students or sections this assignment-due event applies to.",
                                "$ref": "AssignmentOverride"
                            },
                            "important_dates": {
                                "description": "Boolean indicating whether this has important dates.",
                                "example": true,
                                "type": "boolean"
                            }
                        }
                    },
                    "Collaboration": {
                        "id": "Collaboration",
                        "description": "",
                        "required": [],
                        "deprecated": false,
                        "deprecation_description": null,
                        "properties": {
                            "id": {
                                "description": "The unique identifier for the collaboration",
                                "example": 43,
                                "type": "integer"
                            },
                            "collaboration_type": {
                                "description": "A name for the type of collaboration",
                                "example": "Microsoft Office",
                                "type": "string"
                            },
                            "document_id": {
                                "description": "The collaboration document identifier for the collaboration provider",
                                "example": "oinwoenfe8w8ef_onweufe89fef",
                                "type": "string"
                            },
                            "user_id": {
                                "description": "The canvas id of the user who created the collaboration",
                                "example": 92,
                                "type": "integer"
                            },
                            "context_id": {
                                "description": "The canvas id of the course or group to which the collaboration belongs",
                                "example": 77,
                                "type": "integer"
                            },
                            "context_type": {
                                "description": "The canvas type of the course or group to which the collaboration belongs",
                                "example": "Course",
                                "type": "string"
                            },
                            "url": {
                                "description": "The LTI launch url to view collaboration.",
                                "type": "string"
                            },
                            "created_at": {
                                "description": "The timestamp when the collaboration was created",
                                "example": "2012-06-01T00:00:00-06:00",
                                "type": "datetime"
                            },
                            "updated_at": {
                                "description": "The timestamp when the collaboration was last modified",
                                "example": "2012-06-01T00:00:00-06:00",
                                "type": "datetime"
                            },
                            "description": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "type": {
                                "description": "Another representation of the collaboration type",
                                "example": "ExternalToolCollaboration",
                                "type": "string"
                            },
                            "update_url": {
                                "description": "The LTI launch url to edit the collaboration",
                                "type": "string"
                            },
                            "user_name": {
                                "description": "The name of the user who owns the collaboration",
                                "example": "John Danger",
                                "type": "string"
                            }
                        }
                    },
                    "Collaborator": {
                        "id": "Collaborator",
                        "description": "",
                        "required": [
                            "id"
                        ],
                        "deprecated": false,
                        "deprecation_description": null,
                        "properties": {
                            "id": {
                                "description": "The unique user or group identifier for the collaborator.",
                                "example": 12345,
                                "type": "integer"
                            },
                            "type": {
                                "description": "The type of collaborator (e.g. 'user' or 'group').",
                                "example": "user",
                                "type": "string",
                                "allowableValues": {
                                    "values": [
                                        "user",
                                        "group"
                                    ]
                                }
                            },
                            "name": {
                                "description": "The name of the collaborator.",
                                "example": "Don Draper",
                                "type": "string"
                            }
                        }
                    },
                    "Collaboration": {
                        "id": "Collaboration",
                        "description": "",
                        "required": [],
                        "deprecated": false,
                        "deprecation_description": null,
                        "properties": {
                            "id": {
                                "description": "The unique identifier for the collaboration",
                                "example": 43,
                                "type": "integer"
                            },
                            "collaboration_type": {
                                "description": "A name for the type of collaboration",
                                "example": "Microsoft Office",
                                "type": "string"
                            },
                            "document_id": {
                                "description": "The collaboration document identifier for the collaboration provider",
                                "example": "oinwoenfe8w8ef_onweufe89fef",
                                "type": "string"
                            },
                            "user_id": {
                                "description": "The canvas id of the user who created the collaboration",
                                "example": 92,
                                "type": "integer"
                            },
                            "context_id": {
                                "description": "The canvas id of the course or group to which the collaboration belongs",
                                "example": 77,
                                "type": "integer"
                            },
                            "context_type": {
                                "description": "The canvas type of the course or group to which the collaboration belongs",
                                "example": "Course",
                                "type": "string"
                            },
                            "url": {
                                "description": "The LTI launch url to view collaboration.",
                                "type": "string"
                            },
                            "created_at": {
                                "description": "The timestamp when the collaboration was created",
                                "example": "2012-06-01T00:00:00-06:00",
                                "type": "datetime"
                            },
                            "updated_at": {
                                "description": "The timestamp when the collaboration was last modified",
                                "example": "2012-06-01T00:00:00-06:00",
                                "type": "datetime"
                            },
                            "description": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "type": {
                                "description": "Another representation of the collaboration type",
                                "example": "ExternalToolCollaboration",
                                "type": "string"
                            },
                            "update_url": {
                                "description": "The LTI launch url to edit the collaboration",
                                "type": "string"
                            },
                            "user_name": {
                                "description": "The name of the user who owns the collaboration",
                                "example": "John Danger",
                                "type": "string"
                            }
                        }
                    },
                    "Collaborator": {
                        "id": "Collaborator",
                        "description": "",
                        "required": [
                            "id"
                        ],
                        "deprecated": false,
                        "deprecation_description": null,
                        "properties": {
                            "id": {
                                "description": "The unique user or group identifier for the collaborator.",
                                "example": 12345,
                                "type": "integer"
                            },
                            "type": {
                                "description": "The type of collaborator (e.g. 'user' or 'group').",
                                "example": "user",
                                "type": "string",
                                "allowableValues": {
                                    "values": [
                                        "user",
                                        "group"
                                    ]
                                }
                            },
                            "name": {
                                "description": "The name of the collaborator.",
                                "example": "Don Draper",
                                "type": "string"
                            }
                        }
                    }
                },
                "CommMessage": {
                    "id": "CommMessage",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "The ID of the CommMessage.",
                            "example": 42,
                            "type": "integer"
                        },
                        "created_at": {
                            "description": "The date and time this message was created",
                            "example": "2013-03-19T21:00:00Z",
                            "type": "datetime"
                        },
                        "sent_at": {
                            "description": "The date and time this message was sent",
                            "example": "2013-03-20T22:42:00Z",
                            "type": "datetime"
                        },
                        "workflow_state": {
                            "description": "The workflow state of the message. One of 'created', 'staged', 'sending', 'sent', 'bounced', 'dashboard', 'cancelled', or 'closed'",
                            "example": "sent",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "created",
                                    "staged",
                                    "sending",
                                    "sent",
                                    "bounced",
                                    "dashboard",
                                    "cancelled",
                                    "closed"
                                ]
                            }
                        },
                        "from": {
                            "description": "The address that was put in the 'from' field of the message",
                            "example": "notifications@example.com",
                            "type": "string"
                        },
                        "from_name": {
                            "description": "The display name for the from address",
                            "example": "Instructure Canvas",
                            "type": "string"
                        },
                        "to": {
                            "description": "The address the message was sent to:",
                            "example": "someone@example.com",
                            "type": "string"
                        },
                        "reply_to": {
                            "description": "The reply_to header of the message",
                            "example": "notifications+specialdata@example.com",
                            "type": "string"
                        },
                        "subject": {
                            "description": "The message subject",
                            "example": "example subject line",
                            "type": "string"
                        },
                        "body": {
                            "description": "The plain text body of the message",
                            "example": "This is the body of the message",
                            "type": "string"
                        },
                        "html_body": {
                            "description": "The HTML body of the message.",
                            "example": "<html><body>This is the body of the message</body></html>",
                            "type": "string"
                        }
                    }
                },
                "CommunicationChannel": {
                    "id": "CommunicationChannel",
                    "description": "",
                    "required": [],
                    "deprecated": false,
                    "deprecation_description": null,
                    "properties": {
                        "id": {
                            "description": "The ID of the communication channel.",
                            "example": 16,
                            "type": "integer"
                        },
                        "address": {
                            "description": "The address, or path, of the communication channel.",
                            "example": "sheldon@caltech.example.com",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of communcation channel being described. Possible values are: 'email', 'push', 'sms', or 'twitter'. This field determines the type of value seen in 'address'.",
                            "example": "email",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "email",
                                    "push",
                                    "sms",
                                    "twitter"
                                ]
                            }
                        },
                        "position": {
                            "description": "The position of this communication channel relative to the user's other channels when they are ordered.",
                            "example": 1,
                            "type": "integer"
                        },
                        "user_id": {
                            "description": "The ID of the user that owns this communication channel.",
                            "example": 1,
                            "type": "integer"
                        },
                        "workflow_state": {
                            "description": "The current state of the communication channel. Possible values are: 'unconfirmed' or 'active'.",
                            "example": "active",
                            "type": "string",
                            "allowableValues": {
                                "values": [
                                    "unconfirmed",
                                    "active"
                                ]
                            }
                        }
                    }
                }
            },
            "ConferenceRecording": {
                "id": "ConferenceRecording",
                "description": "",
                "required": [],
                "deprecated": false,
                "deprecation_description": null,
                "properties": {
                    "duration_minutes": {
                        "example": 0,
                        "type": "integer"
                    },
                    "title": {
                        "example": "course2: Test conference 3 [170]_0",
                        "type": "string"
                    },
                    "updated_at": {
                        "example": "2013-12-12T16:09:33.903-07:00",
                        "type": "datetime"
                    },
                    "created_at": {
                        "example": "2013-12-12T16:09:09.960-07:00",
                        "type": "datetime"
                    },
                    "playback_url": {
                        "example": "http://example.com/recording_url",
                        "type": "string"
                    }
                }
            },
            "Conference": {
                "id": "Conference",
                "description": "",
                "required": [],
                "deprecated": false,
                "deprecation_description": null,
                "properties": {
                    "id": {
                        "description": "The id of the conference",
                        "example": 170,
                        "type": "integer"
                    },
                    "conference_type": {
                        "description": "The type of conference",
                        "example": "AdobeConnect",
                        "type": "string"
                    },
                    "conference_key": {
                        "description": "The 3rd party's ID for the conference",
                        "example": "abcdjoelisgreatxyz",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description for the conference",
                        "example": "Conference Description",
                        "type": "string"
                    },
                    "duration": {
                        "description": "The expected duration the conference is supposed to last",
                        "example": 60,
                        "type": "integer"
                    },
                    "ended_at": {
                        "description": "The date that the conference ended at, null if it hasn't ended",
                        "example": "2013-12-13T17:23:26Z",
                        "type": "datetime"
                    },
                    "started_at": {
                        "description": "The date the conference started at, null if it hasn't started",
                        "example": "2013-12-12T23:02:17Z",
                        "type": "datetime"
                    },
                    "title": {
                        "description": "The title of the conference",
                        "example": "Test conference",
                        "type": "string"
                    },
                    "users": {
                        "description": "Array of user ids that are participants in the conference",
                        "example": [
                            1,
                            7,
                            8,
                            9,
                            10
                        ],
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "has_advanced_settings": {
                        "description": "True if the conference type has advanced settings.",
                        "example": false,
                        "type": "boolean"
                    },
                    "long_running": {
                        "description": "If true the conference is long running and has no expected end time",
                        "example": false,
                        "type": "boolean"
                    },
                    "user_settings": {
                        "description": "A collection of settings specific to the conference type",
                        "example": {
                            "record": true
                        },
                        "type": "object"
                    },
                    "recordings": {
                        "description": "A List of recordings for the conference",
                        "type": "array",
                        "items": {
                            "$ref": "ConferenceRecording"
                        }
                    },
                    "url": {
                        "description": "URL for the conference, may be null if the conference type doesn't set it",
                        "type": "string"
                    },
                    "join_url": {
                        "description": "URL to join the conference, may be null if the conference type doesn't set it",
                        "type": "string"
                    },
                    "context_type": {
                        "description": "The type of this conference's context, typically 'Course' or 'Group'.",
                        "type": "string"
                    },
                    "context_id": {
                        "description": "The ID of this conference's context.",
                        "type": "integer"
                    }
                }
            }
        },
        "ContentExport": {
            "id": "ContentExport",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "the unique identifier for the export",
                    "example": 101,
                    "type": "integer"
                },
                "created_at": {
                    "description": "the date and time this export was requested",
                    "example": "2014-01-01T00:00:00Z",
                    "type": "datetime"
                },
                "export_type": {
                    "description": "the type of content migration: 'common_cartridge' or 'qti'",
                    "example": "common_cartridge",
                    "type": "string",
                    "allowableValues": {
                        "values": [
                            "common_cartridge",
                            "qti"
                        ]
                    }
                },
                "attachment": {
                    "description": "attachment api object for the export package (not present before the export completes or after it becomes unavailable for download.)",
                    "example": {
                        "url": "https://example.com/api/v1/attachments/789?download_frd=1&verifier=bG9sY2F0cyEh"
                    },
                    "$ref": "File"
                },
                "progress_url": {
                    "description": "The api endpoint for polling the current progress",
                    "example": "https://example.com/api/v1/progress/4",
                    "type": "string"
                },
                "user_id": {
                    "description": "The ID of the user who started the export",
                    "example": 4,
                    "type": "integer"
                },
                "workflow_state": {
                    "description": "Current state of the content migration: created exporting exported failed",
                    "example": "exported",
                    "type": "string",
                    "allowableValues": {
                        "values": [
                            "created",
                            "exporting",
                            "exported",
                            "failed"
                        ]
                    }
                }
            }
        },
        "ContentShare": {
            "id": "ContentShare",
            "description": "Content shared between users",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "The id of the content share for the current user",
                    "example": 1,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the shared content",
                    "example": "War of 1812 homework",
                    "type": "string"
                },
                "content_type": {
                    "description": "The type of content that was shared. Can be assignment, discussion_topic, page, quiz, module, or module_item.",
                    "example": "assignment",
                    "type": "string"
                },
                "created_at": {
                    "description": "The datetime the content was shared with this user.",
                    "example": "2017-05-09T10:12:00Z",
                    "type": "datetime"
                },
                "updated_at": {
                    "description": "The datetime the content was updated.",
                    "example": "2017-05-09T10:12:00Z",
                    "type": "datetime"
                },
                "user_id": {
                    "description": "The id of the user who sent or received the content share.",
                    "example": 1578941,
                    "type": "integer"
                },
                "sender": {
                    "description": "The user who shared the content. This field is provided only to receivers; it is not populated in the sender's list of sent content shares.",
                    "example": {
                        "id": 1,
                        "display_name": "Matilda Vargas",
                        "avatar_image_url": "http://localhost:3000/image_url",
                        "html_url": "http://localhost:3000/users/1"
                    },
                    "type": "object"
                },
                "receivers": {
                    "description": "An Array of users the content is shared with.  This field is provided only to senders; an empty array will be returned for the receiving users.",
                    "example": [
                        {
                            "id": 1,
                            "display_name": "Jon Snow",
                            "avatar_image_url": "http://localhost:3000/image_url2",
                            "html_url": "http://localhost:3000/users/2"
                        }
                    ],
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "source_course": {
                    "description": "The course the content was originally shared from.",
                    "example": {
                        "id": 787,
                        "name": "History 105"
                    },
                    "type": "object"
                },
                "read_state": {
                    "description": "Whether the recipient has viewed the content share.",
                    "example": "read",
                    "type": "string"
                },
                "content_export": {
                    "description": "The content export record associated with this content share",
                    "example": {
                        "id": 42
                    },
                    "$ref": "ContentExport"
                }
            }
        },
        "Conversation": {
            "id": "Conversation",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "the unique identifier for the conversation.",
                    "example": 2,
                    "type": "integer",
                    "format": "int64"
                },
                "subject": {
                    "description": "the subject of the conversation.",
                    "example": 2,
                    "type": "string"
                },
                "workflow_state": {
                    "description": "The current state of the conversation (read, unread or archived).",
                    "example": "unread",
                    "type": "string"
                },
                "last_message": {
                    "description": "A <=100 character preview from the most recent message.",
                    "example": "sure thing, here's the file",
                    "type": "string"
                },
                "start_at": {
                    "description": "the date and time at which the last message was sent.",
                    "example": "2011-09-02T12:00:00Z",
                    "type": "datetime"
                },
                "message_count": {
                    "description": "the number of messages in the conversation.",
                    "example": 2,
                    "type": "integer"
                },
                "subscribed": {
                    "description": "whether the current user is subscribed to the conversation.",
                    "example": true,
                    "type": "boolean"
                },
                "private": {
                    "description": "whether the conversation is private.",
                    "example": true,
                    "type": "boolean"
                },
                "starred": {
                    "description": "whether the conversation is starred.",
                    "example": true,
                    "type": "boolean"
                },
                "properties": {
                    "description": "Additional conversation flags (last_author, attachments, media_objects). Each listed property means the flag is set to true (i.e. the current user is the most recent author, there are attachments, or there are media objects)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "audience": {
                    "description": "Array of user ids who are involved in the conversation, ordered by participation level, then alphabetical. Excludes current user, unless this is a monologue.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "audience_contexts": {
                    "description": "Most relevant shared contexts (courses and groups) between current user and other participants. If there is only one participant, it will also include that user's enrollment(s)/ membership type(s) in each course/group.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "avatar_url": {
                    "description": "URL to appropriate icon for this conversation (custom, individual or group avatar, depending on audience).",
                    "example": "https://canvas.instructure.com/images/messages/avatar-group-50.png",
                    "type": "string"
                },
                "participants": {
                    "description": "Array of users participating in the conversation. Includes current user.",
                    "type": "array",
                    "items": {
                        "$ref": "ConversationParticipant"
                    }
                },
                "visible": {
                    "description": "indicates whether the conversation is visible under the current scope and filter. This attribute is always true in the index API response, and is primarily useful in create/update responses so that you can know if the record should be displayed in the UI. The default scope is assumed, unless a scope or filter is passed to the create/update API call.",
                    "example": true,
                    "type": "boolean"
                },
                "context_name": {
                    "description": "Name of the course or group in which the conversation is occurring.",
                    "example": "Canvas 101",
                    "type": "string"
                }
            }
        },
        "ConversationParticipant": {
            "id": "ConversationParticipant",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "The user ID for the participant.",
                    "example": 2,
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "A short name the user has selected, for use in conversations or other less formal places through the site.",
                    "example": "Shelly",
                    "type": "string"
                },
                "full_name": {
                    "description": "The full name of the user.",
                    "example": "Sheldon Cooper",
                    "type": "string"
                },
                "avatar_url": {
                    "description": "If requested, this field will be included and contain a url to retrieve the user's avatar.",
                    "example": "https://canvas.instructure.com/images/messages/avatar-50.png",
                    "type": "string"
                }
            }
        },
        "CourseEventLink": {
            "id": "CourseEventLink",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "course": {
                    "description": "ID of the course for the event.",
                    "example": 12345,
                    "type": "integer"
                },
                "user": {
                    "description": "ID of the user for the event (who made the change).",
                    "example": 12345,
                    "type": "integer"
                },
                "page_view": {
                    "description": "ID of the page view during the event if it exists.",
                    "example": "e2b76430-27a5-0131-3ca1-48e0eb13f29b",
                    "type": "string"
                },
                "copied_from": {
                    "description": "ID of the course that this course was copied from. This is only included if the event_type is copied_from.",
                    "example": 12345,
                    "type": "integer"
                },
                "copied_to": {
                    "description": "ID of the course that this course was copied to. This is only included if the event_type is copied_to.",
                    "example": 12345,
                    "type": "integer"
                },
                "sis_batch": {
                    "description": "ID of the SIS batch that triggered the event.",
                    "example": 12345,
                    "type": "integer"
                }
            }
        },
        "CourseEvent": {
            "id": "CourseEvent",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "ID of the event.",
                    "example": "e2b76430-27a5-0131-3ca1-48e0eb13f29b",
                    "type": "string"
                },
                "created_at": {
                    "description": "timestamp of the event",
                    "example": "2012-07-19T15:00:00-06:00",
                    "type": "datetime"
                },
                "event_type": {
                    "description": "Course event type The event type defines the type and schema of the event_data object.",
                    "example": "updated",
                    "type": "string"
                },
                "event_data": {
                    "description": "Course event data depending on the event type.  This will return an object containing the relevant event data.  An updated event type will return an UpdatedEventData object.",
                    "example": "{}",
                    "type": "string"
                },
                "event_source": {
                    "description": "Course event source depending on the event type.  This will return a string containing the source of the event.",
                    "example": "manual|sis|api",
                    "type": "string"
                },
                "links": {
                    "description": "Jsonapi.org links",
                    "example": {
                        "course": "12345",
                        "user": "12345",
                        "page_view": "e2b76430-27a5-0131-3ca1-48e0eb13f29b"
                    },
                    "$ref": "CourseEventLink"
                }
            }
        },
        "CreatedEventData": {
            "id": "CreatedEventData",
            "description": "The created event data object returns all the fields that were set in the format of the following example.  If a field does not exist it was not set. The value of each field changed is in the format of [:old_value, :new_value].  The created event type also includes a created_source field to specify what triggered the creation of the course.",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "name": {
                    "example": [
                        null,
                        "Course 1"
                    ],
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start_at": {
                    "example": [
                        null,
                        "2012-01-19T15:00:00-06:00"
                    ],
                    "type": "array",
                    "items": {
                        "type": "datetime"
                    }
                },
                "conclude_at": {
                    "example": [
                        null,
                        "2012-01-19T15:00:00-08:00"
                    ],
                    "type": "array",
                    "items": {
                        "type": "datetime"
                    }
                },
                "is_public": {
                    "example": [
                        null,
                        false
                    ],
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "created_source": {
                    "description": "The type of action that triggered the creation of the course.",
                    "example": "manual|sis|api",
                    "type": "string"
                }
            }
        },
        "UpdatedEventData": {
            "id": "UpdatedEventData",
            "description": "The updated event data object returns all the fields that have changed in the format of the following example.  If a field does not exist it was not changed.  The value is an array that contains the before and after values for the change as in [:old_value, :new_value].",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "name": {
                    "example": [
                        "Course 1",
                        "Course 2"
                    ],
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start_at": {
                    "example": [
                        "2012-01-19T15:00:00-06:00",
                        "2012-07-19T15:00:00-06:00"
                    ],
                    "type": "array",
                    "items": {
                        "type": "datetime"
                    }
                },
                "conclude_at": {
                    "example": [
                        "2012-01-19T15:00:00-08:00",
                        "2012-07-19T15:00:00-08:00"
                    ],
                    "type": "array",
                    "items": {
                        "type": "datetime"
                    }
                },
                "is_public": {
                    "example": [
                        true,
                        false
                    ],
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                }
            }
        },
        "CourseQuizExtension": {
            "id": "CourseQuizExtension",
            "description": "",
            "required": [
                "user_id"
            ],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "user_id": {
                    "description": "The ID of the Student that needs the quiz extension.",
                    "example": 3,
                    "type": "integer",
                    "format": "int64"
                },
                "extra_attempts": {
                    "description": "Number of times the student is allowed to re-take the quiz over the multiple-attempt limit.",
                    "example": 1,
                    "type": "integer",
                    "format": "int64"
                },
                "extra_time": {
                    "description": "Amount of extra time allowed for the quiz submission, in minutes.",
                    "example": 60,
                    "type": "integer",
                    "format": "int64"
                },
                "manually_unlocked": {
                    "description": "The student can take the quiz even if it's locked for everyone else",
                    "example": true,
                    "type": "boolean"
                },
                "end_at": {
                    "description": "The time at which the quiz submission will be overdue, and be flagged as a late submission.",
                    "example": "2013-11-07T13:16:18Z",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Term": {
            "id": "Term",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "example": 1,
                    "type": "integer"
                },
                "name": {
                    "example": "Default Term",
                    "type": "string"
                },
                "start_at": {
                    "example": "2012-06-01T00:00:00-06:00",
                    "type": "datetime"
                },
                "end_at": {
                    "type": "datetime"
                }
            }
        },
        "CourseProgress": {
            "id": "CourseProgress",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "requirement_count": {
                    "description": "total number of requirements from all modules",
                    "example": 10,
                    "type": "integer"
                },
                "requirement_completed_count": {
                    "description": "total number of requirements the user has completed from all modules",
                    "example": 1,
                    "type": "integer"
                },
                "next_requirement_url": {
                    "description": "url to next module item that has an unmet requirement. null if the user has completed the course or the current module does not require sequential progress",
                    "example": "http://localhost/courses/1/modules/items/2",
                    "type": "string"
                },
                "completed_at": {
                    "description": "date the course was completed. null if the course has not been completed by this user",
                    "example": "2013-06-01T00:00:00-06:00",
                    "type": "datetime"
                }
            }
        },
        "Course": {
            "id": "Course",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "the unique identifier for the course",
                    "example": 370663,
                    "type": "integer"
                },
                "sis_course_id": {
                    "description": "the SIS identifier for the course, if defined. This field is only included if the user has permission to view SIS information.",
                    "type": "string"
                },
                "uuid": {
                    "description": "the UUID of the course",
                    "example": "WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5",
                    "type": "string"
                },
                "integration_id": {
                    "description": "the integration identifier for the course, if defined. This field is only included if the user has permission to view SIS information.",
                    "type": "string"
                },
                "sis_import_id": {
                    "description": "the unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.",
                    "example": 34,
                    "type": "integer"
                },
                "name": {
                    "description": "the full name of the course. If the requesting user has set a nickname for the course, the nickname will be shown here.",
                    "example": "InstructureCon 2012",
                    "type": "string"
                },
                "course_code": {
                    "description": "the course code",
                    "example": "INSTCON12",
                    "type": "string"
                },
                "original_name": {
                    "description": "the actual course name. This field is returned only if the requesting user has set a nickname for the course.",
                    "example": "InstructureCon-2012-01",
                    "type": "string"
                },
                "workflow_state": {
                    "description": "the current state of the course one of 'unpublished', 'available', 'completed', or 'deleted'",
                    "example": "available",
                    "type": "string",
                    "allowableValues": {
                        "values": [
                            "unpublished",
                            "available",
                            "completed",
                            "deleted"
                        ]
                    }
                },
                "account_id": {
                    "description": "the account associated with the course",
                    "example": 81259,
                    "type": "integer"
                },
                "root_account_id": {
                    "description": "the root account associated with the course",
                    "example": 81259,
                    "type": "integer"
                },
                "enrollment_term_id": {
                    "description": "the enrollment term associated with the course",
                    "example": 34,
                    "type": "integer"
                },
                "grading_periods": {
                    "description": "A list of grading periods associated with the course",
                    "type": "array",
                    "items": {
                        "$ref": "GradingPeriod"
                    }
                },
                "grading_standard_id": {
                    "description": "the grading standard associated with the course",
                    "example": 25,
                    "type": "integer"
                },
                "grade_passback_setting": {
                    "description": "the grade_passback_setting set on the course",
                    "example": "nightly_sync",
                    "type": "string"
                },
                "created_at": {
                    "description": "the date the course was created.",
                    "example": "2012-05-01T00:00:00-06:00",
                    "type": "datetime"
                },
                "start_at": {
                    "description": "the start date for the course, if applicable",
                    "example": "2012-06-01T00:00:00-06:00",
                    "type": "datetime"
                },
                "end_at": {
                    "description": "the end date for the course, if applicable",
                    "example": "2012-09-01T00:00:00-06:00",
                    "type": "datetime"
                },
                "locale": {
                    "description": "the course-set locale, if applicable",
                    "example": "en",
                    "type": "string"
                },
                "enrollments": {
                    "description": "A list of enrollments linking the current user to the course. for student enrollments, grading information may be included if include[]=total_scores",
                    "type": "array",
                    "items": {
                        "$ref": "Enrollment"
                    }
                },
                "total_students": {
                    "description": "optional: the total number of active and invited students in the course",
                    "example": 32,
                    "type": "integer"
                },
                "calendar": {
                    "description": "course calendar",
                    "$ref": "CalendarLink"
                },
                "default_view": {
                    "description": "the type of page that users will see when they first visit the course - 'feed': Recent Activity Dashboard - 'wiki': Wiki Front Page - 'modules': Course Modules/Sections Page - 'assignments': Course Assignments List - 'syllabus': Course Syllabus Page other types may be added in the future",
                    "example": "feed",
                    "type": "string",
                    "allowableValues": {
                        "values": [
                            "feed",
                            "wiki",
                            "modules",
                            "syllabus",
                            "assignments"
                        ]
                    }
                },
                "syllabus_body": {
                    "description": "optional: user-generated HTML for the course syllabus",
                    "example": "<p>syllabus html goes here</p>",
                    "type": "string"
                },
                "needs_grading_count": {
                    "description": "optional: the number of submissions needing grading returned only if the current user has grading rights and include[]=needs_grading_count",
                    "example": 17,
                    "type": "integer"
                },
                "term": {
                    "description": "optional: the enrollment term object for the course returned only if include[]=term",
                    "$ref": "Term"
                },
                "course_progress": {
                    "description": "optional: information on progress through the course returned only if include[]=course_progress",
                    "$ref": "CourseProgress"
                },
                "apply_assignment_group_weights": {
                    "description": "weight final grade based on assignment group percentages",
                    "example": true,
                    "type": "boolean"
                },
                "permissions": {
                    "description": "optional: the permissions the user has for the course. returned only for a single course and include[]=permissions",
                    "example": {
                        "create_discussion_topic": true,
                        "create_announcement": true
                    },
                    "type": "object",
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "boolean"
                    }
                },
                "is_public": {
                    "example": true,
                    "type": "boolean"
                },
                "is_public_to_auth_users": {
                    "example": true,
                    "type": "boolean"
                },
                "public_syllabus": {
                    "example": true,
                    "type": "boolean"
                },
                "public_syllabus_to_auth": {
                    "example": true,
                    "type": "boolean"
                },
                "public_description": {
                    "description": "optional: the public description of the course",
                    "example": "Come one, come all to InstructureCon 2012!",
                    "type": "string"
                },
                "storage_quota_mb": {
                    "example": 5,
                    "type": "integer"
                },
                "storage_quota_used_mb": {
                    "example": 5,
                    "type": "number"
                },
                "hide_final_grades": {
                    "example": false,
                    "type": "boolean"
                },
                "license": {
                    "example": "Creative Commons",
                    "type": "string"
                },
                "allow_student_assignment_edits": {
                    "example": false,
                    "type": "boolean"
                },
                "allow_wiki_comments": {
                    "example": false,
                    "type": "boolean"
                },
                "allow_student_forum_attachments": {
                    "example": false,
                    "type": "boolean"
                },
                "open_enrollment": {
                    "example": true,
                    "type": "boolean"
                },
                "self_enrollment": {
                    "example": false,
                    "type": "boolean"
                },
                "restrict_enrollments_to_course_dates": {
                    "example": false,
                    "type": "boolean"
                },
                "course_format": {
                    "example": "online",
                    "type": "string"
                },
                "access_restricted_by_date": {
                    "description": "optional: this will be true if this user is currently prevented from viewing the course because of date restriction settings",
                    "example": false,
                    "type": "boolean"
                },
                "time_zone": {
                    "description": "The course's IANA time zone name.",
                    "example": "America/Denver",
                    "type": "string"
                },
                "blueprint": {
                    "description": "optional: whether the course is set as a Blueprint Course (blueprint fields require the Blueprint Courses feature)",
                    "example": true,
                    "type": "boolean"
                },
                "blueprint_restrictions": {
                    "description": "optional: Set of restrictions applied to all locked course objects",
                    "example": {
                        "content": true,
                        "points": true,
                        "due_dates": false,
                        "availability_dates": false
                    },
                    "type": "object"
                },
                "blueprint_restrictions_by_object_type": {
                    "description": "optional: Sets of restrictions differentiated by object type applied to locked course objects",
                    "example": {
                        "assignment": {
                            "content": true,
                            "points": true
                        },
                        "wiki_page": {
                            "content": true
                        }
                    },
                    "type": "object"
                },
                "template": {
                    "description": "optional: whether the course is set as a template (requires the Course Templates feature)",
                    "example": true,
                    "type": "boolean"
                }
            }
        },
        "CalendarLink": {
            "id": "CalendarLink",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "ics": {
                    "description": "The URL of the calendar in ICS format",
                    "example": "https://canvas.instructure.com/feeds/calendars/course_abcdef.ics",
                    "type": "string"
                }
            }
        },
        "CustomColumn": {
            "id": "CustomColumn",
            "description": "",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "id": {
                    "description": "The ID of the custom gradebook column",
                    "example": 2,
                    "type": "integer"
                },
                "teacher_notes": {
                    "description": "When true, this column's visibility will be toggled in the Gradebook when a user selects to show or hide notes",
                    "example": false,
                    "type": "boolean"
                },
                "title": {
                    "description": "header text",
                    "example": "Stuff",
                    "type": "string"
                },
                "position": {
                    "description": "column order",
                    "example": 1,
                    "type": "integer"
                },
                "hidden": {
                    "description": "won't be displayed if hidden is true",
                    "example": false,
                    "type": "boolean"
                },
                "read_only": {
                    "description": "won't be editable in the gradebook UI",
                    "example": true,
                    "type": "boolean"
                }
            }
        },
        "ColumnDatum": {
            "id": "ColumnDatum",
            "description": "ColumnDatum objects contain the entry for a column for each user.",
            "required": [],
            "deprecated": false,
            "deprecation_description": null,
            "properties": {
                "content": {
                    "example": "Nut allergy",
                    "type": "string"
                },
                "user_id": {
                    "example": 2,
                    "type": "integer"
                }
            }
        }
    }
}