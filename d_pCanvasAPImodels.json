
"Assessment": {
    "id": "Assessment",
    "description": "A simple assessment that collects pass/fail results for a student",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "type": "string",
            "example": "42",
            "description": "A unique identifier for this live assessment"
        },
        "key": {
            "type": "string",
            "example": "2014-05-27,outcome_52",
            "description": "A client specified unique identifier for the assessment"
        },
        "title": {
            "type": "string",
            "example": "May 27th Reading Assessment",
            "description": "A human readable title for the assessment"
        }
    }
},
"CompletionRequirement": {
    "id": "CompletionRequirement",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "type": {
            "description": "one of 'must_view', 'must_submit', 'must_contribute', 'min_score', 'must_mark_done'",
            "example": "min_score",
            "type": "string",
            "allowableValues": {
                "values": [
                    "must_view",
                    "must_submit",
                    "must_contribute",
                    "min_score",
                    "must_mark_done"
                ]
            }
        },
        "min_score": {
            "description": "minimum score required to complete (only present when type == 'min_score')",
            "example": 10,
            "type": "integer"
        },
        "completed": {
            "description": "whether the calling user has met this requirement (Optional; present only if the caller is a student or if the optional parameter 'student_id' is included)",
            "example": true,
            "type": "boolean"
        }
    }
},
"ContentDetails": {
    "id": "ContentDetails",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "points_possible": {
            "example": 20,
            "type": "integer"
        },
        "due_at": {
            "example": "2012-12-31T06:00:00-06:00",
            "type": "datetime"
        },
        "unlock_at": {
            "example": "2012-12-31T06:00:00-06:00",
            "type": "datetime"
        },
        "lock_at": {
            "example": "2012-12-31T06:00:00-06:00",
            "type": "datetime"
        },
        "locked_for_user": {
            "example": true,
            "type": "boolean"
        },
        "lock_explanation": {
            "example": "This quiz is part of an unpublished module and is not available yet.",
            "type": "string"
        },
        "lock_info": {
            "example": {
                "asset_string": "assignment_4",
                "unlock_at": "2012-12-31T06:00:00-06:00",
                "lock_at": "2012-12-31T06:00:00-06:00",
                "context_module": {}
            },
            "$ref": "LockInfo"
        }
    }
},
"CourseEpubExport": {
    "id": "CourseEpubExport",
    "description": "Combination of a Course & EpubExport.",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the unique identifier for the course",
            "example": 101,
            "type": "integer"
        },
        "name": {
            "description": "the name for the course",
            "example": "Maths 101",
            "type": "string"
        },
        "epub_export": {
            "description": "ePub export API object",
            "$ref": "EpubExport"
        }
    }
},
"Day": {
    "id": "Day",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "date": {
            "description": "the date represented by this entry",
            "example": "1986-08-09",
            "type": "datetime"
        },
        "graders": {
            "description": "an array of the graders who were responsible for the submissions in this response. the submissions are grouped according to the person who graded them and the assignment they were submitted for.",
            "example": "[]",
            "type": "integer"
        }
    }
},
"DeveloperKey": {
    "id": "DeveloperKey",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The ID should match the Developer Key ID in canvas",
            "example": "1000000000040",
            "type": "number"
        },
        "is_lti_key": {
            "description": "true the tool is a lti key, null is not a lti key",
            "example": "true",
            "type": "boolean"
        },
        "visible": {
            "description": "Controls if the tool is visable",
            "example": "true",
            "type": "boolean"
        },
        "account_name": {
            "description": "The name of the account associated with the tool",
            "example": "The Academy",
            "type": "string"
        },
        "public_jwk": {
            "description": "The public key in jwk format",
            "example": "{\n\t\"kty\":\"RSA\",\n\t\"e\":\"AQAB\",\n\t\"n\":\"ufmgt156hs168mgdhy168jrsydt168ju816rtahesuvdbmnrtd87t7h8ser\",\n\t\"alg\":\"RS256\",\n\t\"use\":\"sig\",\n\t\"kid\":\"Se68gr16s6tj_87sdr98g489dsfjy-547a6eht1\",\n}",
            "type": "string"
        },
        "vendor_code": {
            "description": "The code of the vendor managing the tool",
            "example": "fi5689s9avewr68",
            "type": "string"
        },
        "last_used_at": {
            "description": "The date and time the tool was last used",
            "example": "2019-06-07T20:34:33Z",
            "type": "datetime"
        },
        "access_token_count": {
            "description": "The number of active access tokens associated with the tool",
            "example": "0",
            "type": "number"
        },
        "redirect_uris": {
            "description": "redirect uris description",
            "example": "https://redirect.to.here.com",
            "type": "string"
        },
        "redirect_uri": {
            "description": "redirect uri description",
            "example": "https://redirect.to.here.com",
            "type": "string"
        },
        "api_key": {
            "description": "Api key for api access for the tool",
            "example": "sd45fg648sr546tgh15S15df5se56r4xdf45asef456",
            "type": "string"
        },
        "notes": {
            "description": "Notes for use specifications for the tool",
            "example": "Used for sorting graded assignments",
            "type": "string"
        },
        "name": {
            "description": "Display name of the tool",
            "example": "Tool 1",
            "type": "string"
        },
        "user_id": {
            "description": "ID of the user associated with the tool",
            "example": "tu816dnrs6zdsg148918dmu",
            "type": "string"
        },
        "created_at": {
            "description": "The time the jwk was created",
            "example": "2019-06-07T20:34:33Z",
            "type": "datetime"
        },
        "user_name": {
            "description": "The user name of the tool creator",
            "example": "johnsmith",
            "type": "string"
        },
        "email": {
            "description": "Email associated with the tool owner",
            "example": "johnsmith@instructure.com",
            "type": "string"
        },
        "require_scopes": {
            "description": "True if the tool has required permissions, null if there are no needed permissions",
            "example": "true",
            "type": "boolean"
        },
        "icon_url": {
            "description": "Icon to be displayed with the name of the tool",
            "example": "null",
            "type": "string"
        },
        "scopes": {
            "description": "Specified permissions for the tool",
            "example": "https://canvas.instructure.com/lti/public_jwk/scope/update",
            "type": "string"
        },
        "workflow_state": {
            "description": "The current state of the tool",
            "example": "active",
            "type": "string"
        }
    }
},
"DiscussionTopic": {
    "id": "DiscussionTopic",
    "description": "A discussion topic",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The ID of this topic.",
            "example": 1,
            "type": "integer"
        },
        "title": {
            "description": "The topic title.",
            "example": "Topic 1",
            "type": "string"
        },
        "message": {
            "description": "The HTML content of the message body.",
            "example": "<p>content here</p>",
            "type": "string"
        },
        "html_url": {
            "description": "The URL to the discussion topic in canvas.",
            "example": "https://<canvas>/courses/1/discussion_topics/2",
            "type": "string"
        },
        "posted_at": {
            "description": "The datetime the topic was posted. If it is null it hasn't been posted yet. (see delayed_post_at)",
            "example": "2037-07-21T13:29:31Z",
            "type": "datetime"
        },
        "last_reply_at": {
            "description": "The datetime for when the last reply was in the topic.",
            "example": "2037-07-28T19:38:31Z",
            "type": "datetime"
        },
        "require_initial_post": {
            "description": "If true then a user may not respond to other replies until that user has made an initial reply. Defaults to false.",
            "example": false,
            "type": "boolean"
        },
        "user_can_see_posts": {
            "description": "Whether or not posts in this topic are visible to the user.",
            "example": true,
            "type": "boolean"
        },
        "discussion_subentry_count": {
            "description": "The count of entries in the topic.",
            "example": 0,
            "type": "integer"
        },
        "read_state": {
            "description": "The read_state of the topic for the current user, 'read' or 'unread'.",
            "example": "read",
            "type": "string",
            "allowableValues": {
                "values": [
                    "read",
                    "unread"
                ]
            }
        },
        "unread_count": {
            "description": "The count of unread entries of this topic for the current user.",
            "example": 0,
            "type": "integer"
        },
        "subscribed": {
            "description": "Whether or not the current user is subscribed to this topic.",
            "example": true,
            "type": "boolean"
        },
        "subscription_hold": {
            "description": "(Optional) Why the user cannot subscribe to this topic. Only one reason will be returned even if multiple apply. Can be one of: 'initial_post_required': The user must post a reply first; 'not_in_group_set': The user is not in the group set for this graded group discussion; 'not_in_group': The user is not in this topic's group; 'topic_is_announcement': This topic is an announcement",
            "example": "not_in_group_set",
            "type": "string",
            "allowableValues": {
                "values": [
                    "initial_post_required",
                    "not_in_group_set",
                    "not_in_group",
                    "topic_is_announcement"
                ]
            }
        },
        "assignment_id": {
            "description": "The unique identifier of the assignment if the topic is for grading, otherwise null.",
            "type": "integer"
        },
        "delayed_post_at": {
            "description": "The datetime to publish the topic (if not right away).",
            "type": "datetime"
        },
        "published": {
            "description": "Whether this discussion topic is published (true) or draft state (false)",
            "example": true,
            "type": "boolean"
        },
        "lock_at": {
            "description": "The datetime to lock the topic (if ever).",
            "type": "datetime"
        },
        "locked": {
            "description": "Whether or not the discussion is 'closed for comments'.",
            "example": false,
            "type": "boolean"
        },
        "pinned": {
            "description": "Whether or not the discussion has been 'pinned' by an instructor",
            "example": false,
            "type": "boolean"
        },
        "locked_for_user": {
            "description": "Whether or not this is locked for the user.",
            "example": true,
            "type": "boolean"
        },
        "lock_info": {
            "description": "(Optional) Information for the user about the lock. Present when locked_for_user is true.",
            "$ref": "LockInfo"
        },
        "lock_explanation": {
            "description": "(Optional) An explanation of why this is locked for the user. Present when locked_for_user is true.",
            "example": "This discussion is locked until September 1 at 12:00am",
            "type": "string"
        },
        "user_name": {
            "description": "The username of the topic creator.",
            "example": "User Name",
            "type": "string"
        },
        "topic_children": {
            "description": "DEPRECATED An array of topic_ids for the group discussions the user is a part of.",
            "example": [
                5,
                7,
                10
            ],
            "type": "array",
            "items": {
                "type": "integer"
            }
        },
        "group_topic_children": {
            "description": "An array of group discussions the user is a part of. Fields include: id, group_id",
            "example": [
                {
                    "id": 5,
                    "group_id": 1
                },
                {
                    "id": 7,
                    "group_id": 5
                },
                {
                    "id": 10,
                    "group_id": 4
                }
            ],
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "root_topic_id": {
            "description": "If the topic is for grading and a group assignment this will point to the original topic in the course.",
            "type": "integer"
        },
        "podcast_url": {
            "description": "If the topic is a podcast topic this is the feed url for the current user.",
            "example": "/feeds/topics/1/enrollment_1XAcepje4u228rt4mi7Z1oFbRpn3RAkTzuXIGOPe.rss",
            "type": "string"
        },
        "discussion_type": {
            "description": "The type of discussion. Values are 'side_comment', for discussions that only allow one level of nested comments, and 'threaded' for fully threaded discussions.",
            "example": "side_comment",
            "type": "string",
            "allowableValues": {
                "values": [
                    "side_comment",
                    "threaded"
                ]
            }
        },
        "group_category_id": {
            "description": "The unique identifier of the group category if the topic is a group discussion, otherwise null.",
            "type": "integer"
        },
        "attachments": {
            "description": "Array of file attachments.",
            "type": "array",
            "items": {
                "$ref": "FileAttachment"
            }
        },
        "permissions": {
            "description": "The current user's permissions on this topic.",
            "example": {
                "attach": true
            },
            "type": "object",
            "key": {
                "type": "string"
            },
            "value": {
                "type": "boolean"
            }
        },
        "allow_rating": {
            "description": "Whether or not users can rate entries in this topic.",
            "example": true,
            "type": "boolean"
        },
        "only_graders_can_rate": {
            "description": "Whether or not grade permissions are required to rate entries.",
            "example": true,
            "type": "boolean"
        },
        "sort_by_rating": {
            "description": "Whether or not entries should be sorted by rating.",
            "example": true,
            "type": "boolean"
        }
    }
},
"Enrollment": {
    "id": "Enrollment",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The ID of the enrollment.",
            "example": 1,
            "type": "integer"
        },
        "course_id": {
            "description": "The unique id of the course.",
            "example": 1,
            "type": "integer"
        },
        "sis_course_id": {
            "description": "The SIS Course ID in which the enrollment is associated. Only displayed if present. This field is only included if the user has permission to view SIS information.",
            "example": "SHEL93921",
            "type": "string"
        },
        "course_integration_id": {
            "description": "The Course Integration ID in which the enrollment is associated. This field is only included if the user has permission to view SIS information.",
            "example": "SHEL93921",
            "type": "string"
        },
        "course_section_id": {
            "description": "The unique id of the user's section.",
            "example": 1,
            "type": "integer"
        },
        "section_integration_id": {
            "description": "The Section Integration ID in which the enrollment is associated. This field is only included if the user has permission to view SIS information.",
            "example": "SHEL93921",
            "type": "string"
        },
        "sis_account_id": {
            "description": "The SIS Account ID in which the enrollment is associated. Only displayed if present. This field is only included if the user has permission to view SIS information.",
            "example": "SHEL93921",
            "type": "string"
        },
        "sis_section_id": {
            "description": "The SIS Section ID in which the enrollment is associated. Only displayed if present. This field is only included if the user has permission to view SIS information.",
            "example": "SHEL93921",
            "type": "string"
        },
        "sis_user_id": {
            "description": "The SIS User ID in which the enrollment is associated. Only displayed if present. This field is only included if the user has permission to view SIS information.",
            "example": "SHEL93921",
            "type": "string"
        },
        "enrollment_state": {
            "description": "The state of the user's enrollment in the course.",
            "example": "active",
            "type": "string"
        },
        "limit_privileges_to_course_section": {
            "description": "User can only access his or her own course section.",
            "example": true,
            "type": "boolean"
        },
        "sis_import_id": {
            "description": "The unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.",
            "example": 83,
            "type": "integer"
        },
        "root_account_id": {
            "description": "The unique id of the user's account.",
            "example": 1,
            "type": "integer"
        },
        "type": {
            "description": "The enrollment type. One of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'DesignerEnrollment', 'ObserverEnrollment'.",
            "example": "StudentEnrollment",
            "type": "string"
        },
        "user_id": {
            "description": "The unique id of the user.",
            "example": 1,
            "type": "integer"
        },
        "associated_user_id": {
            "description": "The unique id of the associated user. Will be null unless type is ObserverEnrollment.",
            "example": null,
            "type": "integer"
        },
        "role": {
            "description": "The enrollment role, for course-level permissions. This field will match `type` if the enrollment role has not been customized.",
            "example": "StudentEnrollment",
            "type": "string"
        },
        "role_id": {
            "description": "The id of the enrollment role.",
            "example": 1,
            "type": "integer"
        },
        "created_at": {
            "description": "The created time of the enrollment, in ISO8601 format.",
            "example": "2012-04-18T23:08:51Z",
            "type": "datetime"
        },
        "updated_at": {
            "description": "The updated time of the enrollment, in ISO8601 format.",
            "example": "2012-04-18T23:08:51Z",
            "type": "datetime"
        },
        "start_at": {
            "description": "The start time of the enrollment, in ISO8601 format.",
            "example": "2012-04-18T23:08:51Z",
            "type": "datetime"
        },
        "end_at": {
            "description": "The end time of the enrollment, in ISO8601 format.",
            "example": "2012-04-18T23:08:51Z",
            "type": "datetime"
        },
        "last_activity_at": {
            "description": "The last activity time of the user for the enrollment, in ISO8601 format.",
            "example": "2012-04-18T23:08:51Z",
            "type": "datetime"
        },
        "last_attended_at": {
            "description": "The last attended date of the user for the enrollment in a course, in ISO8601 format.",
            "example": "2012-04-18T23:08:51Z",
            "type": "datetime"
        },
        "total_activity_time": {
            "description": "The total activity time of the user for the enrollment, in seconds.",
            "example": 260,
            "type": "integer"
        },
        "html_url": {
            "description": "The URL to the Canvas web UI page for this course enrollment.",
            "example": "https://...",
            "type": "string"
        },
        "grades": {
            "description": "The URL to the Canvas web UI page containing the grades associated with this enrollment.",
            "example": {
                "html_url": "https://...",
                "current_score": 35,
                "current_grade": null,
                "final_score": 6.67,
                "final_grade": null
            },
            "$ref": "Grade"
        },
        "user": {
            "description": "A description of the user.",
            "example": {
                "id": 3,
                "name": "Student 1",
                "sortable_name": "1, Student",
                "short_name": "Stud 1"
            },
            "$ref": "User"
        },
        "override_grade": {
            "description": "The user's override grade for the course.",
            "example": "A",
            "type": "string"
        },
        "override_score": {
            "description": "The user's override score for the course.",
            "example": 99.99,
            "type": "number"
        },
        "unposted_current_grade": {
            "description": "The user's current grade in the class including muted/unposted assignments. Only included if user has permissions to view this grade, typically teachers, TAs, and admins.",
            "example": "",
            "type": "string"
        },
        "unposted_final_grade": {
            "description": "The user's final grade for the class including muted/unposted assignments. Only included if user has permissions to view this grade, typically teachers, TAs, and admins..",
            "example": "",
            "type": "string"
        },
        "unposted_current_score": {
            "description": "The user's current score in the class including muted/unposted assignments. Only included if user has permissions to view this score, typically teachers, TAs, and admins..",
            "example": "",
            "type": "string"
        },
        "unposted_final_score": {
            "description": "The user's final score for the class including muted/unposted assignments. Only included if user has permissions to view this score, typically teachers, TAs, and admins..",
            "example": "",
            "type": "string"
        },
        "has_grading_periods": {
            "description": "optional: Indicates whether the course the enrollment belongs to has grading periods set up. (applies only to student enrollments, and only available in course endpoints)",
            "example": true,
            "type": "boolean"
        },
        "totals_for_all_grading_periods_option": {
            "description": "optional: Indicates whether the course the enrollment belongs to has the Display Totals for 'All Grading Periods' feature enabled. (applies only to student enrollments, and only available in course endpoints)",
            "example": true,
            "type": "boolean"
        },
        "current_grading_period_title": {
            "description": "optional: The name of the currently active grading period, if one exists. If the course the enrollment belongs to does not have grading periods, or if no currently active grading period exists, the value will be null. (applies only to student enrollments, and only available in course endpoints)",
            "example": "Fall Grading Period",
            "type": "string"
        },
        "current_grading_period_id": {
            "description": "optional: The id of the currently active grading period, if one exists. If the course the enrollment belongs to does not have grading periods, or if no currently active grading period exists, the value will be null. (applies only to student enrollments, and only available in course endpoints)",
            "example": 5,
            "type": "integer"
        },
        "current_period_override_grade": {
            "description": "The user's override grade for the current grading period.",
            "example": "A",
            "type": "string"
        },
        "current_period_override_score": {
            "description": "The user's override score for the current grading period.",
            "example": 99.99,
            "type": "number"
        },
        "current_period_unposted_current_score": {
            "description": "optional: The student's score in the course for the current grading period, including muted/unposted assignments. Only included if user has permission to view this score, typically teachers, TAs, and admins. If the course the enrollment belongs to does not have grading periods, or if no currently active grading period exists, the value will be null. (applies only to student enrollments, and only available in course endpoints)",
            "example": 95.8,
            "type": "number"
        },
        "current_period_unposted_final_score": {
            "description": "optional: The student's score in the course for the current grading period, including muted/unposted assignments and including ungraded assignments with a score of 0. Only included if user has permission to view this score, typically teachers, TAs, and admins. If the course the enrollment belongs to does not have grading periods, or if no currently active grading period exists, the value will be null. (applies only to student enrollments, and only available in course endpoints)",
            "example": 85.25,
            "type": "number"
        },
        "current_period_unposted_current_grade": {
            "description": "optional: The letter grade equivalent of current_period_unposted_current_score, if available. Only included if user has permission to view this grade, typically teachers, TAs, and admins. If the course the enrollment belongs to does not have grading periods, or if no currently active grading period exists, the value will be null. (applies only to student enrollments, and only available in course endpoints)",
            "example": "A",
            "type": "string"
        },
        "current_period_unposted_final_grade": {
            "description": "optional: The letter grade equivalent of current_period_unposted_final_score, if available. Only included if user has permission to view this grade, typically teachers, TAs, and admins. If the course the enrollment belongs to does not have grading periods, or if no currently active grading period exists, the value will be null. (applies only to student enrollments, and only available in course endpoints)",
            "example": "B",
            "type": "string"
        }
    }
},
"EnrollmentTerm": {
    "id": "EnrollmentTerm",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The unique identifier for the enrollment term.",
            "example": "1",
            "type": "integer"
        },
        "sis_term_id": {
            "description": "The SIS id of the term. Only included if the user has permission to view SIS information.",
            "example": "Sp2014",
            "type": "string"
        },
        "sis_import_id": {
            "description": "the unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.",
            "example": 34,
            "type": "integer"
        },
        "name": {
            "description": "The name of the term.",
            "example": "Spring 2014",
            "type": "string"
        },
        "start_at": {
            "description": "The datetime of the start of the term.",
            "example": "2014-01-06T08:00:00-05:00",
            "type": "datetime"
        },
        "end_at": {
            "description": "The datetime of the end of the term.",
            "example": "2014-05-16T05:00:00-04:00",
            "type": "datetime"
        },
        "workflow_state": {
            "description": "The state of the term. Can be 'active' or 'deleted'.",
            "example": "active",
            "type": "string"
        },
        "overrides": {
            "description": "Term date overrides for specific enrollment types",
            "example": {
                "StudentEnrollment": {
                    "start_at": "2014-01-07T08:00:00-05:00",
                    "end_at": "2014-05-14T05:00:00-04:0"
                }
            },
            "type": "object"
        },
        "course_count": {
            "description": "The number of courses in the term (available via include)",
            "example": "80",
            "type": "integer"
        }
    }
},
"EnrollmentTermsList": {
    "id": "EnrollmentTermsList",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "enrollment_terms": {
            "description": "a paginated list of all terms in the account",
            "type": "array",
            "example": [],
            "items": {
                "$ref": "EnrollmentTerm"
            }
        }
    }
},
"ePortfolio": {
    "id": "ePortfolio",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The database ID of the ePortfolio",
            "example": 1,
            "type": "integer"
        },
        "user_id": {
            "description": "The user ID to which the ePortfolio belongs",
            "example": 1,
            "type": "integer"
        },
        "name": {
            "description": "The name of the ePortfolio",
            "example": "My Academic Journey",
            "type": "string"
        },
        "public": {
            "description": "Whether or not the ePortfolio is visible without authentication",
            "example": true,
            "type": "boolean"
        },
        "created_at": {
            "description": "The creation timestamp for the ePortfolio",
            "example": "2021-09-20T18:59:37Z",
            "type": "datetime"
        },
        "updated_at": {
            "description": "The timestamp of the last time any of the ePortfolio attributes changed",
            "example": "2021-09-20T18:59:37Z",
            "type": "datetime"
        },
        "workflow_state": {
            "description": "The state of the ePortfolio. Either 'active' or 'deleted'",
            "example": "active",
            "type": "string"
        },
        "deleted_at": {
            "description": "The timestamp when the ePortfolio was deleted, or else null",
            "example": "2021-09-20T18:59:37Z",
            "type": "datetime"
        },
        "spam_status": {
            "description": "A flag indicating whether the ePortfolio has been\n      flagged or moderated as spam. One of 'flagged_as_possible_spam',\n      'marked_as_safe', 'marked_as_spam', or null",
            "example": null,
            "type": "string"
        }
    }
},
"ePortfolioPage": {
    "id": "ePortfolioPage",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The database ID of the ePortfolio",
            "example": 1,
            "type": "integer"
        },
        "eportfolio_id": {
            "description": "The ePortfolio ID to which the entry belongs",
            "example": 1,
            "type": "integer"
        },
        "position": {
            "description": "The positional order of the entry in the list",
            "example": 1,
            "type": "integer"
        },
        "name": {
            "description": "The name of the ePortfolio",
            "example": "My Academic Journey",
            "type": "string"
        },
        "content": {
            "description": "The user entered content of the entry",
            "example": "A long time ago...",
            "type": "string"
        },
        "created_at": {
            "description": "The creation timestamp for the ePortfolio",
            "example": "2021-09-20T18:59:37Z",
            "type": "datetime"
        },
        "updated_at": {
            "description": "The timestamp of the last time any of the ePortfolio attributes changed",
            "example": "2021-09-20T18:59:37Z",
            "type": "datetime"
        }
    }
},
"EpubExport": {
    "id": "EpubExport",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the unique identifier for the export",
            "example": 101,
            "type": "integer"
        },
        "created_at": {
            "description": "the date and time this export was requested",
            "example": "2014-01-01T00:00:00Z",
            "type": "datetime"
        },
        "attachment": {
            "description": "attachment api object for the export ePub (not present until the export completes)",
            "example": {
                "url": "https://example.com/api/v1/attachments/789?download_frd=1&verifier=bG9sY2F0cyEh"
            },
            "$ref": "File"
        },
        "progress_url": {
            "description": "The api endpoint for polling the current progress",
            "example": "https://example.com/api/v1/progress/4",
            "type": "string"
        },
        "user_id": {
            "description": "The ID of the user who started the export",
            "example": 4,
            "type": "integer"
        },
        "workflow_state": {
            "description": "Current state of the ePub export: created exporting exported generating generated failed",
            "example": "exported",
            "type": "string",
            "allowableValues": {
                "values": [
                    "created",
                    "exporting",
                    "exported",
                    "generating",
                    "generated",
                    "failed"
                ]
            }
        }
    }
},
"ErrorReport": {
    "id": "ErrorReport",
    "description": "A collection of information around a specific notification of a problem",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "subject": {
            "description": "The users problem summary, like an email subject line",
            "type": "string",
            "example": "File upload breaking"
        },
        "comments": {
            "description": "long form documentation of what was witnessed",
            "type": "string",
            "example": "When I went to upload a .mov file to my files page, I got an error.  Retrying didn't help, other file types seem ok"
        },
        "user_perceived_severity": {
            "description": "categorization of how bad the user thinks the problem is.  Should be one of [just_a_comment, not_urgent, workaround_possible, blocks_what_i_need_to_do, extreme_critical_emergency].",
            "type": "string",
            "example": "just_a_comment"
        },
        "email": {
            "description": "the email address of the reporting user",
            "type": "string",
            "example": "name@example.com"
        },
        "url": {
            "description": "URL of the page on which the error was reported",
            "type": "string",
            "example": "https://canvas.instructure.com/courses/1"
        },
        "context_asset_string": {
            "description": "string describing the asset being interacted with at the time of error.  Formatted '[type]_[id]'",
            "type": "string",
            "example": "user_1"
        },
        "user_roles": {
            "description": "comma seperated list of roles the reporting user holds.  Can be one [student], or many [teacher,admin]",
            "type": "string",
            "example": "user,teacher,admin"
        }
    }
},
"Favorite": {
    "id": "Favorite",
    "description": "",
    "required": [
        ""
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "context_id": {
            "description": "The ID of the object the Favorite refers to",
            "example": 1170,
            "type": "integer"
        },
        "context_type": {
            "description": "The type of the object the Favorite refers to (currently, only 'Course' is supported)",
            "example": "Course",
            "type": "string",
            "allowableValues": {
                "values": [
                    "Course"
                ]
            }
        }
    }
},
"Feature": {
    "id": "Feature",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "feature": {
            "description": "The symbolic name of the feature, used in FeatureFlags",
            "example": "fancy_wickets",
            "type": "string"
        },
        "display_name": {
            "description": "The user-visible name of the feature",
            "example": "Fancy Wickets",
            "type": "string"
        },
        "applies_to": {
            "description": "The type of object the feature applies to (RootAccount, Account, Course, or User):\n * RootAccount features may only be controlled by flags on root accounts.\n * Account features may be controlled by flags on accounts and their parent accounts.\n * Course features may be controlled by flags on courses and their parent accounts.\n * User features may be controlled by flags on users and site admin only.",
            "example": "Course",
            "type": "string",
            "allowableValues": {
                "values": [
                    "Course",
                    "RootAccount",
                    "Account",
                    "User"
                ]
            }
        },
        "feature_flag": {
            "description": "The FeatureFlag that applies to the caller",
            "example": {
                "feature": "fancy_wickets",
                "state": "allowed"
            },
            "$ref": "FeatureFlag"
        },
        "root_opt_in": {
            "description": "If true, a feature that is 'allowed' globally will be 'off' by default in root accounts. Otherwise, root accounts inherit the global 'allowed' setting, which allows sub-accounts and courses to turn features on with no root account action.",
            "example": true,
            "type": "boolean"
        },
        "beta": {
            "description": "Whether the feature is a feature preview. If true, opting in includes ongoing updates outside the regular release schedule.",
            "example": true,
            "type": "boolean"
        },
        "autoexpand": {
            "description": "Whether the details of the feature are autoexpanded on page load vs. the user clicking to expand.",
            "example": true,
            "type": "boolean"
        },
        "release_notes_url": {
            "description": "A URL to the release notes describing the feature",
            "example": "http://canvas.example.com/release_notes#fancy_wickets",
            "type": "string"
        }
    }
},
"FeatureFlag": {
    "id": "FeatureFlag",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "context_type": {
            "description": "The type of object to which this flag applies (Account, Course, or User). (This field is not present if this FeatureFlag represents the global Canvas default)",
            "example": "Account",
            "type": "string",
            "allowableValues": {
                "values": [
                    "Course",
                    "Account",
                    "User"
                ]
            }
        },
        "context_id": {
            "description": "The id of the object to which this flag applies (This field is not present if this FeatureFlag represents the global Canvas default)",
            "example": 1038,
            "type": "integer"
        },
        "feature": {
            "description": "The feature this flag controls",
            "example": "fancy_wickets",
            "type": "string"
        },
        "state": {
            "description": "The policy for the feature at this context.  can be 'off', 'allowed', 'allowed_on', or 'on'.",
            "example": "allowed",
            "type": "string",
            "allowableValues": {
                "values": [
                    "off",
                    "allowed",
                    "allowed_on",
                    "on"
                ]
            }
        },
        "locked": {
            "description": "If set, this feature flag cannot be changed in the caller's context because the flag is set 'off' or 'on' in a higher context",
            "type": "boolean",
            "example": false
        }
    }
},
"File": {
    "id": "File",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "example": 569,
            "type": "integer"
        },
        "uuid": {
            "example": "SUj23659sdfASF35h265kf352YTdnC4",
            "type": "string"
        },
        "folder_id": {
            "example": 4207,
            "type": "integer"
        },
        "display_name": {
            "example": "file.txt",
            "type": "string"
        },
        "filename": {
            "example": "file.txt",
            "type": "string"
        },
        "content-type": {
            "example": "text/plain",
            "type": "string"
        },
        "url": {
            "example": "http://www.example.com/files/569/download?download_frd=1&verifier=c6HdZmxOZa0Fiin2cbvZeI8I5ry7yqD7RChQzb6P",
            "type": "string"
        },
        "size": {
            "example": 43451,
            "type": "integer",
            "description": "file size in bytes"
        },
        "created_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        },
        "updated_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        },
        "unlock_at": {
            "example": "2012-07-07T14:58:50Z",
            "type": "datetime"
        },
        "locked": {
            "example": false,
            "type": "boolean"
        },
        "hidden": {
            "example": false,
            "type": "boolean"
        },
        "lock_at": {
            "example": "2012-07-20T14:58:50Z",
            "type": "datetime"
        },
        "hidden_for_user": {
            "example": false,
            "type": "boolean"
        },
        "thumbnail_url": {
            "type": "string"
        },
        "modified_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        },
        "mime_class": {
            "type": "string",
            "example": "html",
            "description": "simplified content-type mapping"
        },
        "media_entry_id": {
            "type": "string",
            "example": "m-3z31gfpPf129dD3sSDF85SwSDFnwe",
            "description": "identifier for file in third-party transcoding service"
        },
        "locked_for_user": {
            "example": false,
            "type": "boolean"
        },
        "lock_info": {
            "$ref": "LockInfo"
        },
        "lock_explanation": {
            "example": "This assignment is locked until September 1 at 12:00am",
            "type": "string"
        },
        "preview_url": {
            "type": "string",
            "description": "optional: url to the document preview. This url is specific to the user making the api call. Only included in submission endpoints."
        }
    }
},
"File": {
    "id": "File",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "size": {
            "example": 4,
            "type": "integer"
        },
        "content-type": {
            "example": "text/plain",
            "type": "string"
        },
        "url": {
            "example": "http://www.example.com/files/569/download?download_frd=1&verifier=c6HdZmxOZa0Fiin2cbvZeI8I5ry7yqD7RChQzb6P",
            "type": "string"
        },
        "id": {
            "example": 569,
            "type": "integer"
        },
        "display_name": {
            "example": "file.txt",
            "type": "string"
        },
        "created_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        },
        "updated_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        }
    }
},
"FileAttachment": {
    "id": "FileAttachment",
    "description": "A file attachment",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "content-type": {
            "example": "unknown/unknown",
            "type": "string"
        },
        "url": {
            "example": "http://www.example.com/courses/1/files/1/download",
            "type": "string"
        },
        "filename": {
            "example": "content.txt",
            "type": "string"
        },
        "display_name": {
            "example": "content.txt",
            "type": "string"
        }
    }
},
"Folder": {
    "id": "Folder",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "context_type": {
            "example": "Course",
            "type": "string"
        },
        "context_id": {
            "example": 1401,
            "type": "integer"
        },
        "files_count": {
            "example": 0,
            "type": "integer"
        },
        "position": {
            "example": 3,
            "type": "integer"
        },
        "updated_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        },
        "folders_url": {
            "example": "https://www.example.com/api/v1/folders/2937/folders",
            "type": "string"
        },
        "files_url": {
            "example": "https://www.example.com/api/v1/folders/2937/files",
            "type": "string"
        },
        "full_name": {
            "example": "course files/11folder",
            "type": "string"
        },
        "lock_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        },
        "id": {
            "example": 2937,
            "type": "integer"
        },
        "folders_count": {
            "example": 0,
            "type": "integer"
        },
        "name": {
            "example": "11folder",
            "type": "string"
        },
        "parent_folder_id": {
            "example": 2934,
            "type": "integer"
        },
        "created_at": {
            "example": "2012-07-06T14:58:50Z",
            "type": "datetime"
        },
        "unlock_at": {
            "type": "datetime"
        },
        "hidden": {
            "example": false,
            "type": "boolean"
        },
        "hidden_for_user": {
            "example": false,
            "type": "boolean"
        },
        "locked": {
            "example": true,
            "type": "boolean"
        },
        "locked_for_user": {
            "example": false,
            "type": "boolean"
        },
        "for_submissions": {
            "example": false,
            "type": "boolean",
            "description": "If true, indicates this is a read-only folder containing files submitted to assignments"
        }
    }
},
"Grade": {
    "id": "Grade",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "html_url": {
            "description": "The URL to the Canvas web UI page for the user's grades, if this is a student enrollment.",
            "example": "",
            "type": "string"
        },
        "current_grade": {
            "description": "The user's current grade in the class. Only included if user has permissions to view this grade.",
            "example": "",
            "type": "string"
        },
        "final_grade": {
            "description": "The user's final grade for the class. Only included if user has permissions to view this grade.",
            "example": "",
            "type": "string"
        },
        "current_score": {
            "description": "The user's current score in the class. Only included if user has permissions to view this score.",
            "example": "",
            "type": "string"
        },
        "final_score": {
            "description": "The user's final score for the class. Only included if user has permissions to view this score.",
            "example": "",
            "type": "string"
        },
        "current_points": {
            "description": "The total points the user has earned in the class. Only included if user has permissions to view this score and 'current_points' is passed in the request's 'include' parameter.",
            "example": 150,
            "type": "integer"
        },
        "unposted_current_grade": {
            "description": "The user's current grade in the class including muted/unposted assignments. Only included if user has permissions to view this grade, typically teachers, TAs, and admins.",
            "example": "",
            "type": "string"
        },
        "unposted_final_grade": {
            "description": "The user's final grade for the class including muted/unposted assignments. Only included if user has permissions to view this grade, typically teachers, TAs, and admins..",
            "example": "",
            "type": "string"
        },
        "unposted_current_score": {
            "description": "The user's current score in the class including muted/unposted assignments. Only included if user has permissions to view this score, typically teachers, TAs, and admins..",
            "example": "",
            "type": "string"
        },
        "unposted_final_score": {
            "description": "The user's final score for the class including muted/unposted assignments. Only included if user has permissions to view this score, typically teachers, TAs, and admins..",
            "example": "",
            "type": "string"
        },
        "unposted_current_points": {
            "description": "The total points the user has earned in the class, including muted/unposted assignments. Only included if user has permissions to view this score (typically teachers, TAs, and admins) and 'current_points' is passed in the request's 'include' parameter.",
            "example": 150,
            "type": "integer"
        }
    }
},
"GradeChangeEvent": {
    "id": "GradeChangeEvent",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "ID of the event.",
            "example": "e2b76430-27a5-0131-3ca1-48e0eb13f29b",
            "type": "string"
        },
        "created_at": {
            "description": "timestamp of the event",
            "example": "2012-07-19T15:00:00-06:00",
            "type": "datetime"
        },
        "event_type": {
            "description": "GradeChange event type",
            "example": "grade_change",
            "type": "string"
        },
        "excused_after": {
            "description": "Boolean indicating whether the submission was excused after the change.",
            "example": true,
            "type": "boolean"
        },
        "excused_before": {
            "description": "Boolean indicating whether the submission was excused before the change.",
            "example": false,
            "type": "boolean"
        },
        "grade_after": {
            "description": "The grade after the change.",
            "example": "8",
            "type": "string"
        },
        "grade_before": {
            "description": "The grade before the change.",
            "example": "8",
            "type": "string"
        },
        "graded_anonymously": {
            "description": "Boolean indicating whether the student name was visible when the grade was given. Could be null if the grade change record was created before this feature existed.",
            "example": true,
            "type": "boolean"
        },
        "version_number": {
            "description": "Version Number of the grade change submission.",
            "example": "1",
            "type": "string"
        },
        "request_id": {
            "description": "The unique request id of the request during the grade change.",
            "example": "e2b76430-27a5-0131-3ca1-48e0eb13f29b",
            "type": "string"
        },
        "links": {
            "$ref": "GradeChangeEventLinks"
        }
    }
},
"GradeChangeEventLinks": {
    "id": "GradeChangeEventLinks",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "assignment": {
            "description": "ID of the assignment associated with the event",
            "example": 2319,
            "type": "integer"
        },
        "course": {
            "description": "ID of the course associated with the event. will match the context_id in the associated assignment if the context type for the assignment is a course",
            "example": 2319,
            "type": "integer"
        },
        "student": {
            "description": "ID of the student associated with the event. will match the user_id in the associated submission.",
            "example": 2319,
            "type": "integer"
        },
        "grader": {
            "description": "ID of the grader associated with the event. will match the grader_id in the associated submission.",
            "example": 2319,
            "type": "integer"
        },
        "page_view": {
            "description": "ID of the page view during the event if it exists.",
            "example": "e2b76430-27a5-0131-3ca1-48e0eb13f29b",
            "type": "string"
        }
    }
},
"Grader": {
    "id": "Grader",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the user_id of the user who graded the contained submissions",
            "example": 27,
            "type": "integer"
        },
        "name": {
            "description": "the name of the user who graded the contained submissions",
            "example": "Some User",
            "type": "string"
        },
        "assignments": {
            "description": "the assignment groups for all submissions in this response that were graded by this user.  The details are not nested inside here, but the fact that an assignment is present here means that the grader did grade submissions for this assignment on the contextual date. You can use the id of a grader and of an assignment to make another API call to find all submissions for a grader/assignment combination on a given date.",
            "example": [
                1,
                2,
                3
            ],
            "type": "array",
            "items": {
                "type": "integer"
            }
        }
    }
},
"GradingPeriod": {
    "id": "GradingPeriod",
    "description": "",
    "required": [
        "id",
        "start_date",
        "end_date"
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The unique identifier for the grading period.",
            "example": 1023,
            "type": "integer"
        },
        "title": {
            "description": "The title for the grading period.",
            "example": "First Block",
            "type": "string"
        },
        "start_date": {
            "description": "The start date of the grading period.",
            "example": "2014-01-07T15:04:00Z",
            "type": "string",
            "format": "date-time"
        },
        "end_date": {
            "description": "The end date of the grading period.",
            "example": "2014-05-07T17:07:00Z",
            "type": "string",
            "format": "date-time"
        },
        "close_date": {
            "description": "Grades can only be changed before the close date of the grading period.",
            "example": "2014-06-07T17:07:00Z",
            "type": "string",
            "format": "date-time"
        },
        "weight": {
            "description": "A weight value that contributes to the overall weight of a grading period set which is used to calculate how much assignments in this period contribute to the total grade",
            "type": "integer",
            "example": "33.33"
        },
        "is_closed": {
            "description": "If true, the grading period's close_date has passed.",
            "example": true,
            "type": "boolean"
        }
    }
},
"GradingPeriodSets": {
    "id": "GradingPeriodSets",
    "description": "",
    "required": [
        "title"
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "title": {
            "description": "The title of the grading period set.",
            "example": "Hello World",
            "type": "string"
        },
        "weighted": {
            "description": "If true, the grading periods in the set are weighted.",
            "example": true,
            "type": "boolean"
        },
        "display_totals_for_all_grading_periods": {
            "description": "If true, the totals for all grading periods in the set are displayed.",
            "example": true,
            "type": "boolean"
        }
    }
},
"GradingSchemeEntry": {
    "id": "GradingSchemeEntry",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "name": {
            "description": "The name for an entry value within a GradingStandard that describes the range of the value",
            "example": "A",
            "type": "string"
        },
        "value": {
            "description": "The value for the name of the entry within a GradingStandard.  The entry represents the lower bound of the range for the entry. This range includes the value up to the next entry in the GradingStandard, or 100 if there is no upper bound. The lowest value will have a lower bound range of 0.",
            "example": 0.9,
            "type": "integer"
        }
    }
},
"GradingStandard": {
    "id": "GradingStandard",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "title": {
            "description": "the title of the grading standard",
            "example": "Account Standard",
            "type": "string"
        },
        "id": {
            "description": "the id of the grading standard",
            "example": 1,
            "type": "integer"
        },
        "context_type": {
            "description": "the context this standard is associated with, either 'Account' or 'Course'",
            "example": "Account",
            "type": "string"
        },
        "context_id": {
            "description": "the id for the context either the Account or Course id",
            "example": 1,
            "type": "integer"
        },
        "grading_scheme": {
            "description": "A list of GradingSchemeEntry that make up the Grading Standard as an array of values with the scheme name and value",
            "example": [
                {
                    "name": "A",
                    "value": 0.9
                },
                {
                    "name": "B",
                    "value": 0.8
                },
                {
                    "name": "C",
                    "value": 0.7
                },
                {
                    "name": "D",
                    "value": 0.6
                }
            ],
            "type": "array",
            "items": {
                "$ref": "GradingSchemeEntry"
            }
        }
    }
},
"GroupCategory": {
    "id": "GroupCategory",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The ID of the group category.",
            "example": 17,
            "type": "integer"
        },
        "name": {
            "description": "The display name of the group category.",
            "example": "Math Groups",
            "type": "string"
        },
        "role": {
            "description": "Certain types of group categories have special role designations. Currently, these include: 'communities', 'student_organized', and 'imported'. Regular course/account group categories have a role of null.",
            "example": "communities",
            "type": "string"
        },
        "self_signup": {
            "description": "If the group category allows users to join a group themselves, thought they may only be a member of one group per group category at a time. Values include 'restricted', 'enabled', and null 'enabled' allows students to assign themselves to a group 'restricted' restricts them to only joining a group in their section null disallows students from joining groups",
            "type": "string",
            "allowableValues": {
                "values": [
                    "restricted",
                    "enabled"
                ]
            }
        },
        "auto_leader": {
            "description": "Gives instructors the ability to automatically have group leaders assigned.  Values include 'random', 'first', and null; 'random' picks a student from the group at random as the leader, 'first' sets the first student to be assigned to the group as the leader",
            "type": "string",
            "allowableValues": {
                "values": [
                    "first",
                    "random"
                ]
            }
        },
        "context_type": {
            "description": "The course or account that the category group belongs to. The pattern here is that whatever the context_type is, there will be an _id field named after that type. So if instead context_type was 'Course', the course_id field would be replaced by an course_id field.",
            "example": "Account",
            "type": "string"
        },
        "account_id": {
            "example": 3,
            "type": "integer"
        },
        "group_limit": {
            "description": "If self-signup is enabled, group_limit can be set to cap the number of users in each group. If null, there is no limit.",
            "type": "integer"
        },
        "sis_group_category_id": {
            "description": "The SIS identifier for the group category. This field is only included if the user has permission to manage or view SIS information.",
            "type": "string"
        },
        "sis_import_id": {
            "description": "The unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.",
            "type": "integer"
        },
        "progress": {
            "description": "If the group category has not yet finished a randomly student assignment request, a progress object will be attached, which will contain information related to the progress of the assignment request. Refer to the Progress API for more information",
            "$ref": "Progress"
        }
    }
},
"Group": {
    "id": "Group",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The ID of the group.",
            "example": 17,
            "type": "integer"
        },
        "name": {
            "description": "The display name of the group.",
            "example": "Math Group 1",
            "type": "string"
        },
        "description": {
            "description": "A description of the group. This is plain text.",
            "type": "string"
        },
        "is_public": {
            "description": "Whether or not the group is public.  Currently only community groups can be made public.  Also, once a group has been set to public, it cannot be changed back to private.",
            "example": false,
            "type": "boolean"
        },
        "followed_by_user": {
            "description": "Whether or not the current user is following this group.",
            "example": false,
            "type": "boolean"
        },
        "join_level": {
            "description": "How people are allowed to join the group.  For all groups except for community groups, the user must share the group's parent course or account.  For student organized or community groups, where a user can be a member of as many or few as they want, the applicable levels are 'parent_context_auto_join', 'parent_context_request', and 'invitation_only'.  For class groups, where students are divided up and should only be part of one group of the category, this value will always be 'invitation_only', and is not relevant. * If 'parent_context_auto_join', anyone can join and will be automatically accepted. * If 'parent_context_request', anyone  can request to join, which must be approved by a group moderator. * If 'invitation_only', only those how have received an invitation my join the group, by accepting that invitation.",
            "example": "invitation_only",
            "type": "string",
            "allowableValues": {
                "values": [
                    "parent_context_auto_join",
                    "parent_context_request",
                    "invitation_only"
                ]
            }
        },
        "members_count": {
            "description": "The number of members currently in the group",
            "example": 0,
            "type": "integer"
        },
        "avatar_url": {
            "description": "The url of the group's avatar",
            "example": "https://<canvas>/files/avatar_image.png",
            "type": "string"
        },
        "context_type": {
            "description": "The course or account that the group belongs to. The pattern here is that whatever the context_type is, there will be an _id field named after that type. So if instead context_type was 'account', the course_id field would be replaced by an account_id field.",
            "example": "Course",
            "type": "string"
        },
        "course_id": {
            "example": 3,
            "type": "integer"
        },
        "role": {
            "description": "Certain types of groups have special role designations. Currently, these include: 'communities', 'student_organized', and 'imported'. Regular course/account groups have a role of null.",
            "type": "string",
            "allowableValues": {
                "values": [
                    "communities",
                    "student_organized",
                    "imported"
                ]
            }
        },
        "group_category_id": {
            "description": "The ID of the group's category.",
            "example": 4,
            "type": "integer"
        },
        "sis_group_id": {
            "description": "The SIS ID of the group. Only included if the user has permission to view SIS information.",
            "example": "group4a",
            "type": "string"
        },
        "sis_import_id": {
            "description": "The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.",
            "example": 14,
            "type": "integer"
        },
        "storage_quota_mb": {
            "description": "the storage quota for the group, in megabytes",
            "example": 50,
            "type": "integer"
        },
        "permissions": {
            "description": "optional: the permissions the user has for the group. returned only for a single group and include[]=permissions",
            "example": {
                "create_discussion_topic": true,
                "create_announcement": true
            },
            "type": "object",
            "key": {
                "type": "string"
            },
            "value": {
                "type": "boolean"
            }
        },
        "users": {
            "description": "optional: A list of users that are members in the group. Returned only if include[]=users. WARNING: this collection's size is capped (if there are an extremely large number of users in the group (thousands) not all of them will be returned).  If you need to capture all the users in a group with certainty consider using the paginated /api/v1/groups/<group_id>/memberships endpoint.",
            "type": "array",
            "items": {
                "$ref": "User"
            }
        }
    }
},
"GroupMembership": {
    "id": "GroupMembership",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The id of the membership object",
            "example": 92,
            "type": "integer"
        },
        "group_id": {
            "description": "The id of the group object to which the membership belongs",
            "example": 17,
            "type": "integer"
        },
        "user_id": {
            "description": "The id of the user object to which the membership belongs",
            "example": 3,
            "type": "integer"
        },
        "workflow_state": {
            "description": "The current state of the membership. Current possible values are 'accepted', 'invited', and 'requested'",
            "example": "accepted",
            "type": "string",
            "allowableValues": {
                "values": [
                    "accepted",
                    "invited",
                    "requested"
                ]
            }
        },
        "moderator": {
            "description": "Whether or not the user is a moderator of the group (the must also be an active member of the group to moderate)",
            "example": true,
            "type": "boolean"
        },
        "just_created": {
            "description": "optional: whether or not the record was just created on a create call (POST), i.e. was the user just added to the group, or was the user already a member",
            "example": true,
            "type": "boolean"
        },
        "sis_import_id": {
            "description": "The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.",
            "example": 4,
            "type": "integer"
        }
    }
},
"HistoryEntry": {
    "id": "HistoryEntry",
    "description": "Information about a recently visited item or page in Canvas",
    "required": [
        "asset_code",
        "asset_name",
        "visited_url",
        "visited_at"
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "asset_code": {
            "description": "The asset string for the item viewed",
            "example": "assignment_123",
            "type": "string"
        },
        "asset_name": {
            "description": "The name of the item",
            "example": "Test Assignment",
            "type": "string"
        },
        "asset_icon": {
            "description": "The icon type shown for the item. One of 'icon-announcement', 'icon-assignment', 'icon-calendar-month', 'icon-discussion', 'icon-document', 'icon-download', 'icon-gradebook', 'icon-home', 'icon-message', 'icon-module', 'icon-outcomes', 'icon-quiz', 'icon-user', 'icon-syllabus'",
            "example": "icon-assignment",
            "type": "string"
        },
        "asset_readable_category": {
            "description": "The associated category describing the asset_icon",
            "example": "Assignment",
            "type": "string"
        },
        "context_type": {
            "description": "The type of context of the item visited. One of 'Course', 'Group', 'User', or 'Account'",
            "type": "string",
            "example": "Course"
        },
        "context_id": {
            "description": "The id of the context, if applicable",
            "type": "integer",
            "format": "int64",
            "example": 123
        },
        "context_name": {
            "description": "The name of the context",
            "type": "string",
            "example": "Something 101"
        },
        "visited_url": {
            "description": "The URL of the item",
            "example": "https://canvas.example.com/courses/123/assignments/456",
            "type": "string"
        },
        "visited_at": {
            "description": "When the page was visited",
            "example": "2019-08-01T19:49:47Z",
            "type": "datetime",
            "format": "iso8601"
        },
        "interaction_seconds": {
            "description": "The estimated time spent on the page in seconds",
            "type": "integer",
            "format": "int64",
            "example": 400
        }
    }
},
"InstAccessToken": {
    "id": "InstAccessToken",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "token": {
            "description": "The InstAccess token itself -- a signed, encrypted JWT",
            "example": "eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.EstatUwzltksvZn4wbjHYiwleM986vzryrv4R9jqvYDGEY4rt6KPG4Q6lJ3oI0piYbH7h17i8vIWv35cqrgRbb7fzmGQ0Ptj74OEjx-1gGBMZCbZTE4W206XxPHRm9TS4qOAvIq0hsvJroE4xZsVWJFiUIKl_Wd2udbvqwF8bvnMKPAx_ooa-9mWaG1N9kd4EWC3Oxu9wi7j8ZG_TbkLSXAg1KxLaO2zXBcU5_HWrKFRxOjHmWpaOMKWkjUInt-DA6fLRszBZp9BFGoop8S9KDs6f1JebLgyM5gGrP-Gz7kSEAPO9eVXtjpd6N29wMClNI0X-Ppp_40Fp4Z3vocTKQ.c_tcevWI68RuZ0s04fDSEQ.wV8KIPHGfYwxm19MWt3K7VVGm4qqZJruPwAZ8rdUANTzJoqwafqOnYZLCyky8lV7J-m64SMVUmR-BOha_CmJEKVVw7T5x70MTP6-nv4RMVPpcViHsNgE2f1GE9HUauVePw7CrnV0PyVaNq2EZasDgdHdye4iG_-hXXQZRnGYzxl8UceTLBVkpEYHlXKdD7DyQ0IT2BYOcZSpXyW7kEIvAHpNaNbvTPCR2t0SeGbuNf8PpYVjohKDpXhNgQ-Pyl9pxs05TrdjTq1fIctzTLqIN58nfqzoqQld6rSkjcAZZXgr8bOsg8EDFMov5gTv2_Uf-YOm52yD1SbL0lJ-VdpKgXu7XtQ4UmEOj40W4uXF-KmLTjEwQmdbmtKrruhakIeth7EZa3w0Xg6RRyHLqKUheAdTgxAIer8MST8tamZlqW1b9wjMw371zSSjeksF_UjTS9p9i7eTtRPuAbf9geDhKb5e-y29MJaL1eKkhTMiEOPY3O4XGGuqRdRMrbjkNmla_RxiQhFJ3T8Dem-yDRan8gqaJLfRRrvGViz-lty96bQT-Z0hVer1uJhAtkM6RT_DgrnAUP_66LfaupZr6bLCKwnYocF1ICcAzkcYw7l5jHa4DTc2ZLgLi-yfbv2wGXpybAvLfZcO424TxHOuQykCSvbfPPuf06kkjPbYmMg6_GdM3JcQ_50VUXQFZkjH45BH5zX7y-2u0ReM8zxt65RpJAvlivrc8j2_E-u0LhlzCwEgsnd61lG4baaI86IVl4wNXkMDui4CgGvAUAf4AXW7Imw_cF0zI69z0SLfahjaYkdREGIYKStBtPAR04sfsR7o.LHBODYub4W4Vq-SXfdbk1Q",
            "type": "string"
        }
    }
},
"JWT": {
    "id": "JWT",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "token": {
            "description": "The signed, encrypted, base64 encoded JWT",
            "example": "ZXlKaGJHY2lPaUprYVhJaUxDSmxibU1pT2lKQk1qVTJSME5OSW4wLi5QbnAzS1QzLUJkZ3lQZHgtLm5JT0pOV01iZmdtQ0g3WWtybjhLeHlMbW13cl9yZExXTXF3Y0IwbXkzZDd3V1NDd0JYQkV0UTRtTVNJSVRrX0FJcG0zSU1DeThMcW5NdzA0ckdHVTkweDB3MmNJbjdHeWxOUXdveU5ZZ3UwOEN4TkZteUpCeW5FVktrdU05QlRyZXZ3Y1ZTN2hvaC1WZHRqM19PR3duRm5yUVgwSFhFVFc4R28tUGxoQVUtUnhKT0pNakx1OUxYd2NDUzZsaW9ZMno5NVU3T0hLSGNpaDBmSGVjN2FzekVJT3g4NExUeHlReGxYU3BtbFZ5LVNuYWdfbVJUeU5yNHNsMmlDWFcwSzZCNDhpWHJ1clJVVm1LUkVlVTl4ZVVJcTJPaWNpSHpfemJ0X3FrMjhkdzRyajZXRnBHSlZPNWcwTlUzVHlSWk5qdHg1S2NrTjVSQjZ1X2FzWTBScjhTY2VhNFk3Y2JFX01wcm54cFZTNDFIekVVSVRNdzVMTk1GLVpQZy52LVVDTkVJYk8zQ09EVEhPRnFXLUFR",
            "type": "string"
        }
    }
},
"LatePolicy": {
    "id": "LatePolicy",
    "description": "",
    "required": "course_id",
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the unique identifier for the late policy",
            "example": 123,
            "type": "integer"
        },
        "course_id": {
            "description": "the unique identifier for the course",
            "example": 123,
            "type": "integer"
        },
        "missing_submission_deduction_enabled": {
            "description": "whether to enable missing submission deductions",
            "example": true,
            "type": "boolean",
            "default": false
        },
        "missing_submission_deduction": {
            "description": "amount of percentage points to deduct",
            "example": 12.34,
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 100
        },
        "late_submission_deduction_enabled": {
            "description": "whether to enable late submission deductions",
            "example": true,
            "type": "boolean",
            "default": false
        },
        "late_submission_deduction": {
            "description": "amount of percentage points to deduct per late_submission_interval",
            "example": 12.34,
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 100
        },
        "late_submission_interval": {
            "description": "time interval for late submission deduction",
            "example": "hour",
            "type": "string",
            "default": "day",
            "enum": [
                "hour",
                "day"
            ]
        },
        "late_submission_minimum_percent_enabled": {
            "description": "whether to enable late submission minimum percent",
            "example": true,
            "type": "boolean",
            "default": false
        },
        "late_submission_minimum_percent": {
            "description": "the minimum score a submission can receive in percentage points",
            "example": 12.34,
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 100
        },
        "created_at": {
            "description": "the time at which this late policy was originally created",
            "example": "2012-07-01T23:59:00-06:00",
            "type": "datetime"
        },
        "updated_at": {
            "description": "the time at which this late policy was last modified in any way",
            "example": "2012-07-01T23:59:00-06:00",
            "type": "datetime"
        }
    }
},
"License": {
    "id": "License",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "type": "string",
            "description": "a short string identifying the license",
            "example": "cc_by_sa"
        },
        "name": {
            "type": "string",
            "description": "the name of the license",
            "example": "CC Attribution ShareAlike"
        },
        "url": {
            "type": "string",
            "description": "a link to the license text",
            "example": "http://creativecommons.org/licenses/by-sa/4.0"
        }
    }
},
"LineItem": {
    "id": "LineItem",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The fully qualified URL for showing, updating, and deleting the Line Item",
            "example": "http://institution.canvas.com/api/lti/courses/5/line_items/2",
            "type": "string"
        },
        "scoreMaximum": {
            "description": "The maximum score of the Line Item",
            "example": "50",
            "type": "number"
        },
        "label": {
            "description": "The label of the Line Item.",
            "example": "50",
            "type": "string"
        },
        "tag": {
            "description": "Tag used to qualify a line Item beyond its ids",
            "example": "50",
            "type": "string"
        },
        "resourceId": {
            "description": "A Tool Provider specified id for the Line Item. Multiple line items can share the same resourceId within a given context",
            "example": "50",
            "type": "string"
        },
        "resourceLinkId": {
            "description": "The resource link id the Line Item is attached to",
            "example": "50",
            "type": "string"
        },
        "https://canvas.instructure.com/lti/submission_type": {
            "description": "The extension that defines the submission_type of the line_item. Only returns if set through the line_item create endpoint.",
            "example": "{\n\t\"type\":\"external_tool\",\n\t\"external_tool_url\":\"https://my.launch.url\",\n}",
            "type": "string"
        },
        "https://canvas.instructure.com/lti/launch_url": {
            "description": "The launch url of the Line Item. Only returned if `include=launch_url` query parameter is passed, and only for Show and List actions.",
            "example": "https://my.tool.url/launch",
            "type": "string"
        }
    }
},
"LtiAssignment": {
    "id": "LtiAssignment",
    "description": "A Canvas assignment",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "example": 4,
            "type": "integer"
        },
        "name": {
            "example": "Midterm Review",
            "type": "string"
        },
        "description": {
            "example": "<p>Do the following:</p>...",
            "type": "string"
        },
        "points_possible": {
            "example": 10,
            "type": "integer"
        },
        "due_at": {
            "description": "The due date for the assignment. If a user id is supplied and an assignment override is in place this field will reflect the due date as it applies to the user.",
            "example": "2012-07-01T23:59:00-06:00",
            "type": "datetime"
        },
        "lti_id": {
            "example": "86157096483e6b3a50bfedc6bac902c0b20a824f",
            "type": "string"
        },
        "course_id": {
            "example": 10000000000060,
            "type": "integer"
        },
        "lti_course_id": {
            "example": "66157096483e6b3a50bfedc6bac902c0b20a8241",
            "type": "string"
        }
    }
},
"MediaObject": {
    "id": "MediaObject",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": "",
    "properties": {
        "can_add_captions": {
            "type": "boolean"
        },
        "user_entered_title": {
            "type": "string"
        },
        "title": {
            "type": "string"
        },
        "media_id": {
            "type": "string"
        },
        "media_type": {
            "type": "string"
        },
        "media_tracks": {
            "type": "string"
        },
        "media_sources": {
            "type": "string"
        }
    }
},
"MediaTrack": {
    "id": "MediaTrack",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": "",
    "properties": {
        "id": {
            "type": "integer",
            "format": "int64"
        },
        "user_id": {
            "type": "integer",
            "format": "int64"
        },
        "media_object_id": {
            "type": "integer",
            "format": "int64"
        },
        "kind": {
            "type": "string"
        },
        "locale": {
            "type": "string"
        },
        "content": {
            "type": "string"
        },
        "created_at": {
            "type": "string"
        },
        "updated_at": {
            "type": "string"
        },
        "webvtt_content": {
            "type": "string"
        }
    }
},
"Module": {
    "id": "Module",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the unique identifier for the module",
            "example": 123,
            "type": "integer"
        },
        "workflow_state": {
            "description": "the state of the module: 'active', 'deleted'",
            "example": "active",
            "type": "string",
            "allowableValues": {
                "values": [
                    "active",
                    "deleted"
                ]
            }
        },
        "position": {
            "description": "the position of this module in the course (1-based)",
            "example": 2,
            "type": "integer"
        },
        "name": {
            "description": "the name of this module",
            "example": "Imaginary Numbers and You",
            "type": "string"
        },
        "unlock_at": {
            "description": "(Optional) the date this module will unlock",
            "example": "2012-12-31T06:00:00-06:00",
            "type": "datetime"
        },
        "require_sequential_progress": {
            "description": "Whether module items must be unlocked in order",
            "example": true,
            "type": "boolean"
        },
        "prerequisite_module_ids": {
            "description": "IDs of Modules that must be completed before this one is unlocked",
            "example": [
                121,
                122
            ],
            "type": "array",
            "items": {
                "type": "integer"
            }
        },
        "items_count": {
            "description": "The number of items in the module",
            "example": 10,
            "type": "integer"
        },
        "items_url": {
            "description": "The API URL to retrive this module's items",
            "example": "https://canvas.example.com/api/v1/modules/123/items",
            "type": "string"
        },
        "items": {
            "description": "The contents of this module, as an array of Module Items. (Present only if requested via include[]=items AND the module is not deemed too large by Canvas.)",
            "type": "array",
            "items": {
                "$ref": "ModuleItem"
            }
        },
        "state": {
            "description": "The state of this Module for the calling user one of 'locked', 'unlocked', 'started', 'completed' (Optional; present only if the caller is a student or if the optional parameter 'student_id' is included)",
            "example": "started",
            "type": "string",
            "allowableValues": {
                "values": [
                    "locked",
                    "unlocked",
                    "started",
                    "completed"
                ]
            }
        },
        "completed_at": {
            "description": "the date the calling user completed the module (Optional; present only if the caller is a student or if the optional parameter 'student_id' is included)",
            "type": "datetime"
        },
        "publish_final_grade": {
            "description": "if the student's final grade for the course should be published to the SIS upon completion of this module",
            "type": "boolean"
        },
        "published": {
            "description": "(Optional) Whether this module is published. This field is present only if the caller has permission to view unpublished modules.",
            "type": "boolean",
            "example": true
        }
    }
},
"ModuleItem": {
    "id": "ModuleItem",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the unique identifier for the module item",
            "example": 768,
            "type": "integer"
        },
        "module_id": {
            "description": "the id of the Module this item appears in",
            "example": 123,
            "type": "integer"
        },
        "position": {
            "description": "the position of this item in the module (1-based)",
            "example": 1,
            "type": "integer"
        },
        "title": {
            "description": "the title of this item",
            "example": "Square Roots: Irrational numbers or boxy vegetables?",
            "type": "string"
        },
        "indent": {
            "description": "0-based indent level; module items may be indented to show a hierarchy",
            "example": 0,
            "type": "integer"
        },
        "type": {
            "description": "the type of object referred to one of 'File', 'Page', 'Discussion', 'Assignment', 'Quiz', 'SubHeader', 'ExternalUrl', 'ExternalTool'",
            "example": "Assignment",
            "type": "string",
            "allowableValues": {
                "values": [
                    "File",
                    "Page",
                    "Discussion",
                    "Assignment",
                    "Quiz",
                    "SubHeader",
                    "ExternalUrl",
                    "ExternalTool"
                ]
            }
        },
        "content_id": {
            "description": "the id of the object referred to applies to 'File', 'Discussion', 'Assignment', 'Quiz', 'ExternalTool' types",
            "example": 1337,
            "type": "integer"
        },
        "html_url": {
            "description": "link to the item in Canvas",
            "example": "https://canvas.example.edu/courses/222/modules/items/768",
            "type": "string"
        },
        "url": {
            "description": "(Optional) link to the Canvas API object, if applicable",
            "example": "https://canvas.example.edu/api/v1/courses/222/assignments/987",
            "type": "string"
        },
        "page_url": {
            "description": "(only for 'Page' type) unique locator for the linked wiki page",
            "example": "my-page-title",
            "type": "string"
        },
        "external_url": {
            "description": "(only for 'ExternalUrl' and 'ExternalTool' types) external url that the item points to",
            "example": "https://www.example.com/externalurl",
            "type": "string"
        },
        "new_tab": {
            "description": "(only for 'ExternalTool' type) whether the external tool opens in a new tab",
            "example": false,
            "type": "boolean"
        },
        "completion_requirement": {
            "description": "Completion requirement for this module item",
            "example": {
                "type": "min_score",
                "min_score": 10,
                "completed": true
            },
            "$ref": "CompletionRequirement"
        },
        "content_details": {
            "description": "(Present only if requested through include[]=content_details) If applicable, returns additional details specific to the associated object",
            "example": {
                "points_possible": 20,
                "due_at": "2012-12-31T06:00:00-06:00",
                "unlock_at": "2012-12-31T06:00:00-06:00",
                "lock_at": "2012-12-31T06:00:00-06:00"
            },
            "$ref": "ContentDetails"
        },
        "published": {
            "description": "(Optional) Whether this module item is published. This field is present only if the caller has permission to view unpublished items.",
            "type": "boolean",
            "example": true
        }
    }
},
"ModuleItemSequence": {
    "id": "ModuleItemSequence",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "items": {
            "description": "an array containing one ModuleItemSequenceNode for each appearence of the asset in the module sequence (up to 10 total)",
            "example": [
                {
                    "prev": null,
                    "current": {
                        "id": 768,
                        "module_id": 123,
                        "title": "A lonely page",
                        "type": "Page"
                    },
                    "next": {
                        "id": 769,
                        "module_id": 127,
                        "title": "Project 1",
                        "type": "Assignment"
                    },
                    "mastery_path": {
                        "locked": true,
                        "assignment_sets": [],
                        "selected_set_id": null,
                        "awaiting_choice": false,
                        "still_processing": false,
                        "modules_url": "/courses/11/modules",
                        "choose_url": "/courses/11/modules/items/9/choose",
                        "modules_tab_disabled": false
                    }
                }
            ],
            "type": "array",
            "items": {
                "$ref": "ModuleItemSequenceNode"
            }
        },
        "modules": {
            "description": "an array containing each Module referenced above",
            "type": "array",
            "items": {
                "$ref": "Module"
            },
            "example": [
                {
                    "id": 123,
                    "name": "Overview"
                },
                {
                    "id": 127,
                    "name": "Imaginary Numbers"
                }
            ]
        }
    }
},
"ModuleItemSequenceNode": {
    "id": "ModuleItemSequenceNode",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "prev": {
            "description": "The previous ModuleItem in the sequence",
            "$ref": "ModuleItem"
        },
        "current": {
            "description": "The ModuleItem being queried",
            "$ref": "ModuleItem",
            "example": {
                "id": 768,
                "module_id": 123,
                "title": "A lonely page",
                "type": "Page"
            }
        },
        "next": {
            "description": "The next ModuleItem in the sequence",
            "$ref": "ModuleItem",
            "example": {
                "id": 769,
                "module_id": 127,
                "title": "Project 1",
                "type": "Assignment"
            }
        },
        "mastery_path": {
            "type": "object",
            "description": "The conditional release rule for the module item, if applicable",
            "example": {
                "locked": true,
                "assignment_sets": [],
                "selected_set_id": null,
                "awaiting_choice": false,
                "still_processing": false,
                "modules_url": "/courses/11/modules",
                "choose_url": "/courses/11/modules/items/9/choose",
                "modules_tab_disabled": false
            }
        }
    }
},
"NamesAndRoleContext": {
    "id": "NamesAndRoleContext",
    "description": "An abbreviated representation of an LTI Context",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "LTI Context unique identifier",
            "example": "4dde05e8ca1973bcca9bffc13e1548820eee93a3",
            "type": "string"
        },
        "label": {
            "description": "LTI Context short name or code",
            "example": "CS-101",
            "type": "string"
        },
        "title": {
            "description": "LTI Context full name",
            "example": "Computer Science 101",
            "type": "string"
        }
    }
},
"NamesAndRoleMembership": {
    "id": "NamesAndRoleMembership",
    "description": "A member of a LTI Context in one or more roles",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "status": {
            "description": "Membership state",
            "enum": [
                "Active"
            ],
            "example": "Active",
            "type": "string"
        },
        "name": {
            "description": "Member's full name. Only included if tool privacy level is `public` or `name_only`.",
            "example": "Sienna Howell",
            "type": "string"
        },
        "picture": {
            "description": "URL to the member's avatar. Only included if tool privacy level is `public`.",
            "example": "https://example.instructure.com/images/messages/avatar-50.png",
            "type": "string"
        },
        "given_name": {
            "description": "Member's 'first' name. Only included if tool privacy level is `public` or `name_only`.",
            "example": "Sienna",
            "type": "string"
        },
        "family_name": {
            "description": "Member's 'last' name. Only included if tool privacy level is `public` or `name_only`.",
            "example": "Howell",
            "type": "string"
        },
        "email": {
            "description": "Member's email address. Only included if tool privacy level is `public` or `email_only`.",
            "example": "showell@school.edu",
            "type": "string"
        },
        "lis_person_sourcedid": {
            "description": "Member's primary SIS identifier. Only included if tool privacy level is `public` or `name_only`.",
            "example": "1238.8763.00",
            "type": "string"
        },
        "user_id": {
            "description": "Member's unique LTI identifier.",
            "example": "535fa085f22b4655f48cd5a36a9215f64c062838",
            "type": "string"
        },
        "roles": {
            "description": "Member's roles in the current Context, expressed as LTI/LIS URNs.",
            "items": {
                "type": "string",
                "enum": [
                    "http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistant",
                    "http://purl.imsglobal.org/vocab/lis/v2/membership#Learner",
                    "http://purl.imsglobal.org/vocab/lis/v2/membership#Instructor",
                    "http://purl.imsglobal.org/vocab/lis/v2/membership#ContentDeveloper",
                    "http://purl.imsglobal.org/vocab/lis/v2/membership#Mentor",
                    "http://purl.imsglobal.org/vocab/lis/v2/membership#Member",
                    "http://purl.imsglobal.org/vocab/lis/v2/membership#Manager"
                ]
            },
            "type": "array",
            "example": [
                "http://purl.imsglobal.org/vocab/lis/v2/membership#Instructor",
                "http://purl.imsglobal.org/vocab/lis/v2/membership#ContentDeveloper"
            ]
        },
        "message": {
            "description": "Only present when the request specifies a `rlid` query parameter. Contains additional attributes which would appear in the LTI launch message were this member to click the link referenced by the `rlid` query parameter",
            "type": "array",
            "items": {
                "$ref": "NamesAndRoleMessage"
            },
            "example": [
                {
                    "https://purl.imsglobal.org/spec/lti/claim/message_type": "LtiResourceLinkRequest",
                    "locale": "en",
                    "https://www.instructure.com/canvas_user_id": 1,
                    "https://www.instructure.com/canvas_user_login_id": "showell@school.edu",
                    "https://purl.imsglobal.org/spec/lti/claim/custom": {
                        "message_locale": "en",
                        "person_address_timezone": "America/Denver"
                    }
                }
            ]
        }
    }
},
"NamesAndRoleMemberships": {
    "id": "NamesAndRoleMemberships",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "Invocation URL",
            "example": "https://example.instructure.com/api/lti/courses/1/names_and_roles?tlid=f91ca4d8-fa84-4a9b-b08e-47d5527416b0",
            "type": "string"
        },
        "context": {
            "description": "The LTI Context containing the memberships",
            "$ref": "NamesAndRoleContext",
            "example": {
                "id": "4dde05e8ca1973bcca9bffc13e1548820eee93a3",
                "label": "CS-101",
                "title": "Computer Science 101"
            }
        },
        "members": {
            "type": "array",
            "description": "A list of NamesAndRoleMembership",
            "items": {
                "$ref": "NamesAndRoleMembership"
            },
            "example": [
                {
                    "status": "Active",
                    "name": "Sienna Howell",
                    "picture": "https://example.instructure.com/images/messages/avatar-50.png",
                    "given_name": "Sienna",
                    "family_name": "Howell",
                    "email": "showell@school.edu",
                    "lis_person_sourcedid": "1238.8763.00",
                    "user_id": "535fa085f22b4655f48cd5a36a9215f64c062838",
                    "roles": [
                        "http://purl.imsglobal.org/vocab/lis/v2/membership#Instructor",
                        "http://purl.imsglobal.org/vocab/lis/v2/membership#ContentDeveloper"
                    ],
                    "message": [
                        {
                            "https://purl.imsglobal.org/spec/lti/claim/message_type": "LtiResourceLinkRequest",
                            "locale": "en",
                            "https://www.instructure.com/canvas_user_id": 1,
                            "https://www.instructure.com/canvas_user_login_id": "showell@school.edu",
                            "https://purl.imsglobal.org/spec/lti/claim/custom": {
                                "message_locale": "en",
                                "person_address_timezone": "America/Denver"
                            }
                        }
                    ]
                },
                {
                    "status": "Active",
                    "name": "Terrence Walls",
                    "picture": "https://example.instructure.com/images/messages/avatar-51.png",
                    "given_name": "Terrence",
                    "family_name": "Walls",
                    "email": "twalls@school.edu",
                    "lis_person_sourcedid": "5790.3390.11",
                    "user_id": "86157096483e6b3a50bfedc6bac902c0b20a824f",
                    "roles": [
                        "http://purl.imsglobal.org/vocab/lis/v2/membership#Learner"
                    ],
                    "message": [
                        {
                            "https://purl.imsglobal.org/spec/lti/claim/message_type": "LtiResourceLinkRequest",
                            "locale": "de",
                            "https://www.instructure.com/canvas_user_id": 2,
                            "https://www.instructure.com/canvas_user_login_id": "twalls@school.edu",
                            "https://purl.imsglobal.org/spec/lti/claim/custom": {
                                "message_locale": "en",
                                "person_address_timezone": "Europe/Berlin"
                            }
                        }
                    ]
                }
            ]
        }
    }
},
"NamesAndRoleMessage": {
    "id": "NamesAndRoleMessage",
    "description": "Additional attributes which would appear in the LTI launch message were this member to click the specified resource link (`rlid` query parameter)",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "https://purl.imsglobal.org/spec/lti/claim/message_type": {
            "description": "The type of LTI message being described. Always set to 'LtiResourceLinkRequest'",
            "enum": [
                "LtiResourceLinkRequest"
            ],
            "type": "string",
            "example": "LtiResourceLinkRequest"
        },
        "locale": {
            "description": "The member's preferred locale",
            "type": "string",
            "example": "en"
        },
        "https://www.instructure.com/canvas_user_id": {
            "description": "The member's API ID",
            "type": "integer",
            "example": 1
        },
        "https://www.instructure.com/canvas_user_login_id": {
            "description": "The member's primary login username",
            "type": "string",
            "example": "showell@school.edu"
        },
        "https://purl.imsglobal.org/spec/lti/claim/custom": {
            "description": "Expanded LTI custom parameters that pertain to the member (as opposed to the Context)",
            "type": "object",
            "example": {
                "message_locale": "en",
                "person_address_timezone": "America/Denver"
            }
        }
    }
},
"NotificationPreference": {
    "id": "NotificationPreference",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "href": {
            "example": "https://canvas.instructure.com/users/1/communication_channels/email/student@example.edu/notification_preferences/new_announcement",
            "type": "string"
        },
        "notification": {
            "description": "The notification this preference belongs to",
            "example": "new_announcement",
            "type": "string"
        },
        "category": {
            "description": "The category of that notification",
            "example": "announcement",
            "type": "string"
        },
        "frequency": {
            "description": "How often to send notifications to this communication channel for the given notification. Possible values are 'immediately', 'daily', 'weekly', and 'never'",
            "example": "daily",
            "type": "string",
            "allowableValues": {
                "values": [
                    "immediately",
                    "daily",
                    "weekly",
                    "never"
                ]
            }
        }
    }
},
"OriginalityReport": {
    "id": "OriginalityReport",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The id of the OriginalityReport",
            "example": "4",
            "type": "integer"
        },
        "file_id": {
            "description": "The id of the file receiving the originality score",
            "example": "8",
            "type": "integer"
        },
        "originality_score": {
            "description": "A number between 0 and 100 representing the originality score",
            "example": "0.16",
            "type": "number"
        },
        "originality_report_file_id": {
            "description": "The ID of the file within Canvas containing the originality report document (if provided)",
            "example": "23",
            "type": "integer"
        },
        "originality_report_url": {
            "description": "A non-LTI launch URL where the originality score of the file may be found.",
            "example": "http://www.example.com/report",
            "type": "string"
        },
        "tool_setting": {
            "description": "A ToolSetting object containing optional 'resource_type_code' and 'resource_url'",
            "$ref": "ToolSetting"
        },
        "error_report": {
            "description": "A message describing the error. If set, the workflow_state will become 'error.'",
            "type": "string"
        },
        "submission_time": {
            "description": "The submitted_at date time of the submission.",
            "type": "datetime"
        },
        "root_account_id": {
            "description": "The id of the root Account associated with the OriginalityReport",
            "example": "1",
            "type": "integer"
        }
    }
},
"Outcome": {
    "id": "Outcome",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the ID of the outcome",
            "example": 1,
            "type": "integer"
        },
        "url": {
            "description": "the URL for fetching/updating the outcome. should be treated as opaque",
            "example": "/api/v1/outcomes/1",
            "type": "string"
        },
        "context_id": {
            "description": "the context owning the outcome. may be null for global outcomes",
            "example": 1,
            "type": "integer"
        },
        "context_type": {
            "example": "Account",
            "type": "string"
        },
        "title": {
            "description": "title of the outcome",
            "example": "Outcome title",
            "type": "string"
        },
        "display_name": {
            "description": "Optional friendly name for reporting",
            "example": "My Favorite Outcome",
            "type": "string"
        },
        "description": {
            "description": "description of the outcome. omitted in the abbreviated form.",
            "example": "Outcome description",
            "type": "string"
        },
        "vendor_guid": {
            "description": "A custom GUID for the learning standard.",
            "example": "customid9000",
            "type": "string"
        },
        "points_possible": {
            "description": "maximum points possible. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.",
            "example": 5,
            "type": "integer"
        },
        "mastery_points": {
            "description": "points necessary to demonstrate mastery outcomes. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.",
            "example": 3,
            "type": "integer"
        },
        "calculation_method": {
            "description": "the method used to calculate a students score",
            "example": "decaying_average",
            "type": "string",
            "allowableValues": {
                "values": [
                    "decaying_average",
                    "n_mastery",
                    "latest",
                    "highest",
                    "average"
                ]
            }
        },
        "calculation_int": {
            "description": "this defines the variable value used by the calculation_method. included only if calculation_method uses it",
            "example": 65,
            "type": "integer"
        },
        "ratings": {
            "description": "possible ratings for this outcome. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.",
            "type": "array",
            "items": {
                "$ref": "RubricRating"
            }
        },
        "can_edit": {
            "description": "whether the current user can update the outcome",
            "example": true,
            "type": "boolean"
        },
        "can_unlink": {
            "description": "whether the outcome can be unlinked",
            "example": true,
            "type": "boolean"
        },
        "assessed": {
            "description": "whether this outcome has been used to assess a student",
            "example": true,
            "type": "boolean"
        },
        "has_updateable_rubrics": {
            "description": "whether updates to this outcome will propagate to unassessed rubrics that have imported it",
            "example": true,
            "type": "boolean"
        }
    }
},
"OutcomeAlignment": {
    "id": "OutcomeAlignment",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the id of the aligned learning outcome.",
            "example": 1,
            "type": "integer"
        },
        "assignment_id": {
            "description": "the id of the aligned assignment (null for live assessments).",
            "example": 2,
            "type": "integer"
        },
        "assessment_id": {
            "description": "the id of the aligned live assessment (null for assignments).",
            "example": 3,
            "type": "integer"
        },
        "submission_types": {
            "description": "a string representing the different submission types of an aligned assignment.",
            "example": "online_text_entry,online_url",
            "type": "string"
        },
        "url": {
            "description": "the URL for the aligned assignment.",
            "example": "/courses/1/assignments/5",
            "type": "string"
        },
        "title": {
            "description": "the title of the aligned assignment.",
            "example": "Unit 1 test",
            "type": "string"
        }
    }
},
"OutcomeAlignmentAsset": {
    "id": "OutcomeAlignmentAsset",
    "description": "An asset aligned with this outcome",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "A unique identifier for this alignment",
            "example": "quiz_3",
            "type": "string"
        },
        "name": {
            "description": "The name of this alignment",
            "example": "Big mid-term test",
            "type": "string"
        },
        "html_url": {
            "description": "(Optional) A URL for details about this alignment",
            "type": "string"
        }
    }
},
"OutcomeGroup": {
    "id": "OutcomeGroup",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the ID of the outcome group",
            "example": 1,
            "type": "integer"
        },
        "url": {
            "description": "the URL for fetching/updating the outcome group. should be treated as opaque",
            "example": "/api/v1/accounts/1/outcome_groups/1",
            "type": "string"
        },
        "parent_outcome_group": {
            "description": "an abbreviated OutcomeGroup object representing the parent group of this outcome group, if any. omitted in the abbreviated form.",
            "$ref": "OutcomeGroup"
        },
        "context_id": {
            "description": "the context owning the outcome group. may be null for global outcome groups. omitted in the abbreviated form.",
            "example": 1,
            "type": "integer"
        },
        "context_type": {
            "example": "Account",
            "type": "string"
        },
        "title": {
            "description": "title of the outcome group",
            "example": "Outcome group title",
            "type": "string"
        },
        "description": {
            "description": "description of the outcome group. omitted in the abbreviated form.",
            "example": "Outcome group description",
            "type": "string"
        },
        "vendor_guid": {
            "description": "A custom GUID for the learning standard.",
            "example": "customid9000",
            "type": "string"
        },
        "subgroups_url": {
            "description": "the URL for listing/creating subgroups under the outcome group. should be treated as opaque",
            "example": "/api/v1/accounts/1/outcome_groups/1/subgroups",
            "type": "string"
        },
        "outcomes_url": {
            "description": "the URL for listing/creating outcome links under the outcome group. should be treated as opaque",
            "example": "/api/v1/accounts/1/outcome_groups/1/outcomes",
            "type": "string"
        },
        "import_url": {
            "description": "the URL for importing another group into this outcome group. should be treated as opaque. omitted in the abbreviated form.",
            "example": "/api/v1/accounts/1/outcome_groups/1/import",
            "type": "string"
        },
        "can_edit": {
            "description": "whether the current user can update the outcome group",
            "example": true,
            "type": "boolean"
        }
    }
},
"OutcomeImport": {
    "id": "OutcomeImport",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The unique identifier for the outcome import.",
            "example": 1,
            "type": "integer"
        },
        "learning_outcome_group_id": {
            "description": "The unique identifier for the group into which the outcomes will be imported to, or NULL.",
            "example": 1,
            "type": "integer"
        },
        "created_at": {
            "description": "The date the outcome import was created.",
            "example": "2013-12-01T23:59:00-06:00",
            "type": "datetime"
        },
        "ended_at": {
            "description": "The date the outcome import finished. Returns null if not finished.",
            "example": "2013-12-02T00:03:21-06:00",
            "type": "datetime"
        },
        "updated_at": {
            "description": "The date the outcome import was last updated.",
            "example": "2013-12-02T00:03:21-06:00",
            "type": "datetime"
        },
        "workflow_state": {
            "description": "The current state of the outcome import.\n - 'created': The outcome import has been created.\n - 'importing': The outcome import is currently processing.\n - 'succeeded': The outcome import has completed successfully.\n - 'failed': The outcome import failed.",
            "example": "imported",
            "type": "string",
            "allowableValues": {
                "values": [
                    "created",
                    "importing",
                    "succeeded",
                    "failed"
                ]
            }
        },
        "data": {
            "description": "See the OutcomeImportData specification above.",
            "$ref": "OutcomeImportData"
        },
        "progress": {
            "description": "The progress of the outcome import.",
            "example": "100",
            "type": "string"
        },
        "user": {
            "description": "The user that initiated the outcome_import. See the Users API for details.",
            "$ref": "User"
        },
        "processing_errors": {
            "description": "An array of row number / error message pairs. Returns the first 25 errors.",
            "example": [
                [
                    1,
                    "Missing required fields: title"
                ]
            ],
            "type": "array",
            "items": {
                "type": "array",
                "items": {
                    "type": "object"
                }
            }
        }
    }
},
"OutcomeImportData": {
    "id": "OutcomeImportData",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "import_type": {
            "description": "The type of outcome import",
            "example": "instructure_csv",
            "type": "string"
        }
    }
},
"OutcomeLink": {
    "id": "OutcomeLink",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "url": {
            "description": "the URL for fetching/updating the outcome link. should be treated as opaque",
            "example": "/api/v1/accounts/1/outcome_groups/1/outcomes/1",
            "type": "string"
        },
        "context_id": {
            "description": "the context owning the outcome link. will match the context owning the outcome group containing the outcome link; included for convenience. may be null for links in global outcome groups.",
            "example": 1,
            "type": "integer"
        },
        "context_type": {
            "example": "Account",
            "type": "string"
        },
        "outcome_group": {
            "description": "an abbreviated OutcomeGroup object representing the group containing the outcome link.",
            "$ref": "OutcomeGroup"
        },
        "outcome": {
            "description": "an abbreviated Outcome object representing the outcome linked into the containing outcome group.",
            "$ref": "Outcome"
        },
        "assessed": {
            "description": "whether this outcome has been used to assess a student in the context of this outcome link.  In other words, this will be set to true if the context is a course, and a student has been assessed with this outcome in that course.",
            "example": true,
            "type": "boolean"
        },
        "can_unlink": {
            "description": "whether this outcome link is manageable and is not the last link to an aligned outcome",
            "type": "boolean"
        }
    }
},
"OutcomePath": {
    "id": "OutcomePath",
    "description": "The full path to an outcome",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "example": "42",
            "type": "integer",
            "description": "A unique identifier for this outcome"
        },
        "parts": {
            "description": "an array of OutcomePathPart objects",
            "$ref": "OutcomePathPart"
        }
    }
},
"OutcomePathPart": {
    "id": "OutcomePathPart",
    "description": "An outcome or outcome group",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "name": {
            "example": "Spelling out numbers",
            "type": "string",
            "description": "The title of the outcome or outcome group"
        }
    }
},
"OutcomeResult": {
    "id": "OutcomeResult",
    "description": "A student's result for an outcome",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "example": "42",
            "type": "integer",
            "description": "A unique identifier for this result"
        },
        "score": {
            "example": 6,
            "type": "integer",
            "description": "The student's score"
        },
        "submitted_or_assessed_at": {
            "example": "2013-02-01T00:00:00-06:00",
            "type": "datetime",
            "description": "The datetime the resulting OutcomeResult was submitted at, or absent that, when it was assessed."
        },
        "links": {
            "example": {
                "user": "3",
                "learning_outcome": "97",
                "alignment": "53"
            },
            "type": "object",
            "description": "Unique identifiers of objects associated with this result"
        },
        "percent": {
            "example": "0.65",
            "type": "number",
            "description": "score's percent of maximum points possible for outcome, scaled to reflect any custom mastery levels that differ from the learning outcome"
        }
    }
},
"OutcomeRollup": {
    "id": "OutcomeRollup",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "scores": {
            "description": "an array of OutcomeRollupScore objects",
            "$ref": "OutcomeRollupScore"
        },
        "name": {
            "description": "The name of the resource for this rollup. For example, the user name.",
            "example": "John Doe",
            "type": "string"
        },
        "links": {
            "example": {
                "course": 42,
                "user": 42,
                "section": 57
            },
            "$ref": "OutcomeRollupLinks"
        }
    }
},
"OutcomeRollupLinks": {
    "id": "OutcomeRollupLinks",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "course": {
            "description": "If an aggregate result was requested, the course field will be present. Otherwise, the user and section field will be present (Optional) The id of the course that this rollup applies to",
            "example": 42,
            "type": "integer"
        },
        "user": {
            "description": "(Optional) The id of the user that this rollup applies to",
            "example": 42,
            "type": "integer"
        },
        "section": {
            "description": "(Optional) The id of the section the user is in",
            "example": 57,
            "type": "integer"
        }
    }
},
"OutcomeRollupScore": {
    "id": "OutcomeRollupScore",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "score": {
            "description": "The rollup score for the outcome, based on the student alignment scores related to the outcome. This could be null if the student has no related scores.",
            "example": 3,
            "type": "integer"
        },
        "count": {
            "example": 6,
            "type": "integer",
            "description": "The number of alignment scores included in this rollup."
        },
        "links": {
            "example": {
                "outcome": "42"
            },
            "$ref": "OutcomeRollupScoreLinks"
        }
    }
},
"OutcomeRollupScoreLinks": {
    "id": "OutcomeRollupScoreLinks",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "outcome": {
            "description": "The id of the related outcome",
            "example": 42,
            "type": "integer"
        }
    }
},
"Page": {
    "id": "Page",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "page_id": {
            "description": "the ID of the page",
            "example": 1,
            "type": "integer"
        },
        "url": {
            "description": "the unique locator for the page",
            "example": "my-page-title",
            "type": "string"
        },
        "title": {
            "description": "the title of the page",
            "example": "My Page Title",
            "type": "string"
        },
        "created_at": {
            "description": "the creation date for the page",
            "example": "2012-08-06T16:46:33-06:00",
            "type": "datetime"
        },
        "updated_at": {
            "description": "the date the page was last updated",
            "example": "2012-08-08T14:25:20-06:00",
            "type": "datetime"
        },
        "hide_from_students": {
            "description": "(DEPRECATED) whether this page is hidden from students (note: this is always reflected as the inverse of the published value)",
            "example": false,
            "type": "boolean"
        },
        "editing_roles": {
            "description": "roles allowed to edit the page; comma-separated list comprising a combination of 'teachers', 'students', 'members', and/or 'public' if not supplied, course defaults are used",
            "example": "teachers,students",
            "type": "string"
        },
        "last_edited_by": {
            "description": "the User who last edited the page (this may not be present if the page was imported from another system)",
            "$ref": "User"
        },
        "body": {
            "description": "the page content, in HTML (present when requesting a single page; omitted when listing pages)",
            "example": "<p>Page Content</p>",
            "type": "string"
        },
        "published": {
            "description": "whether the page is published (true) or draft state (false).",
            "example": true,
            "type": "boolean"
        },
        "publish_at": {
            "description": "scheduled publication date for this page",
            "example": "2022-09-01T00:00:00",
            "type": "datetime"
        },
        "front_page": {
            "description": "whether this page is the front page for the wiki",
            "example": false,
            "type": "boolean"
        },
        "locked_for_user": {
            "description": "Whether or not this is locked for the user.",
            "example": false,
            "type": "boolean"
        },
        "lock_info": {
            "description": "(Optional) Information for the user about the lock. Present when locked_for_user is true.",
            "$ref": "LockInfo"
        },
        "lock_explanation": {
            "description": "(Optional) An explanation of why this is locked for the user. Present when locked_for_user is true.",
            "example": "This page is locked until September 1 at 12:00am",
            "type": "string"
        }
    }
},
"PageRevision": {
    "id": "PageRevision",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "revision_id": {
            "description": "an identifier for this revision of the page",
            "example": 7,
            "type": "integer"
        },
        "updated_at": {
            "description": "the time when this revision was saved",
            "example": "2012-08-07T11:23:58-06:00",
            "type": "datetime"
        },
        "latest": {
            "description": "whether this is the latest revision or not",
            "example": true,
            "type": "boolean"
        },
        "edited_by": {
            "description": "the User who saved this revision, if applicable (this may not be present if the page was imported from another system)",
            "$ref": "User"
        },
        "url": {
            "description": "the following fields are not included in the index action and may be omitted from the show action via summary=1 the historic url of the page",
            "example": "old-page-title",
            "type": "string"
        },
        "title": {
            "description": "the historic page title",
            "example": "Old Page Title",
            "type": "string"
        },
        "body": {
            "description": "the historic page contents",
            "example": "<p>Old Page Content</p>",
            "type": "string"
        }
    }
},
"PeerReview": {
    "id": "PeerReview",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "assessor_id": {
            "description": "The assessors user id",
            "example": 23,
            "type": "integer"
        },
        "asset_id": {
            "description": "The id for the asset associated with this Peer Review",
            "example": 13,
            "type": "integer"
        },
        "asset_type": {
            "description": "The type of the asset",
            "example": "Submission",
            "type": "string"
        },
        "id": {
            "description": "The id of the Peer Review",
            "example": 1,
            "type": "integer"
        },
        "user_id": {
            "description": "The user id for the owner of the asset",
            "example": 7,
            "type": "integer"
        },
        "workflow_state": {
            "description": "The state of the Peer Review, either 'assigned' or 'completed'",
            "example": "assigned",
            "type": "string"
        },
        "user": {
            "description": "the User object for the owner of the asset if the user include parameter is provided (see user API) (optional)",
            "example": "User",
            "type": "string"
        },
        "assessor": {
            "description": "The User object for the assessor if the user include parameter is provided (see user API) (optional)",
            "example": "User",
            "type": "string"
        },
        "submission_comments": {
            "description": "The submission comments associated with this Peer Review if the submission_comment include parameter is provided (see submissions API) (optional)",
            "example": "SubmissionComment",
            "type": "string"
        }
    }
},
"PlannerNote": {
    "id": "PlannerNote",
    "description": "A planner note",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The ID of the planner note",
            "example": 234,
            "type": "integer"
        },
        "title": {
            "description": "The title for a planner note",
            "example": "Bring books tomorrow",
            "type": "string"
        },
        "description": {
            "description": "The description of the planner note",
            "example": "I need to bring books tomorrow for my course on biology",
            "type": "string"
        },
        "user_id": {
            "description": "The id of the associated user creating the planner note",
            "example": 1578941,
            "type": "integer"
        },
        "workflow_state": {
            "description": "The current published state of the planner note",
            "example": "active",
            "type": "string"
        },
        "course_id": {
            "description": "The course that the note is in relation too, if applicable",
            "example": 1578941,
            "type": "integer"
        },
        "todo_date": {
            "description": "The datetime of when the planner note should show up on their planner",
            "example": "2017-05-09T10:12:00Z",
            "type": "datetime"
        },
        "linked_object_type": {
            "description": "the type of the linked learning object",
            "example": "assignment",
            "type": "string"
        },
        "linked_object_id": {
            "description": "the id of the linked learning object",
            "example": 131072,
            "type": "integer"
        },
        "linked_object_html_url": {
            "description": "the Canvas web URL of the linked learning object",
            "example": "https://canvas.example.com/courses/1578941/assignments/131072",
            "type": "string"
        },
        "linked_object_url": {
            "description": "the API URL of the linked learning object",
            "example": "https://canvas.example.com/api/v1/courses/1578941/assignments/131072",
            "type": "string"
        }
    }
},
"PlannerOverride": {
    "id": "PlannerOverride",
    "description": "User-controlled setting for whether an item should be displayed on the planner or not",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The ID of the planner override",
            "example": 234,
            "type": "integer"
        },
        "plannable_type": {
            "description": "The type of the associated object for the planner override",
            "example": "Assignment",
            "type": "string"
        },
        "plannable_id": {
            "description": "The id of the associated object for the planner override",
            "example": 1578941,
            "type": "integer"
        },
        "user_id": {
            "description": "The id of the associated user for the planner override",
            "example": 1578941,
            "type": "integer"
        },
        "assignment_id": {
            "description": "The id of the plannable's associated assignment, if it has one",
            "example": 1578941,
            "type": "integer"
        },
        "workflow_state": {
            "description": "The current published state of the item, synced with the associated object",
            "example": "published",
            "type": "string"
        },
        "marked_complete": {
            "description": "Controls whether or not the associated plannable item is marked complete on the planner",
            "example": false,
            "type": "boolean"
        },
        "dismissed": {
            "description": "Controls whether or not the associated plannable item shows up in the opportunities list",
            "example": false,
            "type": "boolean"
        },
        "created_at": {
            "description": "The datetime of when the planner override was created",
            "example": "2017-05-09T10:12:00Z",
            "type": "datetime"
        },
        "updated_at": {
            "description": "The datetime of when the planner override was updated",
            "example": "2017-05-09T10:12:00Z",
            "type": "datetime"
        },
        "deleted_at": {
            "description": "The datetime of when the planner override was deleted, if applicable",
            "example": "2017-05-15T12:12:00Z",
            "type": "datetime"
        }
    }
},
"Poll": {
    "id": "Poll",
    "description": "",
    "required": [
        "id",
        "question"
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The unique identifier for the poll.",
            "example": 1023,
            "type": "integer"
        },
        "question": {
            "description": "The question/title of the poll.",
            "type": "string",
            "example": "What do you consider most important to your learning in this course?"
        },
        "description": {
            "description": "A short description of the poll.",
            "type": "string",
            "example": "This poll is to determine what priorities the students in the course have."
        },
        "created_at": {
            "description": "The time at which the poll was created.",
            "example": "2014-01-07T15:16:18Z",
            "type": "string",
            "format": "date-time"
        },
        "user_id": {
            "description": "The unique identifier for the user that created the poll.",
            "example": 105,
            "type": "integer"
        },
        "total_results": {
            "description": "An aggregate of the results of all associated poll sessions, with the poll choice id as the key, and the aggregated submission count as the value.",
            "example": {
                "543": 20,
                "544": 5,
                "545": 17
            },
            "type": "object"
        }
    }
},
"PollChoice": {
    "id": "PollChoice",
    "description": "",
    "required": [
        "id",
        "poll_id",
        "text"
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The unique identifier for the poll choice.",
            "example": 1023,
            "type": "integer"
        },
        "poll_id": {
            "description": "The id of the poll this poll choice belongs to.",
            "example": 1779,
            "type": "integer"
        },
        "is_correct": {
            "description": "Specifies whether or not this poll choice is a 'correct' choice.",
            "example": "true",
            "type": "boolean"
        },
        "text": {
            "description": "The text of the poll choice.",
            "type": "string",
            "example": "Choice A"
        },
        "position": {
            "description": "The order of the poll choice in relation to it's sibling poll choices.",
            "type": "integer",
            "example": 1
        }
    }
},
"PollSession": {
    "id": "PollSession",
    "description": "",
    "required": [
        "id",
        "poll_id",
        "course_id"
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The unique identifier for the poll session.",
            "example": 1023,
            "type": "integer"
        },
        "poll_id": {
            "description": "The id of the Poll this poll session is associated with",
            "example": 55,
            "type": "integer"
        },
        "course_id": {
            "description": "The id of the Course this poll session is associated with",
            "example": 1111,
            "type": "integer"
        },
        "course_section_id": {
            "description": "The id of the Course Section this poll session is associated with",
            "example": 444,
            "type": "integer"
        },
        "is_published": {
            "description": "Specifies whether or not this poll session has been published for students to participate in.",
            "example": "true",
            "type": "boolean"
        },
        "has_public_results": {
            "description": "Specifies whether the results are viewable by students.",
            "example": "true",
            "type": "boolean"
        },
        "created_at": {
            "description": "The time at which the poll session was created.",
            "example": "2014-01-07T15:16:18Z",
            "type": "string",
            "format": "date-time"
        },
        "results": {
            "description": "The results of the submissions of the poll. Each key is the poll choice id, and the value is the count of submissions.",
            "example": {
                "144": 10,
                "145": 3,
                "146": 27,
                "147": 8
            },
            "type": "object"
        },
        "poll_submissions": {
            "description": "If the poll session has public results, this will return an array of all submissions, viewable by both students and teachers. If the results are not public, for students it will return their submission only.",
            "$ref": "PollSubmission"
        }
    }
},
"PollSubmission": {
    "id": "PollSubmission",
    "description": "",
    "required": [
        "id",
        "poll_choice"
    ],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "The unique identifier for the poll submission.",
            "example": 1023,
            "type": "integer"
        },
        "poll_choice_id": {
            "description": "The unique identifier of the poll choice chosen for this submission.",
            "example": 155,
            "type": "integer"
        },
        "user_id": {
            "description": "the unique identifier of the user who submitted this poll submission.",
            "example": 4555,
            "type": "integer"
        },
        "created_at": {
            "description": "The date and time the poll submission was submitted.",
            "example": "2013-11-07T13:16:18Z",
            "type": "string",
            "format": "date-time"
        }
    }
},
"Proficiency": {
    "id": "Proficiency",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "ratings": {
            "description": "An array of proficiency ratings. See the ProficiencyRating specification above.",
            "example": [],
            "type": "array"
        }
    }
},
"ProficiencyRating": {
    "id": "ProficiencyRating",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "description": {
            "description": "The description of the rating",
            "example": "Exceeds Mastery",
            "type": "string"
        },
        "points": {
            "description": "A non-negative number of points for the rating",
            "example": 4,
            "type": "number"
        },
        "mastery": {
            "description": "Indicates the rating where mastery is first achieved",
            "example": false,
            "type": "boolean"
        },
        "color": {
            "description": "The hex color code of the rating",
            "example": "127A1B",
            "type": "string"
        }
    }
},
"Progress": {
    "id": "Progress",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "description": "the ID of the Progress object",
            "example": 1,
            "type": "integer"
        },
        "context_id": {
            "description": "the context owning the job.",
            "example": 1,
            "type": "integer"
        },
        "context_type": {
            "example": "Account",
            "type": "string"
        },
        "user_id": {
            "description": "the id of the user who started the job",
            "example": 123,
            "type": "integer"
        },
        "tag": {
            "description": "the type of operation",
            "example": "course_batch_update",
            "type": "string"
        },
        "completion": {
            "description": "percent completed",
            "example": 100,
            "type": "integer"
        },
        "workflow_state": {
            "description": "the state of the job one of 'queued', 'running', 'completed', 'failed'",
            "example": "completed",
            "type": "string",
            "allowableValues": {
                "values": [
                    "queued",
                    "running",
                    "completed",
                    "failed"
                ]
            }
        },
        "created_at": {
            "description": "the time the job was created",
            "example": "2013-01-15T15:00:00Z",
            "type": "datetime"
        },
        "updated_at": {
            "description": "the time the job was last updated",
            "example": "2013-01-15T15:04:00Z",
            "type": "datetime"
        },
        "message": {
            "description": "optional details about the job",
            "example": "17 courses processed",
            "type": "string"
        },
        "results": {
            "description": "optional results of the job. omitted when job is still pending",
            "example": {
                "id": "123"
            },
            "type": "object"
        },
        "url": {
            "description": "url where a progress update can be retrieved with an LTI access token",
            "example": "https://canvas.example.edu/api/lti/courses/1/progress/1",
            "type": "string"
        }
    }
},
"ProvisionalGrade": {
    "id": "ProvisionalGrade",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "provisional_grade_id": {
            "description": "The identifier for the provisional grade",
            "example": 23,
            "type": "integer"
        },
        "score": {
            "description": "The numeric score",
            "example": 90,
            "type": "integer"
        },
        "grade": {
            "description": "The grade",
            "example": "A-",
            "type": "string"
        },
        "grade_matches_current_submission": {
            "description": "Whether the grade was applied to the most current submission (false if the student resubmitted after grading)",
            "example": true,
            "type": "boolean"
        },
        "graded_at": {
            "description": "When the grade was given",
            "example": "2015-11-01T00:03:21-06:00",
            "type": "datetime"
        },
        "final": {
            "description": "Whether this is the 'final' provisional grade created by the moderator",
            "example": false,
            "type": "boolean"
        },
        "speedgrader_url": {
            "description": "A link to view this provisional grade in SpeedGrader™",
            "example": "http://www.example.com/courses/123/gradebook/speed_grader?...",
            "type": "string"
        }
    }
},
"Result": {
    "id": "Result",
    "description": "A pass/fail results for a student",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "id": {
            "type": "string",
            "example": "42",
            "description": "A unique identifier for this result"
        },
        "passed": {
            "type": "boolean",
            "example": true,
            "description": "Whether the user passed or not"
        },
        "assessed_at": {
            "type": "datetime",
            "example": "2014-05-13T00:01:57-06:00",
            "description": "When this result was recorded"
        },
        "links": {
            "$ref": "ResultLinks",
            "example": {
                "user": "42",
                "assessor": "23",
                "assessment": "5"
            },
            "description": "Unique identifiers of objects associated with this result"
        }
    }
},
"ResultLinks": {
    "id": "ResultLinks",
    "description": "Unique identifiers of objects associated with a result",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "user": {
            "type": "string",
            "example": "42",
            "description": "A unique identifier for the user to whom this result applies"
        },
        "assessor": {
            "type": "string",
            "example": "23",
            "description": "A unique identifier for the user who created this result"
        },
        "assessment": {
            "type": "string",
            "example": "5",
            "description": "A unique identifier for the assessment that this result is for"
        }
    }
},
"Submission": {
    "id": "Submission",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "lti_course_id": {
            "example": "66157096483e6b3a50bfedc6bac902c0b20a8241",
            "type": "string"
        },
        "course_id": {
            "example": 10000000000060,
            "type": "integer"
        },
        "assignment_id": {
            "description": "The submission's assignment id",
            "example": 23,
            "type": "integer"
        },
        "attempt": {
            "description": "This is the submission attempt number.",
            "example": 1,
            "type": "integer"
        },
        "body": {
            "description": "The content of the submission, if it was submitted directly in a text field.",
            "example": "There are three factors too...",
            "type": "string"
        },
        "submission_type": {
            "description": "The types of submission ex: ('online_text_entry'|'online_url'|'online_upload'|'media_recording'|'student_annotation')",
            "example": "online_text_entry",
            "type": "string",
            "allowableValues": {
                "values": [
                    "online_text_entry",
                    "online_url",
                    "online_upload",
                    "media_recording",
                    "student_annotation"
                ]
            }
        },
        "submitted_at": {
            "description": "The timestamp when the assignment was submitted",
            "example": "2012-01-01T01:00:00Z",
            "type": "datetime"
        },
        "url": {
            "description": "The URL of the submission (for 'online_url' submissions).",
            "type": "string"
        },
        "user_id": {
            "description": "The id of the user who created the submission",
            "example": 134,
            "type": "integer"
        },
        "eula_agreement_timestamp": {
            "description": "UTC timestamp showing when the user agreed to the EULA (if given by the tool provider)",
            "example": "1508250487578",
            "type": "string"
        },
        "workflow_state": {
            "description": "The current state of the submission",
            "example": "submitted",
            "type": "string",
            "allowableValues": {
                "values": [
                    "graded",
                    "submitted",
                    "unsubmitted",
                    "pending_review"
                ]
            }
        },
        "attachments": {
            "description": "Files that are attached to the submission",
            "$ref": "File"
        }
    }
},
"SubmissionHistory": {
    "id": "SubmissionHistory",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "submission_id": {
            "description": "the id of the submission",
            "example": 4,
            "type": "integer"
        },
        "versions": {
            "description": "an array of all the versions of this submission",
            "type": "array",
            "items": {
                "$ref": "SubmissionVersion"
            }
        }
    }
},
"SubmissionVersion": {
    "id": "SubmissionVersion",
    "description": "A SubmissionVersion object contains all the fields that a Submission object does, plus additional fields prefixed with current_* new_* and previous_* described below.",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "assignment_id": {
            "description": "the id of the assignment this submissions is for",
            "example": 22604,
            "type": "integer"
        },
        "assignment_name": {
            "description": "the name of the assignment this submission is for",
            "example": "some assignment",
            "type": "string"
        },
        "body": {
            "description": "the body text of the submission",
            "example": "text from the submission",
            "type": "string"
        },
        "current_grade": {
            "description": "the most up to date grade for the current version of this submission",
            "example": "100",
            "type": "string"
        },
        "current_graded_at": {
            "description": "the latest time stamp for the grading of this submission",
            "example": "2013-01-31T18:16:31Z",
            "type": "datetime"
        },
        "current_grader": {
            "description": "the name of the most recent grader for this submission",
            "example": "Grader Name",
            "type": "string"
        },
        "grade_matches_current_submission": {
            "description": "boolean indicating whether the grade is equal to the current submission grade",
            "example": true,
            "type": "boolean"
        },
        "graded_at": {
            "description": "time stamp for the grading of this version of the submission",
            "example": "2013-01-31T18:16:31Z",
            "type": "datetime"
        },
        "grader": {
            "description": "the name of the user who graded this version of the submission",
            "example": "Grader Name",
            "type": "string"
        },
        "grader_id": {
            "description": "the user id of the user who graded this version of the submission",
            "example": 67379,
            "type": "integer"
        },
        "id": {
            "description": "the id of the submission of which this is a version",
            "example": 11607,
            "type": "integer"
        },
        "new_grade": {
            "description": "the updated grade provided in this version of the submission",
            "example": "100",
            "type": "string"
        },
        "new_graded_at": {
            "description": "the timestamp for the grading of this version of the submission (alias for graded_at)",
            "example": "2013-01-31T18:16:31Z",
            "type": "datetime"
        },
        "new_grader": {
            "description": "alias for 'grader'",
            "example": "Grader Name",
            "type": "string"
        },
        "previous_grade": {
            "description": "the grade for the submission version immediately preceding this one",
            "example": "90",
            "type": "string"
        },
        "previous_graded_at": {
            "description": "the timestamp for the grading of the submission version immediately preceding this one",
            "example": "2013-01-29T12:12:12Z",
            "type": "datetime"
        },
        "previous_grader": {
            "description": "the name of the grader who graded the version of this submission immediately preceding this one",
            "example": "Graded on submission",
            "type": "string"
        },
        "score": {
            "description": "the score for this version of the submission",
            "example": 100,
            "type": "integer"
        },
        "user_name": {
            "description": "the name of the student who created this submission",
            "example": "student@example.com",
            "type": "string"
        },
        "submission_type": {
            "description": "the type of submission",
            "example": "online",
            "type": "string"
        },
        "url": {
            "description": "the url of the submission, if there is one",
            "type": "string"
        },
        "user_id": {
            "description": "the user ID of the student who created this submission",
            "example": 67376,
            "type": "integer"
        },
        "workflow_state": {
            "description": "the state of the submission at this version",
            "example": "unsubmitted",
            "type": "string"
        }
    }
},
"ToolSetting": {
    "id": "ToolSetting",
    "description": "",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "resource_type_code": {
            "description": "the resource type code of the resource handler to use to display originality reports",
            "example": "originality_reports",
            "type": "string"
        },
        "resource_url": {
            "description": "a URL that may be used to override the launch URL inferred by the specified resource_type_code. If used a 'resource_type_code' must also be specified.",
            "example": "http://www.test.com/originality_report",
            "type": "string"
        }
    }
},
"UsageRights": {
    "id": "UsageRights",
    "description": "Describes the copyright and license information for a File",
    "required": [],
    "deprecated": false,
    "deprecation_description": null,
    "properties": {
        "legal_copyright": {
            "type": "string",
            "description": "Copyright line for the file",
            "example": "(C) 2014 Incom Corporation Ltd"
        },
        "use_justification": {
            "type": "string",
            "description": "Justification for using the file in a Canvas course. Valid values are 'own_copyright', 'public_domain', 'used_by_permission', 'fair_use', 'creative_commons'",
            "example": "creative_commons"
        },
        "license": {
            "type": "string",
            "description": "License identifier for the file.",
            "example": "cc_by_sa"
        },
        "license_name": {
            "type": "string",
            "description": "Readable license name",
            "example": "CC Attribution Share-Alike"
        },
        "message": {
            "type": "string",
            "description": "Explanation of the action performed",
            "example": "4 files updated"
        },
        "file_ids": {
            "description": "List of ids of files that were updated",
            "type": "array",
            "items": {
                "type": "integer"
            },
            "example": [
                1,
                2,
                3
            ]
        }
    }
},
